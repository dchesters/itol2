



 # all commands and notes used during development of the ITOL2 project, are provided for review.

# 
# 
# project started 18th MAR 2016, 
# first submission to Systematic Entomology: 24-MAR-2017
# review received 27-Jun-2017, reject with resubmission encouraged.
# 
# 
# 
# 
# 
# 


###########################################################################################################
#
#
#
###########################################################################################################


# for supplement


cd ~/scripted_analyses/insect_TOL_analysis/submission_2019_APR/SUPPLEMENT/


# all commands
~/scripted_analyses/insect_TOL_analysis/docs/ITOL2_Notes_20190518 saved as pdf

# transcriptome matrix, processed. size 142 mb.
cp ~/scripted_analyses/insect_TOL_analysis/transcriptomes/insctNUCL.smatrix.RMmulti.epu transcriptomes_matrix.fas
# compressed to .zip is 44.2 mb, to .tar.xz is 18.4

# transcrimotme matrix meta-partitions:
cp ~/scripted_analyses/insect_TOL_analysis/backbone_tree/best_scheme_2017DEC.raxml_test transcriptomes_partition_scheme

# transcriptomes results with two node supports, no higher taxon labels
cp ~/scripted_analyses/insect_TOL_analysis/backbone_tree/NUCLsumtree_combined_labels.process_newick5 transcriptomes_result.nwk

# mitogenomes matrix
cp ~/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.smatrix mtgenomes_matrix.fas
# 7 mb, compressed to < 1mb

# mitogenomes result
cp ~/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd mtgenomes_result.nwk

# mtgenomes partition file
cp ~/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.partitionfile mtgenomes_partitions

# species level matrix:
cp ~/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA species_level_matrix.fas

# species level partitions
cp ~/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA.partitionfile species_level_partitions

# species level tree with SH-like node support
cp ~/scripted_analyses/insect_TOL_analysis/submission_2019_APR/RAxML_fastTreeSH_Support.itol2_SHsuport species_level_result.nwk

# other files to consider for supplement:
#	constraint trees for mt matrix and sp matrix tree searches
#	



########################################################################################################








###########################################################################################################
#
#
#
###########################################################################################################





	# 	INFER ORTHOLOGS



	# as of JUL 2017, SKIP this section





cd /home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/




genome browse by organism:
http://www.ncbi.nlm.nih.gov/genome/browse/

considerable gaps in the base of the arthopods for annotated genomes, 
limited to endopterygota/polyneoptera s[lpit, and hexapod / crustacean,
collembola and archeognatha must certainly be a priority for generation of annotated complete grnomes.



# seveal taxa chosen for infeering orths, 
# polyneoptera, holometabola and condylo, although not the most basal of insect

# proteomes, download in fasta format:

	Neoptera; Orthopteroidea; Dictyoptera; Isoptera; Termopsidae; Zootermopsis nevadensis:
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=203242
	Neoptera; Paraneoptera; Hemiptera; Heteroptera; Pentatomidae; Halyomorpha
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=298780
 	[Apis florea]
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=86991
 	[Tribolium castaneum]
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=12540
	[Papilio xuthus]
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=291600

09 aug 2016: added daphnia pulex
http://www.ncbi.nlm.nih.gov/protein?linkname=bioproject_protein&from_uid=12756

# might need to include daphnia and pediculus, 
# check annotated genomes to see if a better non-insect arthropod are available


# SHOULD BE .PROT

rm *.b
taxa=(Daphnia Zootermopsis Halyomorpha Apis Tribolium Papilio)
for i in ${!taxa[*]}; do tax=${taxa[$i]};echo "number:$i gene:$tax"
 # $id_format = 1, this ID passes through many subsequenet steps. ortho mcl makes single file will all seqs in it
 perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in $tax.prot -format 1
done

# Halyomorpha.prot.b Zootermopsis.prot.b Apis.prot.b Papilio.prot.b Tribolium.prot.b
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl_module.pm orthomcl_module.pm
cp *.b /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/sample_data/

# start this script to get the input files then interupt:
# two (Zootermopsis, Apis), three (Zootermopsis, Halyomorpha, Apis), 
# four (Zootermopsis, Halyomorpha, Tribolium, Apis), and five taxa (Zootermopsis, Halyomorpha, Tribolium, Apis, Papilio).
#  ....
#perl ~/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl.pl --mode 1 --fa_files "Daphnia.prot.b,Zootermopsis.prot.b,Apis.prot.b,Halyomorpha.prot.b,Tribolium.prot.b,Papilio.prot.b"
perl ~/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl.pl --mode 1 --fa_files "Daphnia.prot.b,Zootermopsis.prot.b,Apis.prot.b,Halyomorpha.prot.b,Tribolium.prot.b"
perl ~/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl.pl --mode 1 --fa_files "Daphnia.prot.b,Zootermopsis.prot.b,Apis.prot.b,Halyomorpha.prot.b"
perl ~/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl.pl --mode 1 --fa_files "Daphnia.prot.b,Zootermopsis.prot.b,Apis.prot.b"

# copy file:/home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/[DATE]/tmp/all.fa
# and .gg
# to working folder /home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/
# then rename DZA, then DZAH etc...
# orthomcl default alignments per hit is 1000

# perl ~/software/blast/blast-2.2.8/ncbi-blast-2.2.28+-src/c++/ReleaseMT/bin/legacy_blast.pl blastall -p blastp -i test1 -d test2 -e 1e-05 -o test3 -m 8 -a 1 -v 1000 -b 1000 --path /opt/blast/bin
makeblastdb-2.2.28+-64bit -in all.DZA.fa -dbtype prot -parse_seqids
blastp-2.2.28+-64bit -db all.DZA.fa -query all.DZA.fa -out all.DZA.blast -evalue 1e-05 -num_threads 1 -max_target_seqs 1000 -outfmt 6 -seg yes
# 4 hours to do 2 ... day and half to do 6

# then to run orthmcl, just need gene genome relation file, and blast file,
perl ~/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/orthomcl.pl --mode 3 --blast_file all.DZA.blast --gg_file all.DZA.gg

cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Mar_25/all_orthomcl.out ZAHTP.orthomcl
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Mar_26/all_orthomcl.out ZAHT.orthomcl
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Mar_27/all_orthomcl.out ZAH.orthomcl
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Mar_27_3/all_orthomcl.out ZA.orthomcl

cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Aug_11/all_orthomcl.out DZAHTP.orthomcl
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Aug_13_2/all_orthomcl.out DZAH.orthomcl
cp /home/douglas/software/orthomcl/ORTHOMCL_V1.4_mcl-02-063/ORTHOMCLV1.4/Aug_14/all_orthomcl.out DZA.orthomcl

# ZAHTP.orthomcl; ZAHT.orthomcl; ZAH.orthomcl; ZA.orthomcl
grep "6 taxa):" DZAHTP.orthomcl | wc -l

# select subset of lines for .compl files
grep "(6 genes,6 taxa):" DZAHTP.orthomcl | wc -l
grep "(6 genes,6 taxa):" DZAHTP.orthomcl > DZAHTP.orthomcl.compl


# orthoMLC :5=5676, 4=6043, 3=6400, 2=7105
# 1:1 orths:5=1081, 4=1659, 3=1970, 2=3737
# rbh orths:5=5429, 4=5787, 3=6214, 2=7029




# RBH alos, do this in a different folder ...



cd /home/douglas/scripted_analyses/insect_TOL_analysis/RBH/



cp /home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/*.prot.b .



taxa=(Daphnia Zootermopsis Halyomorpha Apis Tribolium Papilio)

for i in ${!taxa[*]}; do tax=${taxa[$i]};echo "number:$i gene:$tax"
makeblastdb-2.2.28+-64bit -in $tax.prot.b -dbtype prot -parse_seqids
done

# notes on blast options, recommended for getting rhb's:
# -use_sw_tback  Compute locally optimal Smith-Waterman alignments?
# soft masking saves computiation on db while still doing propper alignment: Schaffer et al., 2001)
# soft filtering of low information segments and SW alignment detects more ortholgs
# "F=s"            => \$opt_F; if ($filter_string =~ /m/) {$retval .= "-soft_masking true ";
# from moreno: -F ‘‘m S’’ -s T is equiv to -soft_masking true -seg yes -use_sw_tback

# can run these 4 at the same time!
rm *.blast_sufix
rm *.ORTH*
taxa2=(Daphnia Halyomorpha Apis Tribolium Papilio)
for i in ${!taxa2[*]}; do tax=${taxa2[$i]};echo "number:$i gene:$tax"
# reciprocal blasts:
blastp-2.2.28+-64bit -task blastp -db Zootermopsis.prot.b -query $tax.prot.b -out q.$tax.s.Zootermopsis.blast_sufix -max_target_seqs 1 -evalue 1e-10 -soft_masking true -seg yes -use_sw_tback -outfmt '6 qseqid sseqid evalue pident length'
blastp-2.2.28+-64bit -task blastp -db $tax.prot.b -query Zootermopsis.prot.b -out q.Zootermopsis.s.$tax.blast_sufix -max_target_seqs 1 -evalue 1e-10 -soft_masking true -seg yes -use_sw_tback -outfmt '6 qseqid sseqid evalue pident length'
in1=q.$tax.s.Zootermopsis.blast_sufix;in2=q.Zootermopsis.s.$tax.blast_sufix;out1=Zootermopsis.$tax.ORTH
# script to get 1-1 RTH
perl ~/scripted_analyses/treeoflife/scripts/reciprocal_best_hits.pl $in1 $in2 $out1
done



# two (Zootermopsis, Apis), three (Zootermopsis, Halyomorpha, Apis), 
# four (Zootermopsis, Halyomorpha, Tribolium, Apis), and five taxa (Zootermopsis, Halyomorpha, Tribolium, Apis, Papilio).
ls -l *.ORTH.1-1
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH.1-1 Zootermopsis.Apis.ORTH.1-1 Zootermopsis.Papilio.ORTH.1-1 Zootermopsis.Halyomorpha.ORTH.1-1 Zootermopsis.Tribolium.ORTH.1-1
5=1081
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH.1-1 Zootermopsis.Apis.ORTH.1-1 Zootermopsis.Halyomorpha.ORTH.1-1 Zootermopsis.Tribolium.ORTH.1-1
4=1659
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH.1-1 Zootermopsis.Apis.ORTH.1-1 Zootermopsis.Halyomorpha.ORTH.1-1
3=1970
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH.1-1 Zootermopsis.Apis.ORTH.1-1
2=3737

perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH Zootermopsis.Apis.ORTH Zootermopsis.Papilio.ORTH Zootermopsis.Halyomorpha.ORTH Zootermopsis.Tribolium.ORTH
5=5429
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH Zootermopsis.Apis.ORTH Zootermopsis.Halyomorpha.ORTH Zootermopsis.Tribolium.ORTH
4=5787
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH Zootermopsis.Apis.ORTH Zootermopsis.Halyomorpha.ORTH
3=6214
perl ~/scripted_analyses/treeoflife/scripts/universal_orthologs.pl Zootermopsis.Daphnia.ORTH Zootermopsis.Apis.ORTH
2=7029


compare orths from different methods:


perl ~/scripted_analyses/insect_TOL_analysis/scripts/compare_core_ortholog_methods.pl

# stringent use of onyl 800 congruent orths has aditional advantage of computational tractibility

	# orthomcl:DZAHTP.orthomcl.compl; rbh:DZAHTP.rbh1-1
# count ORTHOMCL orthologs:1477; count_orthologs2:815
# GOOD:796, BAD:19, PROP:0.976687116564417
	# orthomcl:DZAHT.orthomcl.compl; rbh_file:DZAHT.rbh1-1
# count ORTHOMCL orthologs:1922; count_orthologs2:1230
# GOOD:1202, 	BAD:28, PROP:0.977235772357724
	# orthomcl_file:DZAH.orthomcl.compl; rbh_file:DZAH.rbh1-1
# count ORTHOMCL orthologs:2076, count_orthologs2:1403
# GOOD:1374, 	BAD:29, PROP:0.979330007127584
	# orthomcl_file:DZA.orthomcl.compl, rbh_file:DZA.rbh1-1
# count ORTHOMCL orthologs:3374, count_orthologs2:2357
# GOOD:2301, BAD:56, PROP:0.976240984302079



# misof used Chelicerata and Pancrustacea, 1478

the oft used insecta core ortholog 
 was made using Daphnia (Crustacea, arthropod)
	Ixodes (Arachnida), Capitella (Annelida) which is not even an arthropod.
	insecta core ortholog is really a misnomer.
Inparanoid-TC , 1579 , approach (Ebersberger et al. 2009


# ZAHTP.orthomcl; ZAHT.orthomcl; ZAH.orthomcl; ZA.orthomcl

/home/douglas/scripted_analyses/insect_TOL_analysis/RBH/ZAHTP.rbh
/home/douglas/scripted_analyses/insect_TOL_analysis/RBH/ZAHT.rbh
/home/douglas/scripted_analyses/insect_TOL_analysis/RBH/ZAH.rbh
/home/douglas/scripted_analyses/insect_TOL_analysis/RBH/ZA.rbh

from Li 2003:
Clusters obtained us-ing the two methods were compared by de-termining the number of groups that are
identical, and those that are coherent—that is, where the sequences in a group gener-
ated by one method are a subset of se-quences in a group generated by the other
(note that identical groups are a subset of coherent groups)



	Orothologs TEXT

# legacy commands used by orthoMCL were converted to Blast + using the script legacy_blast.pl, 
# then all against all blast conducted using Blast+ v2.2.8.


Usually ortholog groups actually have orthologs, in-paralogs, co-orthologs. 
Inference on protein sequences is more sensitive than dna.
OrthoMCL uses rbh, normalizes blast scores to remove in-paralogs, clusters with MCL
 hamstr does this . 
alternative 


Install HAMSTR first … from the readme I gather this software is used to get orthologs of an already inferred core set. Hamstr extends core ortholog set use reciprocity criteriom. Seems it uses a hmm in one direction and blast in the other. Hamstr combines HMM with RBH
OrthoMCL (Li et al. 2003)


House CH. The tree of life viewed through the contents of genomes. 
Methods Mol Biol. 2009;532:141–161

Krause A., Stoye J., Vingron M. 2005. Large scale hierarchical clustering
of protein sequences. BMC Bioinformatics 6:15.




############################################################################################################


# after review 1, skip ortholog inference step. just use misof's.

# downloaded from :
# http://datadryad.org/resource/doi:10.5061/dryad.3c0f1

 http://dx.doi.org/10.5061/dryad.3c0f1

/home/douglas/scripted_analyses/insect_TOL_analysis/data/Misof_et_al_Supplementary_Archives/Supplementary_Archive_1/1kite_orthologset_hexapoda/1kite_100taxa_hexapoda_2_HMMer3/fa_dir






############################################################################################################





	TRANSCRIPTOMES





cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/






# downloaded tab delim list from 
# http://www.ncbi.nlm.nih.gov/Traces/wgs/
# # no good, its an incomplete list.
# insecta[orgn] AND (TSA OR WGS)
# click this-> TSA         GAVX02000001-GAVX02040951
# download tab, fasta
# these are where the data found if manual ..
# send accession list to file, master records have accession  \w+0+.\d
# once again im going round in circles trying to figure out how to download omic data from genbank.
# wget -c http://www.ncbi.nlm.nih.gov/Traces/wgs/?download=GAYY02.1.fsa_nt.gz
# wget -c https://www.ncbi.nlm.nih.gov/bioproject/219519
# wget -c http://www.ncbi.nlm.nih.gov/Traces/wgs/?val=GAYY02
# ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/
# cat ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/



# no longer works:
# wget ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/



rm index.html*
wget ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/G/
wget ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/H/
wget ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/I/



# should be saved as index.html...
# file is save in simple format, open in browser and copy to text file and save as tsa_list_20170712
##  tsa.GAYY.1.fsa_nt.gz ; amino acid:tsa.GEEE.1.fsa_aa.gz

grep "fsa_nt.gz" /home/douglas/scripted_analyses/insect_TOL_analysis/data/tsa_list_20170712 | wc -l
# v1:1469 transcriptomes .... July2017:2623 ! ... 2634

# not sure what this is:
grep "mstr.gbff.gz" /home/douglas/scripted_analyses/insect_TOL_analysis/data/tsa_list_201707 | wc -l




# $limit_taxon = "Hexapoda"; # Insecta ; Jul2017, developed interest in springtails, thus expand to hexapods ....
# run script 2-part ... job == 1 then job ==2 
# example download command:
# 	wget -c ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/tsa.GABT.mstr.gbff.gz
# first part 3.5 hours
# second part quick, makes new bash file 'transcriptome_download_commands'
# seems ncbi directories were changed (by coincidence right when i was running this step). 
# now entries assigned startign G, H, I are in their own subdirectories,
# although the links from the index page are not yet changed, so not working...


tsa_list=/home/douglas/scripted_analyses/insect_TOL_analysis/data/tsa_list_20170712
perl ~/scripted_analyses/insect_TOL_analysis/scripts/download_tsa_summaries.pl $tsa_list


	# number_of_files:1416; 	number_of_insects:319; 	total number genera found:230
	# hexapods jul2017:
	# number_of_files:2392; 	number_of_insects:614; total number genera found:445
	# misof used ~126 sp.


/home/douglas/scripted_analyses/insect_TOL_analysis/data/transcriptome_download_commands


# need occas:GAXJ02 campodea (diplura):GAYN02, pogonognathellus (collembola):GATD02, acerentomon (protura):GAXE02
# for hexapods the outgroup will be a crustacean, perhaps speleonectes

# find it:
zgrep "Speleonectes" *
# tsa.GAJM.mstr.gbff.gz
wget ftp://ftp.ncbi.nlm.nih.gov/genbank/tsa/G/tsa.GAJM.*.fsa_nt.gz





############################################################################################################





cd ~/scripted_analyses/insect_TOL_analysis/orthologs/




# for orthologs inferred earier, get seuecnes, process them same as TOL1 so easy to analyse


# jul2017, just use misofs orthologs, process the ids:
# $process_misof_orthologs 	= 1;
perl ~/scripted_analyses/insect_TOL_analysis/scripts/process_ortholog_seqs.pl

# a sed command something like this would be more sucinct
# sed 's/|[^\n]*//g' $file1



# ITOL1 insecta core ortyhologs processed:
	/home/douglas/scripted_analyses/COIevol/corrections/transcriptomes/InsectaCoreOrthologs
# orthologs i infered myself, initially for ITOL2
	/home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/InsCoreOrth
# misofs orthologs:
	/home/douglas/scripted_analyses/insect_TOL_analysis/data/Misof_et_al_Supplementary_Archives/Supplementary_Archive_1/1kite_orthologset_hexapoda/1kite_100taxa_hexapoda_2_HMMer3/1kite_100taxa_hexapoda_2_HMMer3.fa
# misofs orthologs, processed fasta IDs:
 	/home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/Misof_CO



# itol2v1:
cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/all_TSA.fsa_nt/
# jul2017:
cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/genus_filtered/
# or maybe this one!
cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/



# first unzip all_TSA.fsa_nt.tar.gz
list_ortholog_files=(tsa.*.fsa_nt.gz)
for i in ${!list_ortholog_files[*]}
 do current_file=${list_ortholog_files[$i]};echo current file $i is $current_file
 gunzip $current_file
done


list_ortholog_files=(tsa.*.fsa_nt)
for i in ${!list_ortholog_files[*]}
  do current_file=${list_ortholog_files[$i]};echo current file $i is $current_file
  perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in $current_file -format 1
done
# warning, check parse_ncbi_deflines_ERROR_LOG, if theres stuff added, some of your files are truncated


# transcoder run on 450 transcriptomes, produces 32 GB of output.
# is there an option for TD to ouptut just one orf per transcript?
list_transcriptomes=(tsa.*.fsa_nt.b)
for i in ${!list_transcriptomes[*]}; do file=${list_transcriptomes[$i]};echo "number:$i file:$file"
  /home/douglas/software/transdecoder/TransDecoder-3.0.1/TransDecoder.LongOrfs -t $file
done

# transdecoder outputs this:
# >Gene.5::Belgica_antarctica_418280532::g.5::m.5 type:5prime_partial len:100 gc:universal Belgica_antarctica_418280532:1821-1522(-)



# skip this, 
# i noticed there are often multiple orfs per transcript,
# which makes duplicate sequence ids if filtered simply as per here,
# thus need something which deals with the multiple orfs in some way ...
# copy key results file into working directroy, modify IDs
# rm *.orf
# list_transcriptomes=(tsa.*.fsa_nt.b)
# path=/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/
# for i in ${!list_transcriptomes[*]}; do file=${list_transcriptomes[$i]};echo "number:$i file:$file"
#   sed 's/>Gene[^:]*::\([^:]*\)::.*/>\1/' $path$file.transdecoder_dir/longest_orfs.pep > $file.orf
# done

rm *.orf
list_transcriptomes=(tsa.*.fsa_nt.b)
perl ~/scripted_analyses/insect_TOL_analysis/scripts/process_orfs.pl ${list_transcriptomes[*]}
# now delete all the transdecoder outputs


ortholog=/home/douglas/scripted_analyses/insect_TOL_analysis/data/Misof_et_al_Supplementary_Archives/Supplementary_Archive_1/1kite_orthologset_hexapoda/1kite_100taxa_hexapoda_2_HMMer3/hmm_dir/EOG5B2RC0.hmm
hmmset=/home/douglas/scripted_analyses/insect_TOL_analysis/data/Misof_et_al_Supplementary_Archives/Supplementary_Archive_1/1kite_orthologset_hexapoda/1kite_100taxa_hexapoda_2_HMMer3/1kite_100taxa_hexapoda_2_HMMer3.fa
transcriptome=/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/tsa.GAAB.1.fsa_nt.b.orf

# -taxon=test1 

-blastpath=
# -hmmpath=/home/douglas/scripted_analyses/insect_TOL_analysis/hamstr
# -hmm= is comma seperated list, if not defined, will use all
# uses usearch v 9.2.64 , ublast algorithm, more approprate for protein or transslated searches that usearch
# ublast databases were made using usearch9.2.64_i86linux32 -makeudb_usearch
# misofs hmm's use amino acids
# misof used E-value cutoff for the pHMM search of 1E-05 
# default evalue for hamstr seems far too permissive, wastes time going through all the poor hits
# outpath, -outpath=$path$transcriptome 
# -hmm=EOG5B2RC0.hmm 


# rm hamstrsearch_tsa_1kite.out




cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/

path=/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/
# list_transcriptomes=(tsa.*.fsa_nt.b.orf)

# will need restarting:
# tsa.GAAB.1.fsa_nt.b.orf tsa.GAUY.1.fsa_nt.b.orf tsa.GBFA.1.fsa_nt.b.orf 
list_transcriptomes=(tsa.GBQH.1.fsa_nt.b.orf tsa.GDKB.1.fsa_nt.b.orf tsa.GAAK.1.fsa_nt.b.orf tsa.GAUZ.1.fsa_nt.b.orf tsa.GBGB.1.fsa_nt.b.orf tsa.GBQI.1.fsa_nt.b.orf tsa.GDKQ.1.fsa_nt.b.orf tsa.GAAV.1.fsa_nt.b.orf tsa.GAVA.1.fsa_nt.b.orf tsa.GBGD.1.fsa_nt.b.orf tsa.GBQJ.1.fsa_nt.b.orf tsa.GDKS.1.fsa_nt.b.orf tsa.GABB.1.fsa_nt.b.orf tsa.GAVB.1.fsa_nt.b.orf tsa.GBGG.1.fsa_nt.b.orf tsa.GBQK.1.fsa_nt.b.orf tsa.GDLS.1.fsa_nt.b.orf tsa.GABK.1.fsa_nt.b.orf tsa.GAVD.1.fsa_nt.b.orf tsa.GBHB.1.fsa_nt.b.orf tsa.GBQL.1.fsa_nt.b.orf tsa.GDQN.1.fsa_nt.b.orf tsa.GABY.1.fsa_nt.b.orf tsa.GAVM.1.fsa_nt.b.orf tsa.GBHN.1.fsa_nt.b.orf tsa.GBQM.1.fsa_nt.b.orf tsa.GDQV.1.fsa_nt.b.orf tsa.GACJ.1.fsa_nt.b.orf tsa.GAVV.1.fsa_nt.b.orf tsa.GBID.1.fsa_nt.b.orf tsa.GBQN.1.fsa_nt.b.orf tsa.GDVG.1.fsa_nt.b.orf tsa.GACO.1.fsa_nt.b.orf tsa.GAVW.1.fsa_nt.b.orf tsa.GBJX.1.fsa_nt.b.orf tsa.GBQO.1.fsa_nt.b.orf tsa.GEBL.1.fsa_nt.b.orf tsa.GACP.1.fsa_nt.b.orf tsa.GAVX.1.fsa_nt.b.orf tsa.GBKM.1.fsa_nt.b.orf tsa.GBQP.1.fsa_nt.b.orf tsa.GEBQ.1.fsa_nt.b.orf tsa.GACR.1.fsa_nt.b.orf tsa.GAWC.1.fsa_nt.b.orf tsa.GBKU.1.fsa_nt.b.orf tsa.GBQR.1.fsa_nt.b.orf tsa.GECK.1.fsa_nt.b.orf tsa.GACU.1.fsa_nt.b.orf tsa.GAWD.1.fsa_nt.b.orf tsa.GBKZ.1.fsa_nt.b.orf tsa.GBQS.1.fsa_nt.b.orf tsa.GECM.1.fsa_nt.b.orf tsa.GACV.1.fsa_nt.b.orf tsa.GAWE.1.fsa_nt.b.orf tsa.GBLA.1.fsa_nt.b.orf tsa.GBQU.1.fsa_nt.b.orf tsa.GECN.1.fsa_nt.b.orf tsa.GACW.1.fsa_nt.b.orf tsa.GAWF.1.fsa_nt.b.orf tsa.GBLB.1.fsa_nt.b.orf tsa.GBQV.1.fsa_nt.b.orf tsa.GECQ.1.fsa_nt.b.orf tsa.GACX.1.fsa_nt.b.orf tsa.GAWG.1.fsa_nt.b.orf tsa.GBLE.1.fsa_nt.b.orf tsa.GBRX.1.fsa_nt.b.orf tsa.GECT.1.fsa_nt.b.orf tsa.GACY.1.fsa_nt.b.orf tsa.GAWI.1.fsa_nt.b.orf tsa.GBLF.1.fsa_nt.b.orf tsa.GBSB.1.fsa_nt.b.orf tsa.GECU.1.fsa_nt.b.orf tsa.GACZ.1.fsa_nt.b.orf tsa.GAWJ.1.fsa_nt.b.orf tsa.GBLN.1.fsa_nt.b.orf tsa.GBSU.1.fsa_nt.b.orf tsa.GECZ.1.fsa_nt.b.orf tsa.GADB.1.fsa_nt.b.orf tsa.GAWK.1.fsa_nt.b.orf tsa.GBLP.1.fsa_nt.b.orf tsa.GBTF.1.fsa_nt.b.orf tsa.GEDB.1.fsa_nt.b.orf tsa.GADH.1.fsa_nt.b.orf tsa.GAWM.1.fsa_nt.b.orf tsa.GBLR.1.fsa_nt.b.orf tsa.GBTL.1.fsa_nt.b.orf tsa.GEDC.1.fsa_nt.b.orf tsa.GADK.1.fsa_nt.b.orf tsa.GAWN.1.fsa_nt.b.orf tsa.GBLS.1.fsa_nt.b.orf tsa.GBTM.1.fsa_nt.b.orf tsa.GEDO.1.fsa_nt.b.orf tsa.GAEO.1.fsa_nt.b.orf tsa.GAWP.1.fsa_nt.b.orf tsa.GBLU.1.fsa_nt.b.orf tsa.GBTP.1.fsa_nt.b.orf tsa.GEDY.1.fsa_nt.b.orf tsa.GAEQ.1.fsa_nt.b.orf tsa.GAWQ.1.fsa_nt.b.orf tsa.GBLX.1.fsa_nt.b.orf tsa.GBTQ.1.fsa_nt.b.orf tsa.GEEF.1.fsa_nt.b.orf tsa.GAGF.1.fsa_nt.b.orf tsa.GAWR.1.fsa_nt.b.orf tsa.GBMA.1.fsa_nt.b.orf tsa.GBTU.1.fsa_nt.b.orf tsa.GEES.1.fsa_nt.b.orf tsa.GAGH.1.fsa_nt.b.orf tsa.GAWT.1.fsa_nt.b.orf tsa.GBME.1.fsa_nt.b.orf tsa.GBTY.1.fsa_nt.b.orf tsa.GEFG.1.fsa_nt.b.orf tsa.GAIW.1.fsa_nt.b.orf tsa.GAWU.1.fsa_nt.b.orf tsa.GBMG.1.fsa_nt.b.orf tsa.GBTZ.1.fsa_nt.b.orf tsa.GEIF.1.fsa_nt.b.orf tsa.GAIX.1.fsa_nt.b.orf tsa.GAWW.1.fsa_nt.b.orf tsa.GBMJ.1.fsa_nt.b.orf tsa.GBUA.1.fsa_nt.b.orf tsa.GELG.1.fsa_nt.b.orf tsa.GAIZ.1.fsa_nt.b.orf tsa.GAWX.1.fsa_nt.b.orf tsa.GBMP.1.fsa_nt.b.orf tsa.GBUJ.1.fsa_nt.b.orf tsa.GELL.1.fsa_nt.b.orf tsa.GAJC.1.fsa_nt.b.orf tsa.GAWY.1.fsa_nt.b.orf tsa.GBMS.1.fsa_nt.b.orf tsa.GBUM.1.fsa_nt.b.orf tsa.GELV.1.fsa_nt.b.orf tsa.GAJM.1.fsa_nt.b.orf tsa.GAWZ.1.fsa_nt.b.orf tsa.GBMT.1.fsa_nt.b.orf tsa.GBUN.1.fsa_nt.b.orf tsa.GEMI.1.fsa_nt.b.orf tsa.GAJS.1.fsa_nt.b.orf tsa.GAXA.1.fsa_nt.b.orf tsa.GBMU.1.fsa_nt.b.orf tsa.GBUO.1.fsa_nt.b.orf tsa.GEMJ.1.fsa_nt.b.orf tsa.GAJV.1.fsa_nt.b.orf tsa.GAXB.1.fsa_nt.b.orf tsa.GBMW.1.fsa_nt.b.orf tsa.GBUP.1.fsa_nt.b.orf tsa.GEMK.1.fsa_nt.b.orf tsa.GAJX.1.fsa_nt.b.orf tsa.GAXC.1.fsa_nt.b.orf tsa.GBMX.1.fsa_nt.b.orf tsa.GBUQ.1.fsa_nt.b.orf tsa.GENH.1.fsa_nt.b.orf tsa.GAJY.1.fsa_nt.b.orf tsa.GAXD.1.fsa_nt.b.orf tsa.GBNB.1.fsa_nt.b.orf tsa.GBUY.1.fsa_nt.b.orf tsa.GENI.1.fsa_nt.b.orf tsa.GAKJ.1.fsa_nt.b.orf tsa.GAXE.1.fsa_nt.b.orf tsa.GBND.1.fsa_nt.b.orf tsa.GBVB.1.fsa_nt.b.orf tsa.GENJ.1.fsa_nt.b.orf tsa.GALA.1.fsa_nt.b.orf tsa.GAXF.1.fsa_nt.b.orf tsa.GBNF.1.fsa_nt.b.orf tsa.GBVD.1.fsa_nt.b.orf tsa.GENM.1.fsa_nt.b.orf tsa.GALX.1.fsa_nt.b.orf tsa.GAXG.1.fsa_nt.b.orf tsa.GBNG.1.fsa_nt.b.orf tsa.GBVE.1.fsa_nt.b.orf tsa.GENN.1.fsa_nt.b.orf tsa.GAMC.1.fsa_nt.b.orf tsa.GAXH.1.fsa_nt.b.orf tsa.GBNH.1.fsa_nt.b.orf tsa.GBVF.1.fsa_nt.b.orf tsa.GENO.1.fsa_nt.b.orf tsa.GAMM.1.fsa_nt.b.orf tsa.GAXI.1.fsa_nt.b.orf tsa.GBNI.1.fsa_nt.b.orf tsa.GBVG.1.fsa_nt.b.orf tsa.GENP.1.fsa_nt.b.orf tsa.GANH.1.fsa_nt.b.orf tsa.GAXJ.1.fsa_nt.b.orf tsa.GBNJ.1.fsa_nt.b.orf tsa.GBVH.1.fsa_nt.b.orf tsa.GENR.1.fsa_nt.b.orf tsa.GANO.1.fsa_nt.b.orf tsa.GAXL.1.fsa_nt.b.orf tsa.GBNN.1.fsa_nt.b.orf tsa.GBVK.1.fsa_nt.b.orf tsa.GENS.1.fsa_nt.b.orf tsa.GANS.1.fsa_nt.b.orf tsa.GAXM.1.fsa_nt.b.orf tsa.GBNO.1.fsa_nt.b.orf tsa.GBVL.1.fsa_nt.b.orf tsa.GENX.1.fsa_nt.b.orf tsa.GAOM.1.fsa_nt.b.orf tsa.GAXN.1.fsa_nt.b.orf tsa.GBNP.1.fsa_nt.b.orf tsa.GBVM.1.fsa_nt.b.orf tsa.GEOA.1.fsa_nt.b.orf tsa.GAOP.1.fsa_nt.b.orf tsa.GAXO.1.fsa_nt.b.orf tsa.GBNQ.1.fsa_nt.b.orf tsa.GBVP.1.fsa_nt.b.orf tsa.GEOB.1.fsa_nt.b.orf tsa.GAPE.1.fsa_nt.b.orf tsa.GAXP.1.fsa_nt.b.orf tsa.GBNR.1.fsa_nt.b.orf tsa.GBVT.1.fsa_nt.b.orf tsa.GEOC.1.fsa_nt.b.orf tsa.GAPL.1.fsa_nt.b.orf tsa.GAXQ.1.fsa_nt.b.orf tsa.GBNS.1.fsa_nt.b.orf tsa.GBVU.1.fsa_nt.b.orf tsa.GEOE.1.fsa_nt.b.orf tsa.GAPT.1.fsa_nt.b.orf tsa.GAXR.1.fsa_nt.b.orf tsa.GBNW.1.fsa_nt.b.orf tsa.GBWA.1.fsa_nt.b.orf tsa.GEOG.1.fsa_nt.b.orf tsa.GAPU.1.fsa_nt.b.orf tsa.GAXS.1.fsa_nt.b.orf tsa.GBNX.1.fsa_nt.b.orf tsa.GBWC.1.fsa_nt.b.orf tsa.GEOJ.1.fsa_nt.b.orf tsa.GAQV.1.fsa_nt.b.orf tsa.GAXT.1.fsa_nt.b.orf tsa.GBNY.1.fsa_nt.b.orf tsa.GBWD.1.fsa_nt.b.orf tsa.GEOM.1.fsa_nt.b.orf tsa.GAQW.1.fsa_nt.b.orf tsa.GAXW.1.fsa_nt.b.orf tsa.GBNZ.1.fsa_nt.b.orf tsa.GBWE.1.fsa_nt.b.orf tsa.GEOS.1.fsa_nt.b.orf tsa.GAQX.1.fsa_nt.b.orf tsa.GAXX.1.fsa_nt.b.orf tsa.GBOA.1.fsa_nt.b.orf tsa.GBWF.1.fsa_nt.b.orf tsa.GEOT.1.fsa_nt.b.orf tsa.GARD.1.fsa_nt.b.orf tsa.GAXZ.1.fsa_nt.b.orf tsa.GBOB.1.fsa_nt.b.orf tsa.GBWG.1.fsa_nt.b.orf tsa.GEOV.1.fsa_nt.b.orf tsa.GARF.1.fsa_nt.b.orf tsa.GAYA.1.fsa_nt.b.orf tsa.GBOC.1.fsa_nt.b.orf tsa.GBWH.1.fsa_nt.b.orf tsa.GEOW.1.fsa_nt.b.orf tsa.GARK.1.fsa_nt.b.orf tsa.GAYB.1.fsa_nt.b.orf tsa.GBOE.1.fsa_nt.b.orf tsa.GBWI.1.fsa_nt.b.orf tsa.GETI.1.fsa_nt.b.orf tsa.GASE.1.fsa_nt.b.orf tsa.GAYC.1.fsa_nt.b.orf tsa.GBOG.1.fsa_nt.b.orf tsa.GBWJ.1.fsa_nt.b.orf tsa.GETQ.1.fsa_nt.b.orf tsa.GASG.1.fsa_nt.b.orf tsa.GAYD.1.fsa_nt.b.orf tsa.GBOH.1.fsa_nt.b.orf tsa.GBWM.1.fsa_nt.b.orf tsa.GETS.1.fsa_nt.b.orf tsa.GASM.1.fsa_nt.b.orf tsa.GAYF.1.fsa_nt.b.orf tsa.GBOI.1.fsa_nt.b.orf tsa.GBWN.1.fsa_nt.b.orf tsa.GEUD.1.fsa_nt.b.orf tsa.GASN.1.fsa_nt.b.orf tsa.GAYH.1.fsa_nt.b.orf tsa.GBOJ.1.fsa_nt.b.orf tsa.GBWO.1.fsa_nt.b.orf tsa.GEVD.1.fsa_nt.b.orf tsa.GASO.1.fsa_nt.b.orf tsa.GAYI.1.fsa_nt.b.orf tsa.GBOK.1.fsa_nt.b.orf tsa.GBWP.1.fsa_nt.b.orf tsa.GEVJ.1.fsa_nt.b.orf tsa.GASQ.1.fsa_nt.b.orf tsa.GAYJ.1.fsa_nt.b.orf tsa.GBOL.1.fsa_nt.b.orf tsa.GBWQ.1.fsa_nt.b.orf tsa.GEWY.1.fsa_nt.b.orf tsa.GASS.1.fsa_nt.b.orf tsa.GAYK.1.fsa_nt.b.orf tsa.GBOM.1.fsa_nt.b.orf tsa.GBWS.1.fsa_nt.b.orf tsa.GEXM.1.fsa_nt.b.orf tsa.GAST.1.fsa_nt.b.orf tsa.GAYL.1.fsa_nt.b.orf tsa.GBON.1.fsa_nt.b.orf tsa.GBWU.1.fsa_nt.b.orf tsa.GEZK.1.fsa_nt.b.orf tsa.GASV.1.fsa_nt.b.orf tsa.GAYM.1.fsa_nt.b.orf tsa.GBOQ.1.fsa_nt.b.orf tsa.GBWV.1.fsa_nt.b.orf tsa.GEZO.1.fsa_nt.b.orf tsa.GASW.1.fsa_nt.b.orf tsa.GAYN.1.fsa_nt.b.orf tsa.GBOR.1.fsa_nt.b.orf tsa.GBWX.1.fsa_nt.b.orf tsa.GEZY.1.fsa_nt.b.orf tsa.GASX.1.fsa_nt.b.orf tsa.GAYO.1.fsa_nt.b.orf tsa.GBOS.1.fsa_nt.b.orf tsa.GBWY.1.fsa_nt.b.orf tsa.GEZZ.1.fsa_nt.b.orf tsa.GATA.1.fsa_nt.b.orf tsa.GAYP.1.fsa_nt.b.orf tsa.GBOU.1.fsa_nt.b.orf tsa.GBWZ.1.fsa_nt.b.orf tsa.GFAF.1.fsa_nt.b.orf tsa.GATB.1.fsa_nt.b.orf tsa.GAYQ.1.fsa_nt.b.orf tsa.GBOY.1.fsa_nt.b.orf tsa.GBXA.1.fsa_nt.b.orf tsa.GFBA.1.fsa_nt.b.orf tsa.GATC.1.fsa_nt.b.orf tsa.GAYV.1.fsa_nt.b.orf tsa.GBPE.1.fsa_nt.b.orf tsa.GBXD.1.fsa_nt.b.orf tsa.GFBD.1.fsa_nt.b.orf tsa.GATD.1.fsa_nt.b.orf tsa.GAYY.1.fsa_nt.b.orf tsa.GBPG.1.fsa_nt.b.orf tsa.GBXH.1.fsa_nt.b.orf tsa.GFBH.1.fsa_nt.b.orf tsa.GATG.1.fsa_nt.b.orf tsa.GAYZ.1.fsa_nt.b.orf tsa.GBPH.1.fsa_nt.b.orf tsa.GBYB.1.fsa_nt.b.orf tsa.GFCJ.1.fsa_nt.b.orf tsa.GATH.1.fsa_nt.b.orf tsa.GAZA.1.fsa_nt.b.orf tsa.GBPI.1.fsa_nt.b.orf tsa.GBYD.1.fsa_nt.b.orf tsa.GFCP.1.fsa_nt.b.orf tsa.GATI.1.fsa_nt.b.orf tsa.GAZB.1.fsa_nt.b.orf tsa.GBPJ.1.fsa_nt.b.orf tsa.GBYH.1.fsa_nt.b.orf tsa.GFCT.1.fsa_nt.b.orf tsa.GATJ.1.fsa_nt.b.orf tsa.GAZD.1.fsa_nt.b.orf tsa.GBPM.1.fsa_nt.b.orf tsa.GBZB.1.fsa_nt.b.orf tsa.GFCX.1.fsa_nt.b.orf tsa.GATU.1.fsa_nt.b.orf tsa.GAZE.1.fsa_nt.b.orf tsa.GBPN.1.fsa_nt.b.orf tsa.GBZD.1.fsa_nt.b.orf tsa.GFCY.1.fsa_nt.b.orf tsa.GATV.1.fsa_nt.b.orf tsa.GAZF.1.fsa_nt.b.orf tsa.GBPO.1.fsa_nt.b.orf tsa.GBZE.1.fsa_nt.b.orf tsa.GFDF.1.fsa_nt.b.orf tsa.GATW.1.fsa_nt.b.orf tsa.GAZG.1.fsa_nt.b.orf tsa.GBPP.1.fsa_nt.b.orf tsa.GBZL.1.fsa_nt.b.orf tsa.GFDG.1.fsa_nt.b.orf tsa.GATX.1.fsa_nt.b.orf tsa.GAZH.1.fsa_nt.b.orf tsa.GBPQ.1.fsa_nt.b.orf tsa.GCEQ.1.fsa_nt.b.orf tsa.GFDL.1.fsa_nt.b.orf tsa.GATY.1.fsa_nt.b.orf tsa.GAZM.1.fsa_nt.b.orf tsa.GBPR.1.fsa_nt.b.orf tsa.GCET.1.fsa_nt.b.orf tsa.GFME.1.fsa_nt.b.orf tsa.GATZ.1.fsa_nt.b.orf tsa.GAZN.1.fsa_nt.b.orf tsa.GBPS.1.fsa_nt.b.orf tsa.GCJP.1.fsa_nt.b.orf tsa.GFMJ.1.fsa_nt.b.orf tsa.GAUE.1.fsa_nt.b.orf tsa.GAZT.1.fsa_nt.b.orf tsa.GBPT.1.fsa_nt.b.orf tsa.GCKB.1.fsa_nt.b.orf tsa.GFMO.1.fsa_nt.b.orf tsa.GAUF.1.fsa_nt.b.orf tsa.GAZU.1.fsa_nt.b.orf tsa.GBPU.1.fsa_nt.b.orf tsa.GCPB.1.fsa_nt.b.orf tsa.GFNA.1.fsa_nt.b.orf tsa.GAUG.1.fsa_nt.b.orf tsa.GAZV.1.fsa_nt.b.orf tsa.GBPV.1.fsa_nt.b.orf tsa.GCRH.1.fsa_nt.b.orf tsa.GFNA.2.fsa_nt.b.orf tsa.GAUH.1.fsa_nt.b.orf tsa.GBAC.1.fsa_nt.b.orf tsa.GBPW.1.fsa_nt.b.orf tsa.GCVB.1.fsa_nt.b.orf tsa.GFNI.1.fsa_nt.b.orf tsa.GAUI.1.fsa_nt.b.orf tsa.GBAS.1.fsa_nt.b.orf tsa.GBPX.1.fsa_nt.b.orf tsa.GCVX.1.fsa_nt.b.orf tsa.GFNO.1.fsa_nt.b.orf tsa.GAUJ.1.fsa_nt.b.orf tsa.GBBP.1.fsa_nt.b.orf tsa.GBPY.1.fsa_nt.b.orf tsa.GDAI.1.fsa_nt.b.orf tsa.GFOP.1.fsa_nt.b.orf tsa.GAUK.1.fsa_nt.b.orf tsa.GBCW.1.fsa_nt.b.orf tsa.GBPZ.1.fsa_nt.b.orf tsa.GDAR.1.fsa_nt.b.orf tsa.GFOR.1.fsa_nt.b.orf tsa.GAUM.1.fsa_nt.b.orf tsa.GBCX.1.fsa_nt.b.orf tsa.GBQA.1.fsa_nt.b.orf tsa.GDAV.1.fsa_nt.b.orf tsa.GFOU.1.fsa_nt.b.orf tsa.GAUN.1.fsa_nt.b.orf tsa.GBDO.1.fsa_nt.b.orf tsa.GBQB.1.fsa_nt.b.orf tsa.GDAW.1.fsa_nt.b.orf tsa.GFOX.1.fsa_nt.b.orf tsa.GAUO.1.fsa_nt.b.orf tsa.GBEB.1.fsa_nt.b.orf tsa.GBQD.1.fsa_nt.b.orf tsa.GDCN.1.fsa_nt.b.orf tsa.GFPE.1.fsa_nt.b.orf tsa.GAUV.1.fsa_nt.b.orf tsa.GBER.1.fsa_nt.b.orf tsa.GBQE.1.fsa_nt.b.orf tsa.GDGN.1.fsa_nt.b.orf tsa.GFPI.1.fsa_nt.b.orf tsa.GAUW.1.fsa_nt.b.orf tsa.GBES.1.fsa_nt.b.orf tsa.GBQF.1.fsa_nt.b.orf tsa.GDIM.1.fsa_nt.b.orf tsa.GFQL.1.fsa_nt.b.orf tsa.GAUX.1.fsa_nt.b.orf tsa.GBEU.1.fsa_nt.b.orf tsa.GBQG.1.fsa_nt.b.orf tsa.GDKA.1.fsa_nt.b.orf)


# ........  transfer to DELL for hamstr job, which takes a week or so.
# on dell, analysis is run in folder 
# /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/
# and output is hamstrsearch_tsa_1kite.out
# when finished, copy that file to Lenovo, named same folder
# /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/



#######
# prob just some tests, skip
for i in ${!list_transcriptomes[*]}; do transcriptome=${list_transcriptomes[$i]};echo "number:$i file:$transcriptome"
   ~/software/hamstr/hamstr.v13.2.6/bin/hamstr_DC1.pl -sequence_file=$path$transcriptome -taxon=$transcriptome -silent -append -representative -hmmset=1kite -refspec=DMELA_5.40 -central -eval_hmmer=1e-20 -eval_blast=1e-20
done
# -ublast 
rm hamstrsearch_tsa_1kite.out
~/software/hamstr/hamstr.v13.2.6/bin/hamstr_DC1.pl -eval_hmmer=1e-20 -eval_blast=1e-20 -sequence_file=tsa.GAAK.1.fsa_nt.b.orf -taxon=tsa.GAAK.1.fsa_nt.b.orf -append -representative -hmmset=1kite -refspec=DMELA_5.40 -hmm=EOG5B2RC0.hmm -central
# this script was created by Jesse Breinholt
# ./hamstrsearch_local-hmmer3.v8b.pl -sequence_file=../data/inputfile -est -taxon=taxaname -representative -hmmset=insecta_hmmer3-2 -refspec=BMORI -blastpath ../core_orthologs/insecta_hmmer3-2/blast_dir
blastp -db /home/douglas/software/hamstr/hamstr.v13.2.6/blast_dir/DMELA_5.40/DMELA_5.40_prot -seg 'yes' -max_target_seqs 10 -evalue 10 -query ./tmp/29301.fa  -out ./tmp/29301.blast
######



# for reference, here are the command on DELL for hamstr

path=/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/
list_transcriptomes=(tsa.*.fsa_nt.b.orf)

# will need restarting:
# tsa.GAAB.1.fsa_nt.b.orf tsa.GAUY.1.fsa_nt.b.orf tsa.GBFA.1.fsa_nt.b.orf 
# list_transcriptomes=(tsa.GBQH.1.fsa_nt.b.orf tsa.GDKB.1.fsa_nt.b.orf tsa.GAAK.1.fsa_nt.b.orf tsa.GAUZ.1.fsa_nt.b.orf tsa.GBGB.1.fsa_nt.b.orf tsa.GBQI.1.fsa_nt.b.orf tsa.GDKQ.1.fsa_nt.b.orf tsa.GAAV.1.fsa_nt.b.orf tsa.GAVA.1.fsa_nt.b.orf tsa.GBGD.1.fsa_nt.b.orf tsa.GBQJ.1.fsa_nt.b.orf tsa.GDKS.1.fsa_nt.b.orf tsa.GABB.1.fsa_nt.b.orf tsa.GAVB.1.fsa_nt.b.orf tsa.GBGG.1.fsa_nt.b.orf tsa.GBQK.1.fsa_nt.b.orf tsa.GDLS.1.fsa_nt.b.orf tsa.GABK.1.fsa_nt.b.orf tsa.GAVD.1.fsa_nt.b.orf tsa.GBHB.1.fsa_nt.b.orf tsa.GBQL.1.fsa_nt.b.orf tsa.GDQN.1.fsa_nt.b.orf tsa.GABY.1.fsa_nt.b.orf tsa.GAVM.1.fsa_nt.b.orf tsa.GBHN.1.fsa_nt.b.orf tsa.GBQM.1.fsa_nt.b.orf tsa.GDQV.1.fsa_nt.b.orf tsa.GACJ.1.fsa_nt.b.orf tsa.GAVV.1.fsa_nt.b.orf tsa.GBID.1.fsa_nt.b.orf tsa.GBQN.1.fsa_nt.b.orf tsa.GDVG.1.fsa_nt.b.orf tsa.GACO.1.fsa_nt.b.orf tsa.GAVW.1.fsa_nt.b.orf tsa.GBJX.1.fsa_nt.b.orf tsa.GBQO.1.fsa_nt.b.orf tsa.GEBL.1.fsa_nt.b.orf tsa.GACP.1.fsa_nt.b.orf tsa.GAVX.1.fsa_nt.b.orf tsa.GBKM.1.fsa_nt.b.orf tsa.GBQP.1.fsa_nt.b.orf tsa.GEBQ.1.fsa_nt.b.orf tsa.GACR.1.fsa_nt.b.orf tsa.GAWC.1.fsa_nt.b.orf tsa.GBKU.1.fsa_nt.b.orf tsa.GBQR.1.fsa_nt.b.orf tsa.GECK.1.fsa_nt.b.orf tsa.GACU.1.fsa_nt.b.orf tsa.GAWD.1.fsa_nt.b.orf tsa.GBKZ.1.fsa_nt.b.orf tsa.GBQS.1.fsa_nt.b.orf tsa.GECM.1.fsa_nt.b.orf tsa.GACV.1.fsa_nt.b.orf tsa.GAWE.1.fsa_nt.b.orf tsa.GBLA.1.fsa_nt.b.orf tsa.GBQU.1.fsa_nt.b.orf tsa.GECN.1.fsa_nt.b.orf tsa.GACW.1.fsa_nt.b.orf tsa.GAWF.1.fsa_nt.b.orf tsa.GBLB.1.fsa_nt.b.orf tsa.GBQV.1.fsa_nt.b.orf tsa.GECQ.1.fsa_nt.b.orf tsa.GACX.1.fsa_nt.b.orf tsa.GAWG.1.fsa_nt.b.orf tsa.GBLE.1.fsa_nt.b.orf tsa.GBRX.1.fsa_nt.b.orf tsa.GECT.1.fsa_nt.b.orf tsa.GACY.1.fsa_nt.b.orf tsa.GAWI.1.fsa_nt.b.orf tsa.GBLF.1.fsa_nt.b.orf tsa.GBSB.1.fsa_nt.b.orf tsa.GECU.1.fsa_nt.b.orf tsa.GACZ.1.fsa_nt.b.orf tsa.GAWJ.1.fsa_nt.b.orf tsa.GBLN.1.fsa_nt.b.orf tsa.GBSU.1.fsa_nt.b.orf tsa.GECZ.1.fsa_nt.b.orf tsa.GADB.1.fsa_nt.b.orf tsa.GAWK.1.fsa_nt.b.orf tsa.GBLP.1.fsa_nt.b.orf tsa.GBTF.1.fsa_nt.b.orf tsa.GEDB.1.fsa_nt.b.orf tsa.GADH.1.fsa_nt.b.orf tsa.GAWM.1.fsa_nt.b.orf tsa.GBLR.1.fsa_nt.b.orf tsa.GBTL.1.fsa_nt.b.orf tsa.GEDC.1.fsa_nt.b.orf tsa.GADK.1.fsa_nt.b.orf tsa.GAWN.1.fsa_nt.b.orf tsa.GBLS.1.fsa_nt.b.orf tsa.GBTM.1.fsa_nt.b.orf tsa.GEDO.1.fsa_nt.b.orf tsa.GAEO.1.fsa_nt.b.orf tsa.GAWP.1.fsa_nt.b.orf tsa.GBLU.1.fsa_nt.b.orf tsa.GBTP.1.fsa_nt.b.orf tsa.GEDY.1.fsa_nt.b.orf tsa.GAEQ.1.fsa_nt.b.orf tsa.GAWQ.1.fsa_nt.b.orf tsa.GBLX.1.fsa_nt.b.orf tsa.GBTQ.1.fsa_nt.b.orf tsa.GEEF.1.fsa_nt.b.orf tsa.GAGF.1.fsa_nt.b.orf tsa.GAWR.1.fsa_nt.b.orf tsa.GBMA.1.fsa_nt.b.orf tsa.GBTU.1.fsa_nt.b.orf tsa.GEES.1.fsa_nt.b.orf tsa.GAGH.1.fsa_nt.b.orf tsa.GAWT.1.fsa_nt.b.orf tsa.GBME.1.fsa_nt.b.orf tsa.GBTY.1.fsa_nt.b.orf tsa.GEFG.1.fsa_nt.b.orf tsa.GAIW.1.fsa_nt.b.orf tsa.GAWU.1.fsa_nt.b.orf tsa.GBMG.1.fsa_nt.b.orf tsa.GBTZ.1.fsa_nt.b.orf tsa.GEIF.1.fsa_nt.b.orf tsa.GAIX.1.fsa_nt.b.orf tsa.GAWW.1.fsa_nt.b.orf tsa.GBMJ.1.fsa_nt.b.orf tsa.GBUA.1.fsa_nt.b.orf tsa.GELG.1.fsa_nt.b.orf tsa.GAIZ.1.fsa_nt.b.orf tsa.GAWX.1.fsa_nt.b.orf tsa.GBMP.1.fsa_nt.b.orf tsa.GBUJ.1.fsa_nt.b.orf tsa.GELL.1.fsa_nt.b.orf tsa.GAJC.1.fsa_nt.b.orf tsa.GAWY.1.fsa_nt.b.orf tsa.GBMS.1.fsa_nt.b.orf tsa.GBUM.1.fsa_nt.b.orf tsa.GELV.1.fsa_nt.b.orf tsa.GAJM.1.fsa_nt.b.orf tsa.GAWZ.1.fsa_nt.b.orf tsa.GBMT.1.fsa_nt.b.orf tsa.GBUN.1.fsa_nt.b.orf tsa.GEMI.1.fsa_nt.b.orf tsa.GAJS.1.fsa_nt.b.orf tsa.GAXA.1.fsa_nt.b.orf tsa.GBMU.1.fsa_nt.b.orf tsa.GBUO.1.fsa_nt.b.orf tsa.GEMJ.1.fsa_nt.b.orf tsa.GAJV.1.fsa_nt.b.orf tsa.GAXB.1.fsa_nt.b.orf tsa.GBMW.1.fsa_nt.b.orf tsa.GBUP.1.fsa_nt.b.orf tsa.GEMK.1.fsa_nt.b.orf tsa.GAJX.1.fsa_nt.b.orf tsa.GAXC.1.fsa_nt.b.orf tsa.GBMX.1.fsa_nt.b.orf tsa.GBUQ.1.fsa_nt.b.orf tsa.GENH.1.fsa_nt.b.orf tsa.GAJY.1.fsa_nt.b.orf tsa.GAXD.1.fsa_nt.b.orf tsa.GBNB.1.fsa_nt.b.orf tsa.GBUY.1.fsa_nt.b.orf tsa.GENI.1.fsa_nt.b.orf tsa.GAKJ.1.fsa_nt.b.orf tsa.GAXE.1.fsa_nt.b.orf tsa.GBND.1.fsa_nt.b.orf tsa.GBVB.1.fsa_nt.b.orf tsa.GENJ.1.fsa_nt.b.orf tsa.GALA.1.fsa_nt.b.orf tsa.GAXF.1.fsa_nt.b.orf tsa.GBNF.1.fsa_nt.b.orf tsa.GBVD.1.fsa_nt.b.orf tsa.GENM.1.fsa_nt.b.orf tsa.GALX.1.fsa_nt.b.orf tsa.GAXG.1.fsa_nt.b.orf tsa.GBNG.1.fsa_nt.b.orf tsa.GBVE.1.fsa_nt.b.orf tsa.GENN.1.fsa_nt.b.orf tsa.GAMC.1.fsa_nt.b.orf tsa.GAXH.1.fsa_nt.b.orf tsa.GBNH.1.fsa_nt.b.orf tsa.GBVF.1.fsa_nt.b.orf tsa.GENO.1.fsa_nt.b.orf tsa.GAMM.1.fsa_nt.b.orf tsa.GAXI.1.fsa_nt.b.orf tsa.GBNI.1.fsa_nt.b.orf tsa.GBVG.1.fsa_nt.b.orf tsa.GENP.1.fsa_nt.b.orf tsa.GANH.1.fsa_nt.b.orf tsa.GAXJ.1.fsa_nt.b.orf tsa.GBNJ.1.fsa_nt.b.orf tsa.GBVH.1.fsa_nt.b.orf tsa.GENR.1.fsa_nt.b.orf tsa.GANO.1.fsa_nt.b.orf tsa.GAXL.1.fsa_nt.b.orf tsa.GBNN.1.fsa_nt.b.orf tsa.GBVK.1.fsa_nt.b.orf tsa.GENS.1.fsa_nt.b.orf tsa.GANS.1.fsa_nt.b.orf tsa.GAXM.1.fsa_nt.b.orf tsa.GBNO.1.fsa_nt.b.orf tsa.GBVL.1.fsa_nt.b.orf tsa.GENX.1.fsa_nt.b.orf tsa.GAOM.1.fsa_nt.b.orf tsa.GAXN.1.fsa_nt.b.orf tsa.GBNP.1.fsa_nt.b.orf tsa.GBVM.1.fsa_nt.b.orf tsa.GEOA.1.fsa_nt.b.orf tsa.GAOP.1.fsa_nt.b.orf tsa.GAXO.1.fsa_nt.b.orf tsa.GBNQ.1.fsa_nt.b.orf tsa.GBVP.1.fsa_nt.b.orf tsa.GEOB.1.fsa_nt.b.orf tsa.GAPE.1.fsa_nt.b.orf tsa.GAXP.1.fsa_nt.b.orf tsa.GBNR.1.fsa_nt.b.orf tsa.GBVT.1.fsa_nt.b.orf tsa.GEOC.1.fsa_nt.b.orf tsa.GAPL.1.fsa_nt.b.orf tsa.GAXQ.1.fsa_nt.b.orf tsa.GBNS.1.fsa_nt.b.orf tsa.GBVU.1.fsa_nt.b.orf tsa.GEOE.1.fsa_nt.b.orf tsa.GAPT.1.fsa_nt.b.orf tsa.GAXR.1.fsa_nt.b.orf tsa.GBNW.1.fsa_nt.b.orf tsa.GBWA.1.fsa_nt.b.orf tsa.GEOG.1.fsa_nt.b.orf tsa.GAPU.1.fsa_nt.b.orf tsa.GAXS.1.fsa_nt.b.orf tsa.GBNX.1.fsa_nt.b.orf tsa.GBWC.1.fsa_nt.b.orf tsa.GEOJ.1.fsa_nt.b.orf tsa.GAQV.1.fsa_nt.b.orf tsa.GAXT.1.fsa_nt.b.orf tsa.GBNY.1.fsa_nt.b.orf tsa.GBWD.1.fsa_nt.b.orf tsa.GEOM.1.fsa_nt.b.orf tsa.GAQW.1.fsa_nt.b.orf tsa.GAXW.1.fsa_nt.b.orf tsa.GBNZ.1.fsa_nt.b.orf tsa.GBWE.1.fsa_nt.b.orf tsa.GEOS.1.fsa_nt.b.orf tsa.GAQX.1.fsa_nt.b.orf tsa.GAXX.1.fsa_nt.b.orf tsa.GBOA.1.fsa_nt.b.orf tsa.GBWF.1.fsa_nt.b.orf tsa.GEOT.1.fsa_nt.b.orf tsa.GARD.1.fsa_nt.b.orf tsa.GAXZ.1.fsa_nt.b.orf tsa.GBOB.1.fsa_nt.b.orf tsa.GBWG.1.fsa_nt.b.orf tsa.GEOV.1.fsa_nt.b.orf tsa.GARF.1.fsa_nt.b.orf tsa.GAYA.1.fsa_nt.b.orf tsa.GBOC.1.fsa_nt.b.orf tsa.GBWH.1.fsa_nt.b.orf tsa.GEOW.1.fsa_nt.b.orf tsa.GARK.1.fsa_nt.b.orf tsa.GAYB.1.fsa_nt.b.orf tsa.GBOE.1.fsa_nt.b.orf tsa.GBWI.1.fsa_nt.b.orf tsa.GETI.1.fsa_nt.b.orf tsa.GASE.1.fsa_nt.b.orf tsa.GAYC.1.fsa_nt.b.orf tsa.GBOG.1.fsa_nt.b.orf tsa.GBWJ.1.fsa_nt.b.orf tsa.GETQ.1.fsa_nt.b.orf tsa.GASG.1.fsa_nt.b.orf tsa.GAYD.1.fsa_nt.b.orf tsa.GBOH.1.fsa_nt.b.orf tsa.GBWM.1.fsa_nt.b.orf tsa.GETS.1.fsa_nt.b.orf tsa.GASM.1.fsa_nt.b.orf tsa.GAYF.1.fsa_nt.b.orf tsa.GBOI.1.fsa_nt.b.orf tsa.GBWN.1.fsa_nt.b.orf tsa.GEUD.1.fsa_nt.b.orf tsa.GASN.1.fsa_nt.b.orf tsa.GAYH.1.fsa_nt.b.orf tsa.GBOJ.1.fsa_nt.b.orf tsa.GBWO.1.fsa_nt.b.orf tsa.GEVD.1.fsa_nt.b.orf tsa.GASO.1.fsa_nt.b.orf tsa.GAYI.1.fsa_nt.b.orf tsa.GBOK.1.fsa_nt.b.orf tsa.GBWP.1.fsa_nt.b.orf tsa.GEVJ.1.fsa_nt.b.orf tsa.GASQ.1.fsa_nt.b.orf tsa.GAYJ.1.fsa_nt.b.orf tsa.GBOL.1.fsa_nt.b.orf tsa.GBWQ.1.fsa_nt.b.orf tsa.GEWY.1.fsa_nt.b.orf tsa.GASS.1.fsa_nt.b.orf tsa.GAYK.1.fsa_nt.b.orf tsa.GBOM.1.fsa_nt.b.orf tsa.GBWS.1.fsa_nt.b.orf tsa.GEXM.1.fsa_nt.b.orf tsa.GAST.1.fsa_nt.b.orf tsa.GAYL.1.fsa_nt.b.orf tsa.GBON.1.fsa_nt.b.orf tsa.GBWU.1.fsa_nt.b.orf tsa.GEZK.1.fsa_nt.b.orf tsa.GASV.1.fsa_nt.b.orf tsa.GAYM.1.fsa_nt.b.orf tsa.GBOQ.1.fsa_nt.b.orf tsa.GBWV.1.fsa_nt.b.orf tsa.GEZO.1.fsa_nt.b.orf tsa.GASW.1.fsa_nt.b.orf tsa.GAYN.1.fsa_nt.b.orf tsa.GBOR.1.fsa_nt.b.orf tsa.GBWX.1.fsa_nt.b.orf tsa.GEZY.1.fsa_nt.b.orf tsa.GASX.1.fsa_nt.b.orf tsa.GAYO.1.fsa_nt.b.orf tsa.GBOS.1.fsa_nt.b.orf tsa.GBWY.1.fsa_nt.b.orf tsa.GEZZ.1.fsa_nt.b.orf tsa.GATA.1.fsa_nt.b.orf tsa.GAYP.1.fsa_nt.b.orf tsa.GBOU.1.fsa_nt.b.orf tsa.GBWZ.1.fsa_nt.b.orf tsa.GFAF.1.fsa_nt.b.orf tsa.GATB.1.fsa_nt.b.orf tsa.GAYQ.1.fsa_nt.b.orf tsa.GBOY.1.fsa_nt.b.orf tsa.GBXA.1.fsa_nt.b.orf tsa.GFBA.1.fsa_nt.b.orf tsa.GATC.1.fsa_nt.b.orf tsa.GAYV.1.fsa_nt.b.orf tsa.GBPE.1.fsa_nt.b.orf tsa.GBXD.1.fsa_nt.b.orf tsa.GFBD.1.fsa_nt.b.orf tsa.GATD.1.fsa_nt.b.orf tsa.GAYY.1.fsa_nt.b.orf tsa.GBPG.1.fsa_nt.b.orf tsa.GBXH.1.fsa_nt.b.orf tsa.GFBH.1.fsa_nt.b.orf tsa.GATG.1.fsa_nt.b.orf tsa.GAYZ.1.fsa_nt.b.orf tsa.GBPH.1.fsa_nt.b.orf tsa.GBYB.1.fsa_nt.b.orf tsa.GFCJ.1.fsa_nt.b.orf tsa.GATH.1.fsa_nt.b.orf tsa.GAZA.1.fsa_nt.b.orf tsa.GBPI.1.fsa_nt.b.orf tsa.GBYD.1.fsa_nt.b.orf tsa.GFCP.1.fsa_nt.b.orf tsa.GATI.1.fsa_nt.b.orf tsa.GAZB.1.fsa_nt.b.orf tsa.GBPJ.1.fsa_nt.b.orf tsa.GBYH.1.fsa_nt.b.orf tsa.GFCT.1.fsa_nt.b.orf tsa.GATJ.1.fsa_nt.b.orf tsa.GAZD.1.fsa_nt.b.orf tsa.GBPM.1.fsa_nt.b.orf tsa.GBZB.1.fsa_nt.b.orf tsa.GFCX.1.fsa_nt.b.orf tsa.GATU.1.fsa_nt.b.orf tsa.GAZE.1.fsa_nt.b.orf tsa.GBPN.1.fsa_nt.b.orf tsa.GBZD.1.fsa_nt.b.orf tsa.GFCY.1.fsa_nt.b.orf tsa.GATV.1.fsa_nt.b.orf tsa.GAZF.1.fsa_nt.b.orf tsa.GBPO.1.fsa_nt.b.orf tsa.GBZE.1.fsa_nt.b.orf tsa.GFDF.1.fsa_nt.b.orf tsa.GATW.1.fsa_nt.b.orf tsa.GAZG.1.fsa_nt.b.orf tsa.GBPP.1.fsa_nt.b.orf tsa.GBZL.1.fsa_nt.b.orf tsa.GFDG.1.fsa_nt.b.orf tsa.GATX.1.fsa_nt.b.orf tsa.GAZH.1.fsa_nt.b.orf tsa.GBPQ.1.fsa_nt.b.orf tsa.GCEQ.1.fsa_nt.b.orf tsa.GFDL.1.fsa_nt.b.orf tsa.GATY.1.fsa_nt.b.orf tsa.GAZM.1.fsa_nt.b.orf tsa.GBPR.1.fsa_nt.b.orf tsa.GCET.1.fsa_nt.b.orf tsa.GFME.1.fsa_nt.b.orf tsa.GATZ.1.fsa_nt.b.orf tsa.GAZN.1.fsa_nt.b.orf tsa.GBPS.1.fsa_nt.b.orf tsa.GCJP.1.fsa_nt.b.orf tsa.GFMJ.1.fsa_nt.b.orf tsa.GAUE.1.fsa_nt.b.orf tsa.GAZT.1.fsa_nt.b.orf tsa.GBPT.1.fsa_nt.b.orf tsa.GCKB.1.fsa_nt.b.orf tsa.GFMO.1.fsa_nt.b.orf tsa.GAUF.1.fsa_nt.b.orf tsa.GAZU.1.fsa_nt.b.orf tsa.GBPU.1.fsa_nt.b.orf tsa.GCPB.1.fsa_nt.b.orf tsa.GFNA.1.fsa_nt.b.orf tsa.GAUG.1.fsa_nt.b.orf tsa.GAZV.1.fsa_nt.b.orf tsa.GBPV.1.fsa_nt.b.orf tsa.GCRH.1.fsa_nt.b.orf tsa.GFNA.2.fsa_nt.b.orf tsa.GAUH.1.fsa_nt.b.orf tsa.GBAC.1.fsa_nt.b.orf tsa.GBPW.1.fsa_nt.b.orf tsa.GCVB.1.fsa_nt.b.orf tsa.GFNI.1.fsa_nt.b.orf tsa.GAUI.1.fsa_nt.b.orf tsa.GBAS.1.fsa_nt.b.orf tsa.GBPX.1.fsa_nt.b.orf tsa.GCVX.1.fsa_nt.b.orf tsa.GFNO.1.fsa_nt.b.orf tsa.GAUJ.1.fsa_nt.b.orf tsa.GBBP.1.fsa_nt.b.orf tsa.GBPY.1.fsa_nt.b.orf tsa.GDAI.1.fsa_nt.b.orf tsa.GFOP.1.fsa_nt.b.orf tsa.GAUK.1.fsa_nt.b.orf tsa.GBCW.1.fsa_nt.b.orf tsa.GBPZ.1.fsa_nt.b.orf tsa.GDAR.1.fsa_nt.b.orf tsa.GFOR.1.fsa_nt.b.orf tsa.GAUM.1.fsa_nt.b.orf tsa.GBCX.1.fsa_nt.b.orf tsa.GBQA.1.fsa_nt.b.orf tsa.GDAV.1.fsa_nt.b.orf tsa.GFOU.1.fsa_nt.b.orf tsa.GAUN.1.fsa_nt.b.orf tsa.GBDO.1.fsa_nt.b.orf tsa.GBQB.1.fsa_nt.b.orf tsa.GDAW.1.fsa_nt.b.orf tsa.GFOX.1.fsa_nt.b.orf tsa.GAUO.1.fsa_nt.b.orf tsa.GBEB.1.fsa_nt.b.orf tsa.GBQD.1.fsa_nt.b.orf tsa.GDCN.1.fsa_nt.b.orf tsa.GFPE.1.fsa_nt.b.orf tsa.GAUV.1.fsa_nt.b.orf tsa.GBER.1.fsa_nt.b.orf tsa.GBQE.1.fsa_nt.b.orf tsa.GDGN.1.fsa_nt.b.orf tsa.GFPI.1.fsa_nt.b.orf tsa.GAUW.1.fsa_nt.b.orf tsa.GBES.1.fsa_nt.b.orf tsa.GBQF.1.fsa_nt.b.orf tsa.GDIM.1.fsa_nt.b.orf tsa.GFQL.1.fsa_nt.b.orf tsa.GAUX.1.fsa_nt.b.orf tsa.GBEU.1.fsa_nt.b.orf tsa.GBQG.1.fsa_nt.b.orf tsa.GDKA.1.fsa_nt.b.orf)
# remove the temp folder after every time, or it gets so big ....

for i in ${!list_transcriptomes[*]}; do transcriptome=${list_transcriptomes[$i]};echo "number:$i file:$transcriptome"
  rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/tmp/
  rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/hmm_search_tsa_1kite/
  rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/fa_dir_tsa_1kite_DMELA_5.40/
  ~/software/hamstr/hamstr.v13.2.6/bin/hamstr_DC1.pl -sequence_file=$path$transcriptome -taxon=$transcriptome -silent -append -representative -hmmset=1kite -refspec=DMELA_5.40 -central -eval_hmmer=1e-20 -eval_blast=1e-20
done

# if restarting:
for i in ${!list_transcriptomes[*]}; do transcriptome=${list_transcriptomes[$i]};echo "number:$i file:$transcriptome"
 if grep --quiet "$transcriptome" hamstrsearch_tsa_1kite.out; then
                echo found in file
            else
                echo not found
                rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/tmp/
                rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/hmm_search_tsa_1kite/
                rm -rf /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/fa_dir_tsa_1kite_DMELA_5.40/
                ~/software/hamstr/hamstr.v13.2.6/bin/hamstr_DC1.pl -sequence_file=$path$transcriptome -taxon=$transcriptome -silent -append -representative -hmmset=1kite -refspec=DMELA_5.40 -central -eval_hmmer=1e-20 -eval_blast=1e-20
            fi
done




# peptide sequences for longest orfs is in output file transcripts.fasta.transdecoder.pep

tsa.GAAK.1.fsa_nt.b.transdecoder_dir/longest_orfs.pep


# from first iteration, skip
# cp /home/douglas/scripted_analyses/COIevol/corrections/transcriptomes/Acerentomon tsa.GAXE.02.fsa_nt
# cp /home/douglas/scripted_analyses/COIevol/corrections/transcriptomes/Campodea tsa.GAYN.02.fsa_nt
# cp /home/douglas/scripted_analyses/COIevol/corrections/transcriptomes/Pogonognathellus tsa.GATD.02.fsa_nt
# perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in tsa.GAXE.02.fsa_nt -format 1
# perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in tsa.GAYN.02.fsa_nt -format 1
# perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in tsa.GATD.02.fsa_nt -format 1

# test, some of them are very small
#/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed/tsa.GEDO.1.fsa_nt.b
#perl ~/usr_scripts/parse_ncbi_deflines_fasta.pl -in tsa.GEDO.1.fsa_nt -format 1




##################################################################################################################

# pre-review blast method, SKIP

mv *fsa_nt.b /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed/
tar.gz the folder
# 9.3 gb uncompressed, 2.2 afer zip

ls tsa.G*.fsa_nt.b | wc -l # you have 234

insect_TSA_processed.tar.gz
# jul2017, second iteration is insect_TSA_processed2

scp insect_TSA_processed2.tar.gz wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed2.tar.gz
log on then 
tar xvzf insect_TSA_processed2.tar.gz
cd insect_TSA_processed2

# choose cluster or local:
list_ortholog_files=(tsa.*.fsa_nt.b)
for i in ${!list_ortholog_files[*]}; do tax=${list_ortholog_files[$i]};echo "number:$i gene:$tax"
 /home/wei/software/blast/ncbi-blast-2.2.28+-src/c++/ReleaseMT/bin/makeblastdb-2.2.28+-64bit -in $tax -dbtype nucl -parse_seqids
#  makeblastdb-2.2.28+-64bit -in $tax -dbtype nucl -parse_seqids
done

# IF locally:
# old:
# cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/all_TSA.fsa_nt/
cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/

list_ortholog_files=(tsa.*.fsa_nt.b)
for i in ${!list_ortholog_files[*]}; do tax=${list_ortholog_files[$i]};echo "number:$i gene:$tax"
    if [ -f "$tax.insecta_ortholog_hits" ]
        then
        echo "already have output for $tax.insecta_ortholog_hits"
    else
        echo "output not found for $tax.insecta_ortholog_hits"
#        tblastn-2.2.28+-64bit -db $tax -query /home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/InsCoreOrth -out $tax.insecta_ortholog_hits -evalue 1e-50 -num_threads 4 -max_target_seqs 6 -db_gencode 1 -outfmt '6 qseqid sseqid evalue pident length sseq'
        tblastn-2.2.28+-64bit -db $tax -query /home/douglas/scripted_analyses/insect_TOL_analysis/orthologs/Misof_CO -out $tax.insecta_ortholog_hits -evalue 1e-50 -num_threads 4 -max_target_seqs 6 -db_gencode 1 -outfmt '6 qseqid sseqid evalue pident length sseq'
    fi
done

# if cluster:
# scp InsCoreOrthTEST wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed/InsCoreOrthTEST
# scp InsCoreOrth wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed/InsCoreOrth
# new orthoog set send to cluster:
scp Misof_CO wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed2/Misof_CO

# next make simple list of commands
cd /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/
list_ortholog_files=(tsa.*.fsa_nt.b)
no_cpus=25;count=0
rm list_commands
for i in ${!list_ortholog_files[*]}; do tax=${list_ortholog_files[$i]};echo "number:$i gene:$tax"
  echo "/home/wei/software/blast/ncbi-blast-2.2.28+-src/c++/ReleaseMT/bin/tblastn -db $tax -query Misof_CO -out $tax.insecta_ortholog_hits -evalue 1e-50 -num_threads 1 -max_target_seqs 6 -db_gencode 1 -outfmt '6 qseqid sseqid evalue pident length sseq'" >> list_commands
  #      echo "tblastn-2.2.28+-64bit -db $tax -query Misof_CO -out $tax.insecta_ortholog_hits -evalue 1e-50 -num_threads 1 -max_target_seqs 6 -db_gencode 1 -outfmt '6 qseqid sseqid evalue pident length sseq' &" >> list_commands
  let count+=1
  [[ $((count%no_cpus)) -eq 0 ]] && echo wait >> list_commands
done

#PBS -N blast1
#PBS -l nodes=1:ppn=1
#PBS -q blade
#PBS -l walltime=200:00:00
#PBS -d /home/wei/DC/insect_TOL_analysis/insect_TSA_processed2/
#PBS -j oe

/home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed/list_commands
# save job submitssion code, send to cluster:
scp /home/douglas/scripted_analyses/insect_TOL_analysis/data/insect_TSA_processed2/commands1 wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed2/commands1
ssh -l wei 10.0.0.181 # wei789
qsub commands1 # 456434.admin
qstat -Q
qstat -f 456434.admin

# run this on the cluater:
cd /home/wei/DC/insect_TOL_analysis/insect_TSA_processed2/
cat *insecta_ortholog_hits > insecta_ortholog_hits.all
gzip insecta_ortholog_hits.all
# this on local machine:
scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insect_TSA_processed2/insecta_ortholog_hits.all.gz .
gunzip insecta_ortholog_hits.all.gz

# or just local
cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/
cat /home/douglas/scripted_analyses/insect_TOL_analysis/data/all_TSA.fsa_nt/*.insecta_ortholog_hits > insecta_ortholog_hits.all

 # i recently hear, here should blast back in the other direction,
 # if top hit is not reciprocal, then .... something.
 # will look into this during next iteration.

##################################################################################################################










cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/








# now have found orthologs in transcriptomes ....



# copy hamstr ouput (hamstrsearch_tsa_1kite.out) to /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/

# hamstr is run under representative option, which identifies the sequnece (out of all fulfilling criteria)
# with the highest similairyt to referece, presumably filtering others.
# garrison / kokot still use phylotreepruner to remove 'overlooked paralogs',
# though in this data, strange that only one species (Aedes_aegypti) has these,
# otherwise, there might be a couple of useful items in this pipeline that could be used
# https://github.com/kmkocot/springer_methods_chapter
# "Phylogenomic approaches using transcriptome data" by J.T. Cannon and K.M. Kocot. In S. Bourlat, Ed., Marine Genomics – Methods and Protocols. Springer.






# there are 234 [old iteration] transcriptomes, here can filter orthologs with only 10 percent of these
# $ortholog_taxon_limit = 23
# previously had an unreliable way of doin this
# blast results contain hits from different query seeds (filtered), hits to different hsps of given sp-transcript (filtered),
# hits to different loci of given transcriptome (not filtered)
# thus the results must contained paralogs
# note previous iteration had max_target seqs 1, so no different trancipts of give ome.

rm insectaNUCL*

# perl ~/usr_scripts/parse_ortholog_results.pl -in insecta_ortholog_hits.all -out_prefix insectaNUCL -filter_duplicates -output_id_format 3
perl ~/usr_scripts/parse_hamstr_results.pl -in hamstrsearch_tsa_1kite.out -out_prefix insectaNUCL -filter_duplicates -output_id_format 3
ls insectaNUCL* | wc -l # 1400
# v2-oct2017, names look like: insectaNUCL.EOG5JQ2CR  insectaNUCL.EOG5RN8RH  insectaNUCL.EOG5ZGMV1



# ilter_orthologs_due_to_not_many_tax:38


# better just to do this from scratch otherwise can be trying to align everything with this prefexi file.clo.clo.clo etc
list_ortholog_files=(insectaNUCL*)
no_cpus=2;count=0
for i in ${!list_ortholog_files[*]}
  do current_file=${list_ortholog_files[$i]}; echo current file $i is $current_file
    # slow accurate:
    # /usr/local/bin/mafft --localpair --maxiterate 100 $current_file > $current_file.clo &
    # quicker:
      /usr/local/bin/mafft --retree 2 $current_file > $current_file.clo &
  let count+=1
  [[ $((count%no_cpus)) -eq 0 ]] && wait
done

#  if [ -f $current_file.clo ];
#    then
#      echo already have alignment $current_file.clo
#    else 
#    # slow accurate:
#    # /usr/local/bin/mafft --localpair --maxiterate 100 $current_file > $current_file.clo &
#    # quicker:
#      /usr/local/bin/mafft --retree 2 $current_file > $current_file.clo &
#  fi



list_ortholog_alignments=(insectaNUCL*.clo)
no_cpus=2;count=0
for i in ${!list_ortholog_alignments[*]}
  do current_file=${list_ortholog_alignments[$i]};echo $i $current_file
#  fasttree_2.1.7 -slow -gamma $current_file > $current_file.orth_ft &
  fasttree_2.1.7 -gtr -gamma $current_file > $current_file.orth_ft &
  let count+=1
  [[ $((count%no_cpus)) -eq 0 ]] && wait
done


#################################################################################################################

 # PARALOGS

# runs quick:
for i in ${!list_ortholog_alignments[*]}
  do current_file=${list_ortholog_alignments[$i]};echo $i $current_file
  java -cp ~/software/phylotreepruner/src_and_wrapper_scripts/ PhyloTreePruner $current_file.orth_ft 5 $current_file 0.5 u
done



#################################################################################################################






cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/








 # 1) COMPOSITIONAL HETEROGENEITY

# -s save parameters; -f overwrite outputs; -x 1 10 save freqeuncy and stopping
# -comp      : compositional homogeneity test (Foster, 2004); [<every> <until>]-x 0.25 1 60 
# 1-2 days running time

# still using fasttree gene trees?

 # 

list_ortholog_alignments=(insectaNUCL*.clo)
phylobayes_path=~/software/phylobayes/phylobayes4.1b/data
for i in ${!list_ortholog_alignments[*]}
  do filename=${list_ortholog_alignments[$i]};filename_pruned=$filename'_pruned.fa'; # echo "$i phylobayesOUT.$filename.sample.ppht";
  if [ -f phylobayesOUT.$filename'_sample.ppht' ];
    then
      echo already analysed ortholog $i $filename
    else 
      echo analyzing ortholog number $i name $filename
  perl ~/usr_scripts/format_conversion.pl $filename_pruned $filename_pruned.phy fasta phylip
  fasttree_2.1.7 -gtr -gamma $filename_pruned > $filename_pruned.orth_ft_pruned
  $phylobayes_path/pb -d $filename_pruned.phy -T $filename_pruned.orth_ft_pruned -ncat 1 -dgam 1 -s -f -x 1 60 phylobayesOUT.$filename
  $phylobayes_path/ppred -comp phylobayesOUT.$filename
   fi
done

# see how many done , ( typivcla file is phylobayesOUT.insectaNUCL.EOG5DNCM5.clo_sample.ppht)
ls phylobayesOUT.*.clo_sample.ppht | wc -l

#  if [ -f $current_file.clo ];
#    then
#      echo already have alignment $current_file.clo
#    else 
#    # slow accurate:
#    # /usr/local/bin/mafft --localpair --maxiterate 100 $current_file > $current_file.clo &
#    # quicker:
#      /usr/local/bin/mafft --retree 2 $current_file > $current_file.clo &
#  fi



rm phylobayesOUT.*.log phylobayesOUT.*.chain phylobayesOUT.*.currenttree phylobayesOUT.*.monitor
rm phylobayesOUT.*.param phylobayesOUT.*.run phylobayesOUT.*.trace phylobayesOUT.*.treelist
# required ouputs are phylobayesOUT.*.clo_sample.ppht


rm *.RM1
rm parse_phylobayes_LOG
#perl ~/usr_scripts/parse_phylobayes_results.pl zs -1.1
perl ~/usr_scripts/parse_phylobayes_results.pl pv 0.05

# results: number phylobayes results files:754; count_heterogeneous (removed):91; count_homogeneous:663; %rm:12.0
# NOTE: orthologs in which pb did not run on correctly (i.e. no output present) , are also removed under current settings



#################################################################################################################

 # 2) BRANCH-LENGTH VAR

# note this is just a quick solution to this problem, i have not come across formal software/methods for doing this
# edit 201905: i just came across a paper reporting software removing long bracn taxa, look at this in next iteration


# $calculate_average_bootstrap_support = 0;

list_ortholog_alignments=(insectaNUCL*.clo)
rm all_branch_results
for i in ${!list_ortholog_alignments[*]}
  do filename=${list_ortholog_alignments[$i]};echo $i $filename;
  filename_pruned=$filename'_pruned.fa';fasttree_filename=$filename_pruned.orth_ft_pruned
  rm table_for_R R_Variance_OUT
  perl ~/usr_scripts/newick/calculate_branchlength_variance.pl $fasttree_filename -variance
done

rm blh_filtered_files
# IN R:
t1<-read.table("all_branch_results", header=T, row.names=1)
boxplot(t1[,2], ylab = "Branch-length variance", cex.lab = 1.4, ylim=c(0.15, 0.25) ) # 
# outliers > 0.106; next version based of misof orthologs, outliers > 0.22
length((1:length(t1[,2]))[t1[,2]>=0.22]) # 37
new_filenames<-        attr(t1[(1:length(t1[,2]))[t1[,2]<0.106],], "row.names")
write(new_filenames, file = "blh_filtered_files",ncolumns = 1, append = FALSE, sep = " ")

rm *.RM2
#   **** set this!!: $TOL_version = 1;
# perl ~/scripted_analyses/COIevol/scripts/filename_processing.pl blh_filtered_files
# script moved to:
perl ~/scripted_analyses/insect_TOL_analysis/scripts/filename_processing.pl blh_filtered_files

ls *.RM2 | wc -l # 718; 1023



#################################################################################################################

 # 3) INFORMATION CONTENT

rm current_supermatrix2 insectaNUCL.smatrix8 partitionfile2 insectaNUCL.partitionfile8 charsetfile2 insectaNUCL.charsetfile8
alignments=(insectaNUCL*.clo_pruned.fa)
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -matrices ${alignments[*]}
mv current_supermatrix2 insectaNUCL.smatrix8; mv partitionfile2 insectaNUCL.partitionfile8; mv charsetfile2 insectaNUCL.charsetfile8
# requires 10gb memory, run on DELL
rm MARE_LogScreen
mare_v01.2 insectaNUCL.charsetfile8 insectaNUCL.smatrix8 > MARE_LogScreen
mv ./results/insectaNUCL.smatrix8_reduced .
mv ./results/insectaNUCL.charsetfile8_reduced .
grep "rel. Information : 0.[01234]" MARE_LogScreen | wc -l

# -t 2 -d 1.9  = nr of taxa: 201; nr of partitions: 123
#      -d 0.5  = nr of taxa: 209; nr of partitions: 384
#      -d 0.1  = nr of taxa: 218; nr of partitions: 638
#         0.05 = nr of taxa: 218; nr of partitions: 698
#      -d 0.01 = nr of taxa: 219; nr of partitions: 750
# -t 4 -d 0.01 = nr of taxa: 221; nr of partitions: 743
# -t 3 -d 0.05 = nr of taxa: 218; nr of partitions: 698
# itol2 v1 was: -t 3 -d 0.05


# / 756

#################################################################################################################

# 4) ALIGNMENT QUALITY

#-b1= 	Minimum Number Of Sequences For A Conserved Position; (50% of the number of sequences + 1)
#-b2= 	Minimum Number Of Sequences For A Flank Position ; (85% of the number of sequences)
#-b3= 	Maximum Number Of Contiguous Nonconserved Positions (8)
#-b4= 	Minimum Length Of A Block; (10)
# b5=allow gap positions with none; 
#-b1=19 -b2=21  -b3=8 -b4=10 -b5=n 

# default allow gao positions with non, although this removes drastically, changed to half
# file gblocks_ortholog_results list names of orthologs retained

rm *.RM4 *-gb.htm *-gb gb_screenout* gblocks_ortholog_results
list_ortholog_alignments=(insectaNUCL*.clo)
for i in ${!list_ortholog_alignments[*]}
  do filename=${list_ortholog_alignments[$i]};filename_pruned=$filename'_pruned.fa'
  if [ -f $filename_pruned ];
    then

      #######################################################################################
      echo found tree for pruned alignment named $filename_pruned
      rm gb_screenout
      Gblocks_0.91b $filename_pruned -t=p -b5=h > gb_screenout
    #  cp gb_screenout gb_screenout.$filename_pruned
      val=$(grep "Gblocks alignment:  0 positions (0 %) in 0 selected" gb_screenout | wc -l)
      if [ $val -eq 1 ]; then
        echo delete
        else
        echo keep
	echo $filename_pruned >> gblocks_ortholog_results
        cp $filename_pruned $filename_pruned.RM4
       fi
      #######################################################################################

    else 
      echo CANT find tree for pruned alignment named $filename_pruned
  fi
done



ls *.RM4 | wc -l # 747



#################################################################################################################

 # 5) BOOTSTRAP SUPPORT

# fall 2016: also remove orthd with low boot support, this will improve IC
# $bootstrap_cutoff = 0.70;

rm *.RM5
list_ortholog_alignments=(insectaNUCL*.clo)
for i in ${!list_ortholog_alignments[*]}
  do filename=${list_ortholog_alignments[$i]};filename_pruned=$filename'_pruned.fa'
  if [ -f $filename_pruned.orth_ft_pruned ];
    then
     # echo found tree for pruned alignment named $filename_pruned.orth_ft_pruned
     # cat $filename_pruned.orth_ft_pruned
      perl ~/usr_scripts/newick/calculate_branchlength_variance.pl $filename_pruned.orth_ft_pruned -bootstrap
    else 
      echo CANT find tree for pruned alignment named $filename_pruned
  fi
done

ls *.RM5 | wc -l
ls *.orth_ft_pruned | wc -l
# 715 / 756


# parse_phylobayes_LOG all_branch_results MARE_LogScreen
# perl ~/scripted_analyses/insect_TOL_analysis/scripts/parse_ortholog_bias_scores.pl
# makes R table






# have calculated 5 different characteristics for ech ortholog, now make a matrix

# $ITOL_version = 2
rm *.RMmulti
# perl ~/scripted_analyses/COIevol/scripts/multiple_bias_filter.pl 
perl ~/scripted_analyses/insect_TOL_analysis/scripts/multiple_bias_filter.pl


# pb_keys:662, BL_keys:717, MR_keys:697, ALN_keys:746, BOOT_keys:714
# out of 755, presnt all three:585

cat	mammal
dog	mammal
rose	plant
rose	spiny


/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java -Xms64m -Xmx512m -jar /home/douglas/software/venn_diagrams/VennMaster-0.37.5/VennMaster-0.37.5/venn.jar $*

ls *.RMmulti | wc -l

# there seems to be one ortholog crashing partition finder, will delete it.
# crash occurs after it prints: 'Finished subset 472/625'
# ortholog 472 is gene471_EOG5QZ633, ortholog 473 is EOG5R228R
mv insectaNUCL.EOG5R228R.clo_pruned.fa.RMmulti insectaNUCL.EOG5R228R.clo_pruned.fa.RMmulti.problem_orth


alignments=(insectaNUCL*.RMmulti)
rm current_supermatrix2 insctNUCL.smatrix.RMmulti partitionfile2 insctNUCL.partitionfile.RMmulti charsetfile2 insctNUCL.charsetfile.RMmulti partitionfinder_datablock insctNUCL.partitfind.RMmulti
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -data_type PROT -matrices ${alignments[*]}
mv current_supermatrix2 insctNUCL.smatrix.RMmulti; mv partitionfile2 insctNUCL.partitionfile.RMmulti; mv charsetfile2 insctNUCL.charsetfile.RMmulti; mv partitionfinder_datablock insctNUCL.partitfind.RMmulti;
grep ">" insctNUCL.smatrix.RMmulti | wc -l # 222

# remove useless sites:
# [consider retaining for branch length purposes]
rm insctNUCL.smatrix.RMmulti.epu new_partitions.rax new_partitions.cs new_partitions.pf insctNUCL.smatrix.RMmulti.epu.partit_rax insctNUCL.smatrix.RMmulti.epu.partit_cs insctNUCL.smatrix.RMmulti.epu.partit_pf
perl ~/usr_scripts/alignment_processing/exclude_parsimony_uninformative.pl -in insctNUCL.smatrix.RMmulti -out insctNUCL.smatrix.RMmulti.epu -data_type PROT -remove_invar -remove_ambig -partition_file insctNUCL.partitionfile.RMmulti
mv new_partitions.rax insctNUCL.smatrix.RMmulti.epu.partit_rax; mv new_partitions.cs insctNUCL.smatrix.RMmulti.epu.partit_cs; mv new_partitions.pf insctNUCL.smatrix.RMmulti.epu.partit_pf

# huge dataset, for partition scheming, run on reduced sample
rm insctNUCL.smatrix.RMmulti.epu.sample40 insctNUCL.smatrix.RMmulti.epu.sample40.phy
perl /home/douglas/usr_scripts/sample_db.pl insctNUCL.smatrix.RMmulti.epu 40 2 insctNUCL.smatrix.RMmulti.epu.sample40 NULL
perl ~/usr_scripts/format_conversion.pl insctNUCL.smatrix.RMmulti.epu.sample40 insctNUCL.smatrix.RMmulti.epu.sample40.phy fasta phylip


# define meta-parititons with partition finder
# check settings in partition_finder.configA and partition_finder.configB
# then make new config file with new set of orthologs 
cat partition_finder.configA insctNUCL.smatrix.RMmulti.epu.partit_pf partition_finder.configB > partition_finder.cfg

# big analysis, run on DELL tower.
# copy files insctNUCL.smatrix.RMmulti.epu.sample40.phy and partition_finder.cfg
# to ~/scripted_analyses/insect_TOL_analysis/transcriptomes/partition_finder/

# then pf command is:
# python ~/software/partition_finder/partitionfinder-2.1.1/PartitionFinderProtein.py --raxml --rcluster-max 20 --force-restart partition_finder

# 4000 proved to be prohibitivly slow (after 1 week: >61 gb memory, 475 subsets, step 150 of up to 623) ... 2000 took 5 days
python ~/software/partition_finder/partitionfinder-2.1.1/PartitionFinderProtein.py --raxml --processors 30 --rcluster-max 4000 partition_finder




# old:
# count_columns:320060; count_parsimony_uninformative_columns:22826; count_invariant_columns:74499
# count_ambiguous_columns:85442; count_rm_columns:182767; new_alignment_length:137293
# python /home/douglas/software/partition_finder/partitionfinder-2.1.1/PartitionFinder.py --raxml --force-restart partition_finder
# python /home/douglas/software/partition_finder/partitionfinder-1.1.1/PartitionFinderProtein.py --raxml --force-restart partition_finder


# terminal in gene trees but not in main tree:
grep "Aulacus" insctNUCL.smatrix.RMmulti.epu
# is in this file





########################################

#################################################################################################################





cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/





# here, based on reviewer suggestion and similar to analysis included in Misof et al,
# make reduced matrix in which orthologs not having sequence for set of key taxonomic groups (proably orders),
# are removed.
# these usually termed decisive matrices
# define ortholog file names in the script:insectaNUCL*.RMmulti


supermatrix=insctNUCL.smatrix.RMmulti
rm insectaNUCL.*.clo_pruned.fa.RMmulti_order
# script below reads taxa present in supermatrix, then scans folder for files: insectaNUCL*.RMmulti
# for each ortholog , if orders >= 28, copy ortholog ortholog_order
perl ~/scripted_analyses/insect_TOL_analysis/scripts/taxon_filter_orthologs.pl $supermatrix 
ls insectaNUCL.*.clo_pruned.fa.RMmulti_order | wc -l # 475 
ls insectaNUCL*.RMmulti | wc -l # 624
alignments=(insectaNUCL*.RMmulti_order)
rm current_supermatrix2 insctNUCL.smatrix.RMmulti_order partitionfile2 insctNUCL.partitionfile.RMmulti_order charsetfile2 insctNUCL.charsetfile.RMmulti_order partitionfinder_datablock insctNUCL.partitfind.RMmulti_order new_metapartitions new_metapartitions_INFO
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -data_type PROT -metapartitions best_scheme.txt -matrices ${alignments[*]}
mv current_supermatrix2 insctNUCL.smatrix.RMmulti_order; mv partitionfile2 insctNUCL.partitionfile.RMmulti_order; mv charsetfile2 insctNUCL.charsetfile.RMmulti_order; mv partitionfinder_datablock insctNUCL.partitfind.RMmulti_order;
rm insctNUCL.smatrix.RMmulti_order.phy
perl ~/usr_scripts/format_conversion.pl insctNUCL.smatrix.RMmulti_order insctNUCL.smatrix.RMmulti_order.phy fasta phylip
# transfer files to dell tower for tree building:insctNUCL.smatrix.RMmulti_order.phy AND new_metapartitions


# dont bother with below, would be quite awkward to modeify epi script to work on metapartitioned charset file,
# rm insctNUCL.smatrix.RMmulti_order.epu new_partitions.rax new_partitions.cs new_partitions.pf insctNUCL.smatrix.RMmulti_order.epu.partit_rax insctNUCL.smatrix.RMmulti_order.epu.partit_cs insctNUCL.smatrix.RMmulti_order.epu.partit_pf
# also, not redefining meta-partitons.
# perl ~/usr_scripts/alignment_processing/exclude_parsimony_uninformative.pl -in insctNUCL.smatrix.RMmulti_order -out insctNUCL.smatrix.RMmulti_order.epu -data_type PROT -remove_invar -remove_ambig -partition_file insctNUCL.partitionfile.RMmulti_order
# mv new_partitions.rax insctNUCL.smatrix.RMmulti_order.epu.partit_rax; mv new_partitions.cs insctNUCL.smatrix.RMmulti_order.epu.partit_cs; mv new_partitions.pf insctNUCL.smatrix.RMmulti_order.epu.partit_pf
# rm insctNUCL.smatrix.RMmulti_order.epu.sample40 insctNUCL.smatrix.RMmulti_order.epu.sample40.phy
# perl /home/douglas/usr_scripts/sample_db.pl insctNUCL.smatrix.RMmulti_order.epu 40 2 insctNUCL.smatrix.RMmulti_order.epu.sample40 NULL
# perl ~/usr_scripts/format_conversion.pl insctNUCL.smatrix.RMmulti_order.epu.sample40 insctNUCL.smatrix.RMmulti_order.epu.sample40.phy fasta phylip

# 2019-04: not sure i even checked the resut of above, must have slipped the mind  .... do it now.

cd /home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/

cat RAxML_bootstrap.*.RMmulti_order* | wc -l

rm insctNUCL.bootstrap
cat RAxML_bootstrap.*.RMmulti_order* > insctNUCL.bootstrap.RMmulti_order

rm insctNUCL.RMmulti.sumtrees
sudo sumtrees.py --min-clade-freq=0.0 --log-frequency=10 --to-newick --replace --support-as-labels --burnin=0 --output=insctNUCL.bootstrap.RMmulti_order.sumtrees insctNUCL.bootstrap.RMmulti_order
rm insctNUCL.RMmulti.sumtrees.procd
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl insctNUCL.bootstrap.RMmulti_order.sumtrees
rm insctNUCL.RMmulti.sumtrees.tax
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile insctNUCL.bootstrap.RMmulti_order.sumtrees.procd -output insctNUCL.bootstrap.RMmulti_order.sumtrees.tax -node 6960 -newick

# pdf saved here
# /home/douglas/scripted_analyses/insect_TOL_analysis/results_figures_tables/insctNUCL.bootstrap.RMmulti_order.sumtrees.tax.pdf
# only topo difference i can find:Manduca_sexta Bombyx_mor are switched round. otherwise identical.


cat RAxML_bootstrap.insectaNUCL.smatrix.RMall.partit*.PID.*


#################################################################################################################





# need a script just to figure out where species have gone missing, seems 8 gone missing

perl ~/scripted_analyses/insect_TOL_analysis/scripts/track_species_through_transcriptome_analyses.pl
# was easy, some transcriptomes there were no blast results, and some very few eg musca.

91 were removed with significant composiitonal heterogeneity, 37 distributional outliers in brachlength var,
58 information content, 9 contained no conserved blocks. 41 had gene trees with av node suppirt <70%
585 remained. afger concatenation 320060 aa alignment, 
a further 182767 were removed: 74499 invarient, 85442 ambiguous, 22826 parsimony_uninformative.
final alignment of 137293 aa.







cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/









####################################################################################################3

# as of AUG 2016, SKIP ....




# 1= phylobayse p val; 2= branch length varience; 3=mare information
t1<-read.table("RTABLE", header=F, row.names=1)
# high z-score = heterogeneity, low z-score = homogeneity, http://www.nature.com/articles/srep20528
# comparing list of values:high significance = high z-score; not signofocant = low (minus) zscore.
# pphylobayes pval; branchlength var, mare
_on

t2<-t1
# low val = bad; signif pval; hetero
t2[,1]<-rank(t1[,1], na.last = TRUE, ties.method = "random")
# low val = good
t2[,2]<-rank(-t1[,2], na.last = TRUE, ties.method = "random")
# low val = bad (probably); inforkatino content
t2[,3]<-rank(t1[,3], na.last = TRUE, ties.method = "random")
# these give bad == low rank
sum_ranks<-t2[,1]+t2[,2]+t2[,3]
# high number = good orthologs

# look at distribution, there is a dropoff of ortholog score, a threshold, 
# then a relarive platou of better scoring ones
plot(sort( (t1[,1]+t1[,3])  - t1[,2] ), ylim=c(0,2), ylab= "heterogeneity_p-value+mare_info_content-branchlength_varience")
segments(1800, 0.0, 1800, 2.0 , lwd= 2, col = "red")
# cutof   1.1

indices <- (1:length(t1[,1])) [ ((t1[,1] + t1[,3])  - t1[,2]) >= 1.1]

# cor.test(t1[,1], t1[,2])
# sums<-t2[,1]+t2[,2]+t2[,3]
# indices <- (1:length(t1[,3]))[t1[,1] <= 0.1 & t1[,2] >= 0.05 & t1[,3] <= 0.5]

new_filenames <- attr(t1[indices,], "row.names")
write(new_filenames, file = "best_orthologs", ncolumns = 1, append = FALSE, sep = " ")

rm *.RMall
# make sure commands for current iteration are not hashed out:
perl ~/scripted_analyses/COIevol/scripts/filename_processing.pl best_orthologs

alignments=(insectaNUCL*.RMall)
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -matrices ${alignments[*]}
mv current_supermatrix2 insectaNUCL.smatrix.RMall; mv partitionfile2 insectaNUCL.partitionfile.RMall; mv charsetfile2 insectaNUCL.charsetfile.RMall
perl ~/usr_scripts/alignment_processing/exclude_parsimony_uninformative.pl -in insectaNUCL.smatrix.RMall -out insectaNUCL.smatrix.RMall.epu -data_type prot -remove_invar -remove_ambig



####################################################################################################3





	#   high memory demand for this step


perl ~/usr_scripts/format_conversion.pl insctNUCL.smatrix.RMmulti.epu insctNUCL.smatrix.RMmulti.epu.phy fasta phylip

insctNUCL.smatrix.RMmulti.epu




# first, no partition:

mpirun -n 4 raxmlHPC-MPI-8.2.4 -f a -x 123 -p 123 -# 500 -s insctNUCL.smatrix.RMmulti.epu.phy -n insectaNUCL.smatrix.RMall -m PROTCATBLOSUM62 -c 24

# then with partition
# partitions were defined by partit finder, in the transcriptomes folder 
# file is /home/dell/scripted_analyses/insect_TOL_analysis/transcriptomes/best_scheme_2017DEC.txt
# manually remove all but raxml style defiintions, save as 
# /home/dell/scripted_analyses/insect_TOL_analysis/backbone_tree/best_scheme_2017DEC.raxml
# it might complain about too few states in some partitions, just need to combine these
# JTT, Subset86 = 53189-53256, 158101-158154, 163391-163503, 256916-256984
# parttion finder tests some models which cant be used with PROTCAT,
# best to provide PF with a list of models to tesdt, with these omited
# for now just change these in the partit file, e.g. LG4X / LG4M to LG (making file best_scheme_2017DEC.raxml_test)
# those models do work with PROTGAMMA, though the computer cannot handle gamma anyway, for this size matrix.

mpirun -n 2 raxmlHPC-MPI-8.2.4 -f a -x 456 -p 456 -# 200 -s insctNUCL.smatrix.RMmulti.epu.phy -n insectaNUCL.smatrix.RMall.partit2 -m PROTCATBLOSUM62 -c 24 -q best_scheme_2017DEC.raxml_test




##########################################################################################3




# making the main transcriptome backbone tree is still a bit slow on the dell tower,
# run some bootstraps on the IOZ cluster also
# when running extra boot replicates , MUST change seed values in raxml command.


# perl ~/usr_scripts/format_conversion.pl insctNUCL.smatrix.RMmulti.epu insctNUCL.smatrix.RMmulti.epu.phy fasta phylip
# perl ~/usr_scripts/scan_fasta_to_phylip.pl insectaNUCL.smatrix.RMall.epu TEST.phy



# job submission file. save this as sub_201712:

#PBS -N raxml_201712
#PBS -l nodes=1:ppn=10
#PBS -q big
#PBS -l walltime=240:00:00
#PBS -d /home/wei/DC/insect_TOL_analysis/
#PBS -j oe
mpirun -np 10 /home/wei/software/RAxML-MPI/raxmlHPC-MPI-SSE3 -f a -x 789 -p 789 -# 200 -s /home/wei/DC/insect_TOL_analysis/insctNUCL.smatrix.RMmulti.epu.phy -n insectaNUCL.smatrix.RMall.partit3 -m PROTCATBLOSUM62 -c 24 -q /home/wei/DC/insect_TOL_analysis/best_scheme_2017DEC.raxml_test


# OLD:
# now do a standard raxml bootstrap on the IOZ cluster
# scp /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/insectaNUCL.smatrix.RMall.epu.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insectaNUCL.smatrix.RMall.epu.phy
# scp /home/douglas/scripted_analyses/insect_TOL_analysis/data/sub12 wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/sub12
# aug2016:
# scp /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/insctNUCL.smatrix.RMmulti.epu.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insctNUCL.smatrix.RMmulti.epu.phy
# logged on c;uster, modified sub12 for this infile, renamed sub50


scp /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/insctNUCL.smatrix.RMmulti.epu.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insctNUCL.smatrix.RMmulti.epu.phy
scp /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/best_scheme_2017DEC.raxml_test wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/best_scheme_2017DEC.raxml_test
scp /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/sub_201712 wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/sub_201712



# 
ssh -l wei 10.0.0.181 # wei789
cd /home/wei/DC/insect_TOL_analysis/
qsub sub_201712 # 555294.admin
qstat -Q
qstat -f 555294.admin


cd /home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/

ls RAxML_bootstrap.insctNUCL.smatrix.RMmulti.PID.*

# copy boot results from cluster to local computer:
# ls RAxML_boot*RMall*
# scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_boot*RMall2* .
# temp:
# scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_bootstrap.insctNUCL.smatrix.RMmulti.PID.* .
scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_bootstrap.insctNUCL.smatrix.RMmulti .

# cat RAxML_boot*RMall2* RAxML_boot*RMall3* RAxML_boot*RMall4* > insectaNUCL.bootstrap
# cat RAxML_bootstrap.insctNUCL.smatrix.RMmulti.PID.* > insctNUCL.bootstrap

# JAN2018:

keep copy of old one
mv insctNUCL.RMmulti.sumtrees insctNUCL.RMmulti.sumtrees.OLD

cd /home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/

# how many boots:
cat RAxML_bootstrap.insectaNUCL.smatrix.RMall.partit*.PID.* | wc -l # 108
rm insctNUCL.bootstrap
cat RAxML_bootstrap.insectaNUCL.smatrix.RMall.partit*.PID.* > insctNUCL.bootstrap

# there were 37 done on the cluster (partit3) fniinshing 28 Dec 2017 (copy of these on Dell tower dated 6th Jan 2018), 
# on tower, 49 (.partit) + 23 (.partit2)


# old file of boots is RAxML_bootstrap.insctNUCL.smatrix.RMmulti, new one is insctNUCL.bootstrap

# write protected for some reason, so run command on its own:
rm insctNUCL.RMmulti.sumtrees
# not sure why sudo is required to run this command
sudo sumtrees.py --min-clade-freq=0.0 --log-frequency=10 --to-newick --replace --support-as-labels --burnin=0 --output=insctNUCL.RMmulti.sumtrees insctNUCL.bootstrap
rm insctNUCL.RMmulti.sumtrees.procd
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl insctNUCL.RMmulti.sumtrees
rm insctNUCL.RMmulti.sumtrees.tax
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile insctNUCL.RMmulti.sumtrees.procd -output insctNUCL.RMmulti.sumtrees.tax -node 6960 -newick



# root tree (export tree in figtree) at acerentomon and remove any troublesome taxa


java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*




	# Jan 2017: seems i didnt bother making a tree with branchlengths, do this now!

 # consenus tree from RMmulti:
consensus=/home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/insctNUCL.RMmulti.sumtrees.procd
 # matrix ( presumably old one : 222 137293):
matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/insctNUCL.smatrix.RMmulti.epu
fasttree_2.1.7 -nosupport -gamma -nome -mllen -intree $consensus < $matrix > inNUCL.RMmulti.FtBl
# make sure script is not set to rm bl's!
perl ~/usripts/species_to_complete_taxonomies.pl -seqfile inNUCL.RMmulti.FtBl -output inNUCL.RMmulti.FtBl.tax -node 6960 -newick
java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*







# cd /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/
cd /home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/





# calculate internode certainty based on gene trees, based on itol1 IC seems quite stringent test of node support


 # remove accessions, make phylip files
alignments=(insectaNUCL*.clo_pruned.fa)
rm insectaNUCL*.clo_pruned.fa.sed insectaNUCL*.clo_pruned.fa.sed.phy
for i in ${!alignments[*]}
  do filename=${alignments[$i]};echo current file $i is $filename;
  cat $filename | sed -e 's/[|].*//' > $filename.sed
  perl ~/usr_scripts/format_conversion.pl $filename.sed $filename.sed.phy fasta phylip
  rm $filename.sed
done

 # make gene trees with raxml
 # do all orthologs not just filtered ones, might need others later.
  # run this on the tower
 # seems IC doesnt use blength information. probably dont need final optimization , so use option -F
rm RAxML_*.insectaNUCL.*.clo_pruned.fa.sed.phy
alignments=(insectaNUCL*.clo_pruned.fa.sed.phy)
no_cpus=25;count=0
for i in ${!alignments[*]}
  do filename=${alignments[$i]};echo current file $i is $filename;
  raxmlHPC-8.2.4 -F -s $filename -n $filename -m PROTCATBLOSUM62 -c 24 -p 123 &
  let count+=1
  [[ $((count%no_cpus)) -eq 0 ]] && wait
done

 # copy raxml gene trees from dell tower

/home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/
ls RAxML_*.insectaNUCL.*.clo_pruned.fa.sed.phy | wc -l

# this contains gene-trees from orthologs which were filtered for concatenated tree searching
# ie you might consider it inapproriate
cat /home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/RAxML_result.insectaNUCL.*.clo_pruned.fa.sed.phy > transcriptome_gene_trees

# prefer this one, script to make file of gene trees only from filtered orthologs
rm filtered_genetrees
perl ~/scripted_analyses/insect_TOL_analysis/scripts/cat_gene_trees_from_certain_orthologs.pl


# transcriptome summary tree  ....... ,(Euwallacea_fornicatus,Ips_typographus)1.00)1
# gene tree ..........                ,((Ectopsocus_briggsi,(Liposcelis_


# transcriptome_gene_trees has all orthologs, including those not used to make the concat tree,
# you provably need instead filtered_genetrees

transcriptome_sumtree=insctNUCL.RMmulti.sumtrees.procd
rm RAxML*transcriptome_sumtree.IC1 raxml_IC_screenout
raxmlHPC-8.2.4 -f i -t $transcriptome_sumtree -z filtered_genetrees -n transcriptome_sumtree.IC1 -m PROTCATBLOSUM62 > raxml_IC_screenout

# ERROR: Cannot find tree species: Aulacus_burquei
grep "Aulacus_burquei" transcriptome_gene_trees | wc -l # 902
grep "Aulacus_burquei" $transcriptome_sumtree
# that error was due to using the old tree, corrected, still get:
# ERROR: Cannot find tree species: Chrysomela_populi
grep "Chrysomela_populi" transcriptome_gene_trees | wc -l # only in 3!
grep "Chrysomela" $transcriptome_sumtree

# open transcriptome_gene_trees, manually deelet lines with Chrysomela_populi, Epiphyas_postvittana

# now have this to deal with:
#  :0.90000000000000002220[0.959,0.959],Diaphorina_citri

# 2 methods use to calcualte IC (alos note , there are other indexes output)
# intree=RAxML_Corrected_Probabilistic_IC_Score_BranchLabels.transcriptome_sumtree.IC1
intree=RAxML_Corrected_Lossless_IC_Score_BranchLabels.transcriptome_sumtree.IC1

rm RAxML_Corrected_Lossless_IC_Score_BranchLabels.transcriptome_sumtree.IC1.procd NUCLsumtree.ICl
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl $intree 4
mv RAxML_Corrected_Lossless_IC_Score_BranchLabels.transcriptome_sumtree.IC1.procd NUCLsumtree.ICl

# IC of probabilistic is much lower than IC of Lossless
# since vast amjorituty of gene trees were partial (did not contain all taxa), 
# opted to use lossless (Kobert et al 2016)




java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.2/lib/figtree.jar $*


# have sepearte supprto values, IC and bootstrap , need to comined these as single node label.
IC_tree=NUCLsumtree.ICl
bootstrap_tree=insctNUCL.RMmulti.sumtrees.procd

# reroot at Speleonectes
# cant reroot and export with figtree, it removes node support and inserts arbitraty branch length

# devlop new function for combining node labels

# -reroot_at INTERNAL_NODE_350

 # first basic run:
perl ~/usr_scripts/process_newick.pl -intree $bootstrap_tree -outprefix NUCLsumtree_combined_labelsTEST -ncbi_tax_node 6960
 # open process_newick1, find ID of reroot node (Speleonectes)
 # also need reroot node of second tree (not neccessary having the same ID)
perl ~/usr_scripts/process_newick.pl -intree $IC_tree -outprefix NUCLsumtree_combined_labelsTEST -ncbi_tax_node 6960
 # although in this case, does have same node ID, write in
perl ~/usr_scripts/process_newick.pl -intree $bootstrap_tree -outprefix NUCLsumtree_combined_labels -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_350 -combine_node_labels $IC_tree INTERNAL_NODE_350
 # newick output with both types of support given as node labels is named:NUCLsumtree_combined_labels.process_newick5
# append higher tax names
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile NUCLsumtree_combined_labels.process_newick5 -output NUCLsumtree_combined_labels.process_newick5.tax -node 6960 -newick


# 2019. backbone tree you need is HERE:
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file NUCLsumtree_combined_labels.process_newick5.tax



# draw tree within BLs, also node labels from second tree, which are boot followed by IC 
perl ~/usr_scripts/process_newick.pl -plot_tree -intree inNUCL.RMmulti.FtBl -outprefix inNUCL.RMmulti.FtBl -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_350 -combine_node_labels NUCLsumtree_combined_labels.process_newick5 INTERNAL_NODE_350
# outer is bootstrap, inner is IC

# draw legend
library("plotrix")
plot(0, type = "n", xlim = c(0,1), ylim = c(0,1), xlab = "",ylab = "",xaxt = "n", yaxt = "n", bty = "n")
colorfunc = colorRamp(c("red" , "green"))
colors2<- rgb(colorfunc(0.25) , maxColorValue=255)
 points( 0.3, 0.2 , pch=15, cex=12, col=colors2);text(0.6, 0.2, labels = "0.25", cex=5, srt=-0) 
colors2<- rgb(colorfunc(0.5) , maxColorValue=255)
 points( 0.3, 0.4 , pch=15, cex=12, col=colors2);text(0.6, 0.4, labels = "0.50", cex=5, srt=-0) 
colors2<- rgb(colorfunc(0.75) , maxColorValue=255)
 points( 0.3, 0.6 , pch=15, cex=12, col=colors2);text(0.6, 0.6, labels = "0.75", cex=5, srt=-0) 
colors2<- rgb(colorfunc(1.0) , maxColorValue=255)
 points( 0.3, 0.8 , pch=15, cex=12, col=colors2);text(0.6, 0.8, labels = "1.00", cex=5, srt=-0) 



java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree.v1.4.4/FigTreev1.4.4/lib/figtree.jar $*








cd ~/scripted_analyses/insect_TOL_analysis/backbone_tree/








#########################################################################################





# no manual for treepl, nor instructions on how to do things ....
treefile = inNUCL.RMmulti.FtBl
smooth = 100
numsites = 137293
mrca = ENDOP Drosophila_malerkotliana Apis_mellifera
min = ENDOP 10
max = ENDOP 10
outfile = inNUCL.RMmulti.FtBl.treePL

treePL treePL_config


# ...... so try r8s instead.
# lucky to get it installed, usually fail 
r8s_v1.81 -b -f r8s_in > screenout

# few options for comparing rates on a phylogeny, although some history in pairwise comparison of relative rates.



# new script:

perl ~/usr_scripts/process_newick.pl -intree inNUCL.RMmulti.FtBl -outtree inNUCL.RMmulti.FtBl.tax -ncbi_tax_node 33208 -reroot_at INTERNAL_NODE_10









cd /home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/









############################################################################################################
#
#
#
#
#
############################################################################################################






	MTGENOMES




try bi-partite. combine ~800 mtproteomes with COI barcode, 28s, 16s, 18s.
.... actually 800 mt-omes fits 220 transcriptomes better than quarter mill species ...





cd /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/





# downloads on 21 Jan 2018


tar xvzf taxdump.tar.gz




# as of JUL 2017, transctipomes expadedn to hexapoda with crustacaen outgroup, thus should be HEXAPOD here
# ougroup is Speleonectes (tulumensis?). single outgroup makes things easy eg tree rooting


# search NCBI nucleotide for 
("complete" [TITLE] AND "genome" [TITLE] AND ("mitochondrial" [TITLE] OR "mitochondrion" [TITLE])) AND insecta [organism]
# send to file, summary. save as insect_mtgenome_completeONLY_summary

# then add partial genomes if they are from a genus not present in the completes. so:
("partial" [TITLE] AND "genome" [TITLE] AND ("mitochondrial" [TITLE] OR "mitochondrion" [TITLE])) AND insecta [organism]
# save as insect_mtgenome_partialONLY_summary

# retreive outgroups:
NC_022674.1,NC_026666.1,NC_010533.1
# save complete sequences, genbank full format, as sequence_OG.gb


# retrive and filter complete mtgenomes
rm tax_parse_genbank_summary_ACCESSIONS
perl ~/usr_scripts/taxon_parse_genbank_summary_results.pl insect_mtgenome_completeONLY_summary 6960 3
# gives accessions i nouput file, proably several lines which need pasting to NCBI search box seperatly
# save genbank full
mv insecta_mtgenome_genus insecta_mtgenome_genus_OLD1
cat sequence_OG.gb sequence1.gb sequence2.gb sequence3.gb sequence4.gb > insecta_mtgenome_genus

# retreive and filter partials
rm tax_parse_genbank_summary_ACCESSIONS
perl ~/usr_scripts/taxon_parse_genbank_summary_results.pl insect_mtgenome_partialONLY_summary 6960 3
cat sequence1.gb sequence2.gb sequence3.gb > insecta_mtgenome_genus_partials
rm sequence1.gb sequence2.gb sequence3.gb


perl parse_translations_from_genbank_flatfile.pl -in insecta_mtgenome_genus -out insecta_mtgenome_genus.prot -out_suffx NULL -id_format 4 -preferred_annotation_field 1



# next script uses a log file, which looks something like:
# entry:882 tax:Acrotona_obfuscata ac:KT780620.1 fAM:Staphylinidae Order:Coleoptera genus:Acrotona species:Acrotona_obfuscata lineage:class:Insecta no_rank:Dicondylia subclass:Pterygota infraclass:Neoptera cohort:Holometabola order:Coleoptera suborder:Polyphaga infraorder:Staphyliniformia superfamily:Staphylinoidea family:Staphylinidae no_rank:Tachyporinae_group subfamily:Aleocharinae tribe:Athetini genus:Acrotona species:Acrotona_obfuscata 
# entry:1050 tax:Agyrtodes_labralis ac:JX412779.1 fAM:Leiodidae Order:Coleoptera genus:Agyrtodes species:Agyrtodes_labralis lineage:class:Insecta no_rank:Dicondylia subclass:Pterygota infraclass:Neoptera cohort:Holometabola order:Coleoptera suborder:Polyphaga infraorder:Staphyliniformia superfamily:Staphylinoidea family:Leiodidae subfamily:Camiarinae genus:Agyrtodes species:Agyrtodes_labralis 
# inputs are 1:logfile 2:gb_flatfile 3:tax level
# reads log file to record which genera have a partial genome
# then reads flat file of complete mtgenomes, checks to see which of the partial genera are already represented.
# prints ouput file listing partials needed

file1=insect_mtgenome_partialONLY_summary.taxon_parse_genbank_summary_results_LOG
rm partial_mtgenomes_needed
perl ~/usr_scripts/add_partial_mtgenomes.pl $file1 insecta_mtgenome_genus genus



# genera with a partial genome and no complete genome:
# itol2 v1:
#partials=(Afrocampsis Proterops Suragina Mastinocerus Cardiochiles Ischnusia Asthenopholis Leptomyxotermes Hemipeplus Sipyloidea Cephalonomia Myodermum Jugositermes Tipula Platydema Orophyllus Haliplus Agrilus Sphindus Neobellieria Hybosorus Kokeshia Polistes Paroligoneurus Limnichidae Xylomya Coridius Ciidae Urodus Tychobythinus Anaspis Ceutorhynchus Aloconota Ips Peltodytes Deporaus Parocyusa Necydalis Habrodera Marmarodeceia Xinidium Lema Medon Promirotermes Neobisnius Chrysolagria Stenus Scydmaeninae Drilonius Eudasyphora Boettcheria Labiotermes Omalium Pleophylla Clanoptilus Habrocerus Teredus Monomachus Aleochara Epiphyas Harmonia Histeromerus Brachycerus Paralucilia Dysstroma Brentidae Limnius Diceroprocta Serritermes Satanas Lathrobium Liophloeus Cephalotermes Meteorus Oxytelus Hydroporus Phloiophilus Cordulia Diachasmimorpha Platystomos Xiphozele Bolboceratex Philotrypesis Eusphalerum Noteridae Tenthredo Ethmia Ocyptamus Hellula Procubitermes Urodontus Xenos Trox Alucita Embiratermes Orsodacne Disteniazteca Ancistrotermes Bittacomorphella Rhopalapion Eucnemidae Brachynopus Halictus Bisnius Glischrochilus Glyptotermes Loberonotha Acanthotermes Stilpnonotus Schlettererius Attagenus Acronicta Tasgius Prostomis Brachygluta Lasioglossum Cryptopleurum Diadromus Micropterix Donacia Scirtidae Dorcus Diplonychus Chirotenon Elmis Euurobracon Styloperla Fleutiauxia Aphelocheirus Scaphisoma Daktulosphaira Microsepsis Anthaxia Termitogeton Rhagio Sericostoma Larinus Rubiconia Chromatomyia Halyzia Eumacrocentrus Trissolcus Micrambina Morellia Xyleborus Stomoxys Agonum Homolobus Subcoccinella Eurypogon Cavitermes Enicospilus Aphodius Strophosoma Euaesthetus Glaresis Aspidiphorus Basidentitermes Cryptotermes Parrhinotermes Glossotermes Eoxenos Paratenetus Ptilodactyla Dermestes Scydmaenidae Sinoxylon Andrena Formicomus Ameletus Hydrotaea Nitidulidae Sumalia Phycosecis Therophilus Perotis Rhodoneura Monocellicampa Zeuzera Hypomedon Erotylidae Carpelimus Caetetermes Espanoliella Winthemia Propylea Bruchinae Brundinia Ctenisodes Apoderus Stigmella Pollenia Heleodromia Euryomma Wohlfahrtia Tettigades Prorhinotermes Duplidentitermes Sigara Cyphonistes Anthonomus Adoretus Diartiger Pambolus Laccoptera Sarophorus Paramarygmus Dexiogyia Prioninae Philonthus Chrysops Sitona Pselaphinae Emmelina Lucifotychus Seladonia Potamanthus Propalticus Stenurella Polyphylla Oegoconia Cantharis Grylloblatta Ptecticus Paromalus Phrixothrix Priacma Nigidius Trigonotylus Craspedophorus Glaphyrus Pedetontinus Asphondylia Pselaphanus Ocypus Noctua Sphecodes Astalotermes Abraeinae Odontotermes Capitonius Copelatus Endomychus Chapuisia Orestes Ceratosolen Exema Melittomma Himacerus Rhamphomyia Neophonus Tychus Phloeopora Dicronychus Leptopus Schizonycha Kateretes Nomada Cionus Dolichopus Mikadonius Dialysis Platypodinae Astrotischeria Aderidae Syntermes Phaedon Metopsia Chloroprocta Hexagonia Teslasena Batrisodes Xyletinus Eutrapela Triraphis Sphaerotermes Synacanthotermes Endrosis Agyrtodes Sinocapritermes Astenus Anoplotrupes Tineola Pterocomma Macrocentrus Elminae Sigalphus Magicicada Amphiops Pseudogriphoneura Arescus Doa Kyklioacalles Quercusia Hodotermopsis Hypera Polydrusus Silvanus Bradysia Omalisus Enicmus Calleida Malachiinae Eudonia Bacillus Orthognathotermes Sunius Crataraea Trinodes Vesperus Brachinus Byrrhus Apatania Anoplotermes Aphidius Dolichorhinotermes Epermenia Brachytemnus Phanerotoma Perimede Doydirhynchus Barynotus Coenonympha Elasmosoma Pseudocolaspis Leucocelis Gaeana Popillia Scraptia Amalotermes Archisepsis Drepana Ceratocanthus Osphya Aphantopus Trixagus Pseudognaptodon Inachis Salpingus Nudobius Bolitobius Mirax Vespula Polyrhachis Gyrohypnus Ichneutes Mylabris Strongylium Spilopyra Ateuchotermes Ischnosoma Leptogaster Rhagium Apatelopteryx Pericapritermes Phaenocarpa Temnoscheila Platypus Postsubulitermes Dermestidae Nanophyes Euplectus Byrrhinus Phyllonorycter Venturia Cryptocephalus Meru Rybaxis Timarcha Imatidium Sternolophus Pennisetia Ischnomera Libnetis Timema Aderitotermes Teloganodidae Mesembrinella Nargus Acrotona Pterostichinae Cheilomenes Leptocorisa Lacosoma Promecognathus Coccidula Constrictotermes Otiorhynchus Neohirasea Gloeosoma Clambus Osmia Cameraria Hylobius Rugitermes Anobiinae Ephemerella Scolytinae Passalidae Acanthormius Psilothrix Silvestritermes Sciobius Thremma Agriotes Mesocapnia Phyllium)
# itol2 v2:
partials=(Abachrysa Acanthotermes Acronicta Acrotona Adelges Afrocampsis Agabus Agathidium Agonum Agriotes Agyrtodes Aiceona Alobaldia Aloconota Altica Alucita Ammianus Amphiops Ancistrotermes Angularitermes Anisodactylus Anisosticta Anoecia Anoplotrupes Anthonomus Anthrenus Apatelopteryx Aphantopus Aphelocheirus Aphidius Aphodius Aphrophora Aphthona Apoderus Apteropeda Arachnobas Archisepsis Arescus Asiemphytus Asphondylia Aspidiphorus Astenus Atheta Attagenus Australicapitona Bacillus Barynotus Basidentitermes Batophila Bembidion Birmella Bisnius Bittacomorphella Boettcheria Bolitobius Bolivaritettix Boros Brachinus Brachycerus Brachygluta Brachynopus Brachypterolus Brachyta Brachytemnus Bradybatus Bradycellus Bradysia Bromius Broscus Bruchidius Brumptomyia Brundinia Bubas Caccobius Caetetermes Calleida Calvia Calvisia Cameraria Cardiochiles Cassida Celyphus Cephalonomia Ceratosolen Ceratovacuna Ceruchus Ceutorhynchus Chaetocnema Chaetosiphella Chaitophorus Chamaemyia Chapuisia Characopygus Cheilomenes Cheironitis Chilotomina Chirotenon Chlorophorus Chloroprocta Chonosia Chorotypus Chromatomyia Chrysolina Chrysomela Chrysops Cicindela Cinara Cionus Cis Clanoptilus Cleptocaccobius Climacia Clytra Coccidula Coenonympha Colaspidea Colaspidema Coptotettix Cordulia Coridius Corynis Craspedophorus Crataraea Crepidodera Cryptocephalus Cryptopleurum Cryptotermes Cryptotympana Cybister Cycloneda Cymbiodyta Cyphonistes Cyrilliotermes Cyrtanaspis Daktulosphaira Dendroleon Deporaus Dermestes Dexiogyia Diachasmimorpha Diaclina Diadromus Diartiger Dibolia Diceroprocta Dicranocephalus Dicronychus Dicuspiditermes Digitonthophagus Diplonychus Disteniazteca Dolichopus Dolichorhinotermes Donacia Dorcus Dorytomus Doydirhynchus Drepana Drepanepteryx Drepanocerus Drilonius Dysstroma Elmis Emmelina Endomychus Endrosis Enicmus Entomoscelis Eoxenos Epermenia Epiphyas Ericmodes Ernobius Erthesina Espanoliella Ethmia Euaesthetus Eucallipterus Eucorysses Eudasyphora Eudonia Eumantispa Euoniticellus Euplectus Eurysternus Eusphalerum Eutetrapha Euurobracon Evandromyia Exema Exitianus Exosoma Fleutiauxia Fontecilla Formosatettix Gaeana Gastrallus Gastrophysa Geodromicus Glaphyrus Glischrochilus Glyptotermes Greenidea Grylloblatta Gyrinus Gyrohypnus Habrocerus Habrodera Habrophlebiodes Halictus Haliplus Halyzia Harmonia Hartigia Heleodromia Helictopleurus Hellula Helotrephes Heteronitis Hexagonia Himacerus Hippodamia Hodotermopsis Homallotermes Homolobus Hydroporus Hydrothassa Hylesinus Hylobius Hylurgops Hypera Hypocassida Hypomedon Ichneutes Imatidium Inachis Inocellia Ischnomera Ischnosoma Ischnusia Italochrysa Janus Kateretes Kemneritermes Kolla Kurisakia Kyklioacalles Labidostomis Labidura Laccoptera Lachnaia Lacosoma Lamprigera Larinus Lasioderma Lasioglossum Lathrobium Lebia Leiodes Leptogaster Leptomona Leptomyxotermes Leptura Leucochrysa Liatongus Libnetis Limnius Linaeidea Liophloeus Lissodema Loberonotha Longipeditermes Longitarsus Lopheros Lordithon Luperomorpha Macrocentrus Magicicada Mantura Marmarodeceia Mecinus Medon Megalophasma Megymenum Meimuna Melanotus Melasis Melolontha Meru Mesocapnia Mesomelena Meteorus Metopsia Metrius Micrambe Micropterix Micropygomyia Mikadonius Milichus Mirax Monocellicampa Monomachus Morellia Mucroberotha Myiodactylus Nallachius Nanophyes Nargus Necydalis Negastrius Negha Nemoptera Neobellieria Neobisnius Neocrepidodera Neohirasea Neophonus Neothoracaphis Nevrorthus Nipponeurorthus Niptus Noctua Nosodendron Nothancyla Nudobius Ocyptamus Ocypus Odontocheila Oegoconia Olenecamptus Omalisus Omalium Omus Oncotympana Oniticellus Onitis Ontholestes Onthophagus Oreina Orestes Orestia Orophyllus Orosius Orthocis Orthognathotermes Oryzaephilus Osmia Osphya Othius Otiorhynchus Oulema Oxyomus Pachybrachis Pachycephus Pambolus Paratenetus Parocyusa Paroligoneurus Paromalus Parrhinotermes Pedetontinus Peloridora Peltodytes Pennisetia Periphyllus Perotis Peuceptyelus Phaedon Phaenocarpa Phalops Phanerotoma Pheletes Philonthus Philotrypesis Phloeomyzus Phloeopora Phloiophilus Phratora Phrixothrix Phycosecis Phyllaphis Phyllium Phyllonorycter Phyllopertha Phyllotreta Plagiodera Plateumaris Platychile Platypleura Platypus Platystomos Podagrica Poecilocoris Pogonostoma Pogonus Polistes Pollenia Polydrusus Polyphylla Pomponia Pressatia Priacma Procornitermes Promecognathus Propylea Prorhinotermes Protochauliodes Psathyromyia Pseudotetracha Psychodopygus Psychopsis Psylliodes Ptecticus Pterocomma Pyrrhidium Quercusia Rhagium Rhamphomyia Rhipidia Rhizophagus Rhodoneura Rhopalapion Rhopalosiphum Rhynchotermes Romualdius Rubiconia Salpingus Scaphidema Scaphisoma Scaptodera Scarites Schizotus Schlettererius Sciopemyia Scirtes Scolia Seladonia Semidalis Sericostoma Sericus Sermylassa Serritermes Sigalphus Sigara Silpha Sinocapritermes Sipyloidea Sisyra Sitona Smaragdina Sphaeroderma Sphecodes Sphedanolestes Sphindus Spilopyra Stenosialis Stenotrachelus Stenurella Stenus Stictoleptura Stigmella Stilpnonotus Stomoxys Strongylium Strophosoma Stylosomus Subcoccinella Sunius Syntermes Syrista Tachinus Takecallis Tasgius Tegra Temnoscheila Tenthredo Teredus Termitogeton Teslasena Tettigades Tettigonia Thanatophilus Therophilus Thoradonta Thremma Timarcha Timema Tineola Tiniocellus Tomicus Trachys Tragiscus Trechoblemus Trichophoromyia Trichopygomyia Trigonotylus Trinodes Trissolcus Tropiphorus Tuberolachnus Tychus Urodontus Urodus Venturia Vesperus Vespula Viannamyia Winthemia Wohlfahrtia Xanthostigma Xenos Xyleborinus Xyleborus Xylomya Zeuzera)


# $how_many_to_print = 1; ()$case_sensitive 	= 1;
rm *.partial_mt
for i in ${!partials[*]}; do tax=${partials[$i]};echo "number:$i genus:$tax"
perl ~/usr_scripts/fetch_entries_from_genbank_flatfile.pl insecta_mtgenome_genus_partials $tax.partial_mt $tax
done
cat *.partial_mt > all.partial_mts
rm *.partial_mt
cat insecta_mtgenome_genus all.partial_mts > insecta_genus.complete_and_partial_MT_OG

# get profiles 
# name parse several refseqs, quickly curate, then use these to blast all 
("complete" [TITLE] AND "genome" [TITLE] AND ("mitochondrial" [TITLE] OR "mitochondrion" [TITLE])) AND insecta [organism] AND refseq
# save summary, file name insecta_refseq_mtgenome_summary.txt
#$level = 1;# =order
perl ~/usr_scripts/taxon_parse_genbank_summary_results.pl insecta_refseq_mtgenome_summary.txt 6960 1
# ouptut file has list of accessions, paste to ncbi query box, save genbank full as file name:
# 	insecta_refseq_mtgenome_order

rm insecta_refseq_mtgenome_order.prot
perl ~/usr_scripts/parse_translations_from_genbank_flatfile.pl -in insecta_refseq_mtgenome_order -out insecta_refseq_mtgenome_order.prot -out_suffx InsMT -id_format 5 -outfile_by_annotation -preferred_annotation_field 1
rm insecta_genus.complete_and_partial_MT_OG.prot
perl ~/usr_scripts/parse_translations_from_genbank_flatfile.pl -in insecta_genus.complete_and_partial_MT_OG -out insecta_genus.complete_and_partial_MT_OG.prot -out_suffx NULL -id_format 4 -preferred_annotation_field 1

rm insecta_genus.complete_and_partial_MT_OG.prot.p*
makeblastdb-2.2.28+-64bit -in insecta_genus.complete_and_partial_MT_OG.prot -dbtype prot -parse_seqids
rm *InsMT_hits InsMT.all*hits
InsMT_proteins=(InsMT*)
for i in ${!InsMT_proteins[*]} 
  do current_file=${InsMT_proteins[$i]}; echo $i current mito gene $current_file
  blastp-2.2.28+-64bit -task blastp -db insecta_genus.complete_and_partial_MT_OG.prot -query $current_file -out $current_file.InsMT_hits -max_target_seqs 1000 -evalue 1e-20 -outfmt '6 qseqid sseqid evalue pident length sseq'
done

cat *InsMT_hits > InsMT.allhits
rm InMT*
perl ~/usr_scripts/parse_ortholog_results.pl -in InsMT.allhits -out_prefix InMT -filter_duplicates -output_id_format 3


# takes 4 hours:
no_cpus=3;count=0
rm InMT*.clo*
split_query_files=(InMT*)
for i in ${!split_query_files[*]}
  do current_file=${split_query_files[$i]}; echo $i $current_file
  /usr/local/bin/mafft --localpair --maxiterate 100 $current_file > $current_file.clo &
  let count+=1
  [[ $((count%no_cpus)) -eq 0 ]] && wait
done

rm InMT*.clo.SGT
alignment_files=(InMT*.clo)
for i in ${!alignment_files[*]}
  do filename=${alignment_files[$i]};echo current file $i is $filename;
  fasttree_2.1.7 -slow -gamma $filename > $filename.SGT
done

rm *.clo_pruned.fa
for i in ${!alignment_files[*]}
  do current_file=${alignment_files[$i]}; echo current file $i $current_file;
  java -cp ~/software/phylotreepruner/src_and_wrapper_scripts/ PhyloTreePruner $current_file.SGT 5 $current_file 0.5 u
done

pruned_alignments=(InMT*.clo_pruned.fa)
rm current_supermatrix2 InMT.smatrix partitionfile2 InMT.partitionfile charsetfile2 InMT.charsetfile
perl ~/usr_scripts/concatenate_v2.pl -genus_level -missing_data_char ? -remove_accession 2 -matrices ${pruned_alignments[*]}
mv current_supermatrix2 InMT.smatrix; mv partitionfile2 InMT.partitionfile; mv charsetfile2 InMT.charsetfile



perl ~/usr_scripts/taxonomic_report.pl -seqfile InMT.smatrix -output tax_report.InMT.smatrix -node 6960 -fasta




# see what sort of overlap with transcriptimes
mt=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.smatrix
nuc=/home/douglas/scripted_analyses/insect_TOL_analysis/transcriptomes/insctNUCL.smatrix.RMmulti.epu
perl ~/scripted_analyses/insect_TOL_analysis/scripts/taxon_overlap.pl $nuc $mt
# count all genera in both files:1201, overlapping genera:84
# need to concatnate at higher ranks to compact matrix more

# concat mt and nucl
rm current_supermatrix2 partitionfile2 charsetfile2
perl ~/usr_scripts/concatenate_v2.pl -genus_level -missing_data_char ? -required_data ?? -remove_accession 2 -matrices $mt $nuc
mv current_supermatrix2 insOME; mv partitionfile2 insOME.partit
perl ~/usr_scripts/format_conversion.pl insOME insOME.phy fasta phylip


MT NUCL
?Y	138
Y?	980
YY	84

JTT, gene1 = 1­500
WAGF, gene2 = 501­800
WAG, gene3 = 801­1000

MTART, MT = 1-4424
BLOSUM62, NUCL_RMmulti = 4425-141717

-q ome.part






# SKIP! old combined mt and nucl analysis:


scp /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/insOME.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/insOME.phy
scp /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/ome.part wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/ome.part

ssh -l wei 10.0.0.181 # wei789
cd /home/wei/DC/insect_TOL_analysis/
qsub sub52
qstat -Q
qstat -f 212671.admin

raxmlHPC-8.2.4 -f a -x 123 -p 123 -# 100 -s insOME.phy -n insOME -m PROTCATBLOSUM62 -c 24 -q ome.part

# temp:
scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_bootstrap.insOME2.PID.* .
cat RAxML_bootstrap.insOME2.PID.* > insOME2.bootstrap
sudo sumtrees.py --min-clade-freq=0.0 --log-frequency=10 --to-newick --replace --support-as-labels --burnin=0 --output=insOME2.bootstrap.sumtrees insOME2.bootstrap
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl insOME2.bootstrap.sumtrees
# hack line 881 and 930 to work on tree with just genus names
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile insOME2.bootstrap.sumtrees.procd -output insOME2.bootstrap.sumtrees.tax -node 6960 -newick
java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*








cd /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/





# restart here

# SEP2016:
# early indications are that concatented NUCL+MT matrix makes tree with problems,...
# try tri-partite as v1
# asns, here will need tro tag on 18s , ef1a, maybe more.






backbone_tree=/home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/insctNUCL.RMmulti.sumtrees.procd.reroot
mt_sequence_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.smatrix


# nedds rm:Corydalinae_sp

# rm ftcons relational_constraints_tabdelim
# $process_backbone_tree_terminal_IDs = 0;
# cant see the ratioanle for stopping bcackbone traverse where floaters are met.
# backbone nodes with small nuber floating taxa and lots of constrainables, can be turned into constraint
# by temporary ommision of floating taxxa
# err on the side of removing floaters to allow another constraint.
# build up constraint newick string from within sub traverse_backbone_tree_and_collapse
# $process_backbone_tree_terminal_IDs = 2; 
# rm newick_constraint_tree2
# perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $mt_sequence_matrix -treefile $backbone_tree -outfile_prefix constraint201801
perl ~/usr_scripts/relational_constraints.pl -node 6960 -seqfile $mt_sequence_matrix -treefile $backbone_tree -outfile_prefix constraint201801

 


# ********************************

# 2019-04; for redrawing trees, need this one.
~/scripted_analyses/insect_TOL_analysis/mtgenomes/constraint201801.less_basic_constraint_tree.internal_tax_labeled

# and the nuclear tree with support values
~/scripted_analyses/insect_TOL_analysis/backbone_tree/NUCLsumtree_combined_labels.process_newick5.tax

# and the mt tree with support values
RAxML_bootstrap.NUCL-MTconstr2.sumtrees.tax


java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree.v1.4.4/FigTreev1.4.4/lib/figtree.jar $*



# ********************************



# only works with binomials:
# perl ~/usr_scripts/parse_taxa_overlapping_newick_and_fasta.pl constraint201801.less_basic_constraint_tree $mt_sequence_matrix

perl ~/usr_scripts/prune_tree.pl -treefile constraint201801.less_basic_constraint_tree -seqfile $mt_sequence_matrix -output constraint201801.less_basic_constraint_tree.pruned



java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*

/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.2/lib/figtree.jar $*


# skip:
# $remove_branch_labels_instead = 1;
# rm newick_constraint_tree2.branchlengths_rm
# perl /home/douglas/usr_scripts/newick/remove_branchlengths_from_newick.pl newick_constraint_tree2
# reroot in fig tree, export
# when running raxml it will report tax in constraint tree not in seq file, 
# theres not many (6-ish), manually remove them
# may not actually do the analysis this way in the end . 
# could infer on nuclear boot topological cosntaints as per v1.



rm $mt_sequence_matrix.phy
perl ~/usr_scripts/format_conversion.pl $mt_sequence_matrix $mt_sequence_matrix.phy fasta phylip


# rm R*NUCL-MTconsB
# seems not to slow, can do on laptop,
#   but remember to change seeds if restarting
# raxmlHPC-8.2.4 
# itol2 v 1:
# mpirun -n 2 raxmlHPC-7.2.8-ALPHA-MPI -f a -x 789 -p 789 -# 100 -s $mt_sequence_matrix.phy -n NUCL-MTconsC -m PROTCATMTART -c 24 -g newick_constraint_tree2.branchlengths_rm.rr


 #  *** ITOL2 v 2 **** new constraint method:
 # would be convenient if this was rooted at this stage
rm R*NUCL-MTconstr
mpirun -n 2 raxmlHPC-7.2.8-ALPHA-MPI -f a -x 789 -p 789 -# 100 -s $mt_sequence_matrix.phy -n NUCL-MTconstr -m PROTCATMTART -c 24 -g constraint201801.less_basic_constraint_tree.pruned

# treesearch time about 4 days, perhaps about the same time for several hundred bootstraps





# memory demand is wihtin laptop, cluster not essential:

# cat RAxML_bootstrap.NUCL-MTcons*.PID.* > NUCL-MTcons.bootstrap

# old input : NUCL-MTcons.bootstrap, now :RAxML_bootstrap.NUCL-MTconstr2

sudo sumtrees.py --min-clade-freq=0.0 --log-frequency=10 --to-newick --replace --support-as-labels --burnin=0 --output=RAxML_bootstrap.NUCL-MTconstr2.sumtrees RAxML_bootstrap.NUCL-MTconstr2
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_bootstrap.NUCL-MTconstr2.sumtrees
# $truncate_new_taxonomic_strings = 1;
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd -output RAxML_bootstrap.NUCL-MTconstr2.sumtrees.tax -node 6960 -newick
# 2019; here plot mt level trees
# from hemiptera onwards, becomes impossible to plot with all tips named
# java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_bootstrap.NUCL-MTconstr2.sumtrees.tax
# reroot at isotomidae
# click node to sort decendents
# ? use current image size for df export
# click node to go to subtree
# unselect


# get branchlengths ...  
#    reroot here? if only the three hexapod outgroups, then choose Acerentomon,
#    idealy would have a single outgroup, bit simpler to apply, though i notice raxml now allows multiple ones
rm R*RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
raxmlHPC-8.2.4 -s $mt_sequence_matrix.phy -n RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot -m PROTCATMTART -c 24 -p 123 -g RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd -o Acerentomon

# output (support valueds disappear):
/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot -outprefix RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot -ncbi_tax_node 6960

# 2019-05 plot tree RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot.process_newick3
# to assist in labelling (note bracnh elngths are removed.)

# ignore, need eps format, figtree doesnt do....
# draw tree:
# labels are messy:
cd /home/douglas/software/treedyn/treedynpack/
./treedyn
load treedyn XSBN script in scripts folder, after, circular , hide labels, print screen


# JAN2017, new script for more informative tree drawing
# 
# my $remove_node_support_from_input_tree = 1;
# @ranksarray 	= (" family", " subfamily", " tribe");#, " family"
# theres a 'hack to work on tree with just genus names:', although didnt work last time i tried


perl ~/usr_scripts/process_newick.pl -intree NUCL-MTcons.bootstrap.sumtrees.procd -outprefix NUCL-MTcons.bootstrap.sumtrees.procd -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_232
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file NUCL-MTcons.bootstrap.sumtrees.procd.process_newick3






cd /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/





####################################################################################################33





# 2019-05, compare itol1 vs itol 2 for mitogenomes

# did not get this working .... unresolved issue with itol 1 mt tree, would proably need another raxml optimization on the summary tree.






cd ~/scripted_analyses/insect_TOL_analysis/submission_2019_APR/





# itol2 options:
itol2_mt_tree=~/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd
# bracnh lengths but no support vals:
# /home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
# fasta alignment
mt_sequence_matrix=~/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.smatrix



# itol1:
# some issues with the main tree ... not being read by raxml.
itol1_mt_tree=~/scripted_analyses/COIevol/corrections/mtgenomes/InsMito_sumtrees.procd
# so, try this alterniative:
itol1_mt_tree=~/scripted_analyses/COIevol/corrections/mtgenomes/RAxML_bestTree.InMT.smatrix.ord

# some issues with using as is. try rooting first ...
grep "Acerentomon" $itol1_mt_tree
cp $itol1_mt_tree itol1_mt_tree
perl ~/usr_scripts/newick/root_with_bioperl.pl itol1_mt_tree Acerentomon_microrhinu



# prune itol1 mitogenome tree to taxa in itol2
perl ~/usr_scripts/prune_tree.pl -treefile itol1_mt_tree.rerooted_at.Acerentomon_microrhinu -seqfile $mt_sequence_matrix -output itol1_mt_tree.pruned -process_tree_labels 1
mv list_terminals_pruned_tree list_terminals_pruned_tree.itol1_mtgenome
# then prune itol2 mt tree
sed 's/\(.*\)/>\1/g' list_terminals_pruned_tree.itol1_mtgenome > list_terminals_pruned_tree.itol1_mtgenome.fas
cp $itol2_mt_tree itol2_mt_tree
perl ~/usr_scripts/newick/root_with_bioperl.pl itol2_mt_tree Acerentomon
perl ~/usr_scripts/prune_tree.pl -treefile itol2_mt_tree.rerooted_at.Acerentomon -seqfile list_terminals_pruned_tree.itol1_mtgenome.fas -output itol2_mt_tree.pruned
mv list_terminals_pruned_tree list_terminals_pruned_tree.itol2_mtgenome
# both now 749 terminals.

perl ~/usr_scripts/taxonomic_report.pl -input itol2_mt_tree.pruned -output itol2_mt_tree.pruned.tax_report -node 6960 -newick
# output file is tabulated_taxa, change name
mv tabulated_taxa tabulated_taxa.mtgenome
perl ~/usr_scripts/tax_on_phylo.pl -newick itol2_mt_tree.pruned -taxa tabulated_taxa.mtgenome -output tax_on_phylo.mtgenome.OUT -use_ranks family
# output is phylip format character file: tax_on_phylo.RESULT
mv tax_on_phylo.RESULT tax_on_phylo.RESULT.mtgenome

# unroot trees
library(ape)
tr <- read.tree("itol2_mt_tree.pruned");unrooted_tr <- unroot(tr);write.tree(unrooted_tr, file = "itol2_mt_tree.pruned.unrooted")
tr1 <- read.tree("itol1_mt_tree.pruned");unrooted_tr1 <- unroot(tr1);write.tree(unrooted_tr1, file = "itol1_mt_tree.pruned.unrooted")
quit(save="no")
rm R*Raxml_SH.mt
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f H -s tax_on_phylo.RESULT.mtgenome -m BINGAMMA -n Raxml_SH.mt -t itol2_mt_tree.pruned.unrooted -z itol1_mt_tree.pruned
# had some issues with the itol pruned unrooted tree, raxml kept complaining about expecting )







	END OF MTGENOMES




############################################################################################################
#
#
#
#
#
############################################################################################################




SP LEVEL






cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/






ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz
tar xvzf taxdump.tar.gz






for i in {1..136};do echo "file $i";
  if [ -f gbinv$i.seq.gz ];
    then
      echo already have gbinv$i.seq.gz
    else 
      echo download gbinv$i.seq.gz 
      wget ftp://ftp.ncbi.nih.gov/genbank/gbinv$i.seq.gz
 fi
done

# GBINV111.SEQ        Genetic Sequence Data Bank;  April 15 2016;  NCBI-GenBank Flat File Release 213.0

rm inv
# $limit_taxon = 1;$limit_taxon_name = "Insecta";$upper_entry_length  = 100000;
# must include regular genus level identifieds, but no bolds, which will be retrived indepdendently
# i notice later that theres no drosophila in the species level matrix ....  genome data ommited?
perl ~/usr_scripts/create_fasta_database_from_genbank_flatfiles.pl -out inv -outformat 1

# -parse_species_only
perl ~/usr_scripts/parse_ncbi_tax_database.pl -starting_node 50557 -ignore_subspecies

# -binomials_only
perl ~/usr_scripts/parse_taxon_from_fastafile.pl -fasta_db inv -taxa_key key_Oct2013_Insecta -id_format 3 -memory_efficient

# warning! test to see whether entry is of same species, seems still using tobycodes,
# will not work on binomials
# consider removing indentical seqs (even if from different sp)
perl ~/usr_scripts/preprocess_fasta_database.pl -in inv.parsed -filter_seq_length_outliers -lower_length_limit 200 -upper_length_limit 32000
perl ~/usr_scripts/preprocess_fasta_database.pl -in inv.parsed.ng -reduce_redundency -usearch_command usearch4.2.66_i86linux32

makeblastdb-2.2.28+-64bit -in inv.parsed.ng.rr -dbtype nucl -parse_seqids -max_file_sz 40000000

phylo_markers=(H03InsProf.muscle.fas)
length_cutoffs=(500)

# overnight .... some previous setting used too muc memory
rm H03InsProf.muscle.fas.blastout H03InsProf.muscle.fas.blastout.retreived
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.00 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.00 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.01 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.01 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.02 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.02 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.03 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.03 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.04 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.04 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr.05 -query H03InsProf.muscle.fas -out H03InsProf.muscle.fas.blastout.05 -word_size 10 -perc_identity 65 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 100000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'

cat H03InsProf.muscle.fas.blastout.0* > H03InsProf.muscle.fas.blastout
rm H03InsProf.muscle.fas.blastout.0*

# 
perl ~/usr_scripts/parse_hits.pl inv.parsed.ng.rr H03InsProf.muscle.fas.blastout 60 1 500 2 blastdbcmd-2.2.28+-64bit


# 2018-MAR-09: furst run through this was May 2016, 
# current run though, decided not much point to completly re-run, 
# since did NCBI barcode parse in climate study Sept 2017 
# (barcode parsing for that later study used method developed for this one),
# thus just transferred that barcode DB.
# file is H03InsProf.muscle.fas.blastout.retreived







#############################################################################################################




# here add bold data ....
# strategy, since bold data only has higher-rank (order-level) taxonomies, it is not possible to 
# taxonomically-place them in the constrained species-level search,
# thus may as well do pylogenetic placement to the species-level tree after it is finished,
# first requires that they are dereplicated, infer otu then filter accordingly,
# also remove if the seqs are already present in the ncbi references  (or very similar to)
# as for the reference data, those partially identified to level of genus can be included
# in the secies-level constraint search, although these should be OTU clustered first,
# and removed if within species-level similarlity to a named references,
# thus, OTU clustering of all relevent data is bvest done here .....
# Blasted a couple of the latest bold release online, they were not there.
# canadian barcode file is not parsed, seems different column format. have enough anyway.
# 2016-07: filter bold data by their bins, these are already otu clustered.
# bold data releases has entries not in genbank: BOLD:ABW8161	BIN488161
# although i cant find them on gb nor in the bold public data portol
# from page http://v4.boldsystems.org/index.php/datarelease:
# 	Please cite this web page if records from this data package are used in a publication. 

# cant figure out whether ncbi release or bold release is best source for bold data,
# i notice ncbi entries have tentative species names, 
# maybe do both


# here need a script to parse bold entries from flatfiles,
# need the tentative taxonomies, all seqeunce labels (at least 3, incl bin label)


cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/

perl ~/usr_scripts/parse_BOLD_details_from_genbank_flatfiles.pl -out inv -outformat 1

# 295073244	833551	Lepidoptera_sp._BOLD:AAA9390	GU697937	AAA9390	Disphragis notabilisDHJ02	BOLD:BLPDI181-09.COI-5P

rm query_BOLD_LOG
/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/ncbi_flatfile_bold_details
perl ~/usr_scripts/query_BOLD_portal.pl ncbi_flatfile_bold_details
 # downloads web page for member of each insect otu labelled by order
 # pages moved to /media/E0A43ACFA43AA844/linux_analysis/insect_TOL2/BOLD_web_pages/


cd ~/scripted_analyses/insect_TOL_analysis/data/BOLD/




wget http://www.boldsystems.org/index.php/API_Public/sequence?taxon=Insecta

# save as BOLD_API_insecta
# quite an uncertain step, download is often interupted, but with no indication of this.
# thus i am presuming one has to download twice, retriving files of same size of large size,
# then this has probably downloaded fine.

rm BOLD_API.parsed
# MOVED TO USR SCRIPTS:
perl ~/scripted_analyses/insect_TOL_analysis/scripts/process_BOLD_API_seqIDs.pl BOLD_API_insecta
 # output is BOLD_API.parsed






	# SKIP section . this reteived databases, although turned out they stopped being updated some time ago
	# API is updated

split_query_files=(*.zip)
for i in ${!split_query_files[*]}
  do current_file=${split_query_files[$i]}; echo $i $current_file
  unzip $current_file
done
# data stored at:
# /media/E0A43ACFA43AA844/linux_analysis/insect_TOL2/iBOL_phase_6.25_COI.tsv.zip
split_query_files=(*.tsv)
# all seqs appended to this:
# CHANGE TO REMOVE SPACES AND HYPHENS!
rm BOLD_nucraw parse_BOLD_log
for i in ${!split_query_files[*]}
  do current_file=${split_query_files[$i]}; echo $i $current_file
  perl ~/usr_scripts/parse_BOLD_releases.pl $current_file >> parse_BOLD_log
done

grep ">" BOLD_nucraw | wc -l
# 2497280
rm iBOL_phase_*_COI.tsv iBOL_phase_*.tsv.zip


# itol2 v1 input:BOLD_nucraw v2:BOLD_API.parsed

rm BOLD_API.parsed.genome BOLD_API.parsed.ng
perl ~/usr_scripts/preprocess_fasta_database.pl -in BOLD_API.parsed -filter_seq_length_outliers -lower_length_limit 450 -upper_length_limit 2000
perl ~/usr_scripts/preprocess_fasta_database.pl -in BOLD_API.parsed.ng -reduce_redundency -usearch_command usearch4.2.66_i86linux32 -filter_all_duplicates
# v1:
# entries in input (2478045). discarded (2278340), printed to output (199705) 
# duplicate accessions discarded:(180194)
# identical_seq_same_sp (947013) identical_seq_diff_sp (184)
# v2:
# entries in input (3010689). discarded (1133973), printed to output (1876716) 
# duplicate accessions discarded:(5361)
# identical_seq_same_sp (453014) identical_seq_diff_sp (674879)








#############################################################################################################




	#     ****   SPECIES CLUSTER   ****






cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/









######################################################################################################

# skip section, use simpler and scalable method



# filter NCBI dataset again, using old script, leaves all unidentifieds, and one per ident species

taxfile=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/key_Oct2013_Insecta
# $print_unidentifieds	= 1;
rm H03InsProf.muscle.fas.blastout.retreived.up1ps H03InsProf.muscle.fas.blastout.retreived.slo
perl ~/usr_scripts/split_dataset.pl H03InsProf.muscle.fas.blastout.retreived $taxfile 2


# Edgar, R.C. (2013) UPARSE: Highly accurate OTU sequences from microbial amplicon reads, Nature Methods [Pubmed:23955772,  dx.doi.org/10.1038/nmeth.2604].
# make a single file, contains species-filtered refs, NCBI-unidentifieds, all BOLDs
# http://drive5.com/usearch/manual/opt_uparseout.html



# optimization first
all_species_labelled=H03InsProf.muscle.fas.blastout.retreived.slo
# usearch8.1.1861_i86linux32 -derep_fulllength $all_species_labelled -fastaout $all_species_labelled.derep -sizeout -minseqlength 450

cutoffs=(0.25 0.5 0.75 1 1.25 1.5 1.75 2 2.25 2.5 2.75 3 3.25 3.5 3.75 4 4.25 4.5 4.75 5 0.2 0.4 0.6 0.8 1.2 1.4 1.6 1.8 2.2 2.4 2.6 2.8 3.2 3.4 3.6 3.8 4.2 4.4)

for i in ${!cutoffs[*]}
 do
 current=${cutoffs[$i]};
 usearch8.1.1861_i86linux32 -cluster_otus $all_species_labelled.derep -otus uparse_otu.a.$current -uparseout uparse_otu.b.$current -minsize 1 -otu_radius_pct $current
done

for i in ${!cutoffs[*]}
 do
 current=${cutoffs[$i]};
 perl ~/usr_scripts/process_uparse_otu.pl uparse_otu.b.$current
done

for i in ${!cutoffs[*]}
 do
 current=${cutoffs[$i]};
 perl ~/usr_scripts/calculate_taxonomic_congruence.pl uparse_otu.b.$current.prcd uparse_otu.b.$current.prcd.tri
done

cat uparse_otu.b.*.prcd.tri.tRI_res > all_tRI
rm uparse_otu.b.*.prcd.tri.tRI_res
# best val:
# uparse_otu.b.2.prcd 0.99836671667917 0.77046843973839 0.785437609678332 0.783767430992914 0.627686256626575


# filter NCBI DB by species, retain all unidentifieds for OTU clustering, 
# i have two scripts for doing this, need to compare, what is being produced by both, and why differences.
# this script is an older one, it was run above to get all intraspecies data for clustering optimization:
# $print_unidentifieds	= 1;
rm H03InsProf.muscle.fas.blastout.retreived.up1ps H03InsProf.muscle.fas.blastout.retreived.slo
perl ~/usr_scripts/split_dataset.pl H03InsProf.muscle.fas.blastout.retreived key_Oct2013_Insecta 2


# try and figure out differrences with these lists:
grep ">" H03InsProf.muscle.fas.blastout.retreived.up1ps | sort > old_filter
grep ">" H03InsProf.muscle.fas.blastout.retreived.ID_filtered | sort > new_filter
# ok, same stuff for binomials so at leasrt that works,
# what is happening, new script filters unidentifieds by their species level code,
# old script just retains all of them, so a lot more stuff.


# boldDB=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/BOLD_nucraw.ng.rr
# ncbiDB=H03InsProf.muscle.fas.blastout.retreived.up1ps
# rm otu_input otu_input.derep uparse_otu.1 uparse_otu.2
# cat $boldDB $ncbiDB > otu_input
# usearch8.1.1861_i86linux32 -derep_fulllength otu_input -fastaout otu_input.derep -sizeout -minseqlength 450
# usearch8.1.1861_i86linux32 -cluster_otus otu_input.derep -otus uparse_otu.1 -uparseout uparse_otu.2 -minsize 1 -otu_radius_pct 2

# out of memory, do it in two phases.
# parse output after uparse memory crash
# perl ~/usr_scripts/process_uparse_otu.pl uparse_otu.2
# perl ~/scripted_analyses/insect_TOL_analysis/scripts/parse_otus.pl uparse_otu.2.prcd
# grep ">" test2 | wc -l

# perl /home/douglas/usr_scripts/remove_fasta_entries.pl otu_input rm_list
# usearch8.1.1861_i86linux32 -derep_fulllength otu_input.m_rm -fastaout otu_input.m_rm.derep -sizeout -minseqlength 450
# usearch8.1.1861_i86linux32 -cluster_otus otu_input.m_rm.derep -otus uparse_otu.11 -uparseout uparse_otu.12 -minsize 1 -otu_radius_pct 2
# perl ~/usr_scripts/process_uparse_otu.pl uparse_otu.12

# still out of memory, despite removal of duplicates, problem must be number of otu.
# thus, try clustering only unidentified first, then usearch them to the references,
perl ~/usr_scripts/split_dataset.pl H03InsProf.muscle.fas.blastout.retreived key_Oct2013_Insecta 2
rm otu_input otu_input.derep uparse_otu.21 uparse_otu.22
cat BOLD_nucraw.ng.rr H03InsProf.muscle.fas.blastout.retreived.unids > otu_input
usearch8.1.1861_i86linux32 -derep_fulllength otu_input -fastaout otu_input.derep -sizeout -minseqlength 450
usearch8.1.1861_i86linux32 -cluster_otus otu_input.derep -otus uparse_otu.21 -uparseout uparse_otu.22 -minsize 1 -otu_radius_pct 2
perl ~/usr_scripts/process_uparse_otu.pl uparse_otu.22
grep ">" uparse_otu.21 | wc -l # 214207

# then usearch OTU against species labeled references, species-level matches will be filtered.
perl ~/usr_scripts/species_filter.pl -in H03InsProf.muscle.fas.blastout.retreived -format 1 -filter_method 2 -identified_species_only

# usearch8.1.1861_i86linux32 -usearch_global H03InsProf.muscle.fas.blastout.retreived.ID_filtered -db uparse_otu.21 -strand plus -id 0.98 -otutabout otu_table.txt
# perl ~/usr_scripts/parse_usearch_otu_table.pl otu_table.txt
# puzzled why all unidentifeds hit a reference?!

# just do a regular search and parse
# identified as DB and OTU representatives as queries finds slightly more matches, so use first here:
usearch8.1.1861_i86linux32 -usearch_global uparse_otu.21 -db H03InsProf.muscle.fas.blastout.retreived.ID_filtered -strand plus -id 0.98 -userout cluster.1.uclust_outA -userfields query+target+evalue+id+tlo+thi+ts -maxaccepts 1 -maxrejects 100000
# usearch8.1.1861_i86linux32 -usearch_global H03InsProf.muscle.fas.blastout.retreived.ID_filtered -db uparse_otu.21 -strand plus -id 0.98 -userout cluster.1.uclust_outB -userfields query+target+evalue+id+tlo+thi+ts -maxaccepts 1 -maxrejects 100000

# i notice theres a difference in number of hits, depending on otu as query against identifieds as database,
# or otu as database versus identifieds as query. its minor, just 1%, but i use the most conservative 
# (more otu matched to identifieds thus more removed)

# make a list of OTU reps that hit named species so will be removed
rm otu_named_matches
perl ~/scripted_analyses/insect_TOL_analysis/scripts/compare_things.pl cluster.1.uclust_outA cluster.1.uclust_outB
# every OTU that hits a named reference, is removed.
# $remove_or_retain = 1
rm uparse_otu.21.m_rm
perl ~/usr_scripts/remove_fasta_entries.pl uparse_otu.21 otu_named_matches
grep ">" uparse_otu.21 | wc -l 		# 214207
grep ">" uparse_otu.21.m_rm | wc -l 	# 196029


# dont need taxon blast, SKIP:
# perl ~/scripted_analyses/insect_TOL_analysis/scripts/hack_taxkey_lines_for_BOLD_data.pl $bold_db
# cat $taxfile BOLD_taxkey > taxkey_for_TB
# perl ~/usr_scripts/taxon_blast.pl 97.1 taxkey_for_TB tb_in2 blastn-2.2.28+-64bit makeblastdb-2.2.28+-64bit


######################################################################################################


# mar 2018 restart

# decided to use a universal species cutoff .... 

# problme with this approach is otus with identical species names are created, still need to name filter.

# worth running through raxml, plenty of these:
 Anthomyia_silvestris and Diptera_DIQTB15410_JN298730 are exactly identical
IMPORTANT WARNING: Sequences Anthomyiidae_CNTMA165414_KT092043 and Anthomyiidae_CNTMB322914_KT091838 are exactly identical
IMPORTANT WARNING: Sequences Antirrhea_avernus and Antirrhea_lindigii are exactly identical
IMPORTANT WARNING: Sequences Aphidius_cingulatus and Euaphidius_cingulatus are exactly identical








ncbi=H03InsProf.muscle.fas.blastout.retreived
bold=/home/douglas/scripted_analyses/insect_TOL_analysis/data/BOLD/BOLD_API.parsed



# rm H03InsProf.muscle.fas.blastout.retreived.ID_filtered
# perl ~/usr_scripts/species_filter.pl -in $ncbi -format 1 -filter_method 2

cat $ncbi $bold > otu_input


# remove identical entries. this was done indiviually for bold and ncbi,
# however data is often shared between the two, thus need to do it for combined.
rm otu_input.sorted otu_input.sorted.nr otu_input.uclust_log preprocess_LOG otu_input.rr
perl ~/usr_scripts/preprocess_fasta_database.pl -in otu_input -reduce_redundency -usearch_command usearch4.2.66_i86linux32 -filter_all_duplicates
grep ">" otu_input.rr | wc -l # 2398877
# rm otu_input.derep
# another dereplication algorithm, which does not remove any aditional stuff (2661334)
# but still need to run command to append seq lengths
rm otu_input.rr.derep
usearch8.1.1861_i86linux32 -derep_fulllength otu_input.rr -fastaout otu_input.rr.derep -sizeout -minseqlength 450
rm otu_input.derepB
usearch8.1.1861_i86linux32 -sortbysize otu_input.rr.derep -fastaout otu_input.derepB -minsize 1
rm cluster_smallmem.out cluster_smallmem.centroids cluster_smallmem.uc
usearch8.1.1861_i86linux32 -cluster_smallmem otu_input.derepB -id 0.978 -centroids cluster_smallmem.centroids -strand both -sortedby size -uc cluster_smallmem.uc
grep ">" cluster_smallmem.centroids | wc -l 	# 400301
# remove the appended cluster size from fasta ids:
rm cluster_smallmem.centroids.fas
sed 's/\;size\=[0-9]*\;//' cluster_smallmem.centroids > cluster_smallmem.centroids.fas
rm cluster_smallmem.uc.prcd
perl ~/usr_scripts/process_uparse_otu.pl cluster_smallmem.uc 2


rm OTU.fas
perl ~/usr_scripts/filter_otus.pl otu_input cluster_smallmem.uc.prcd OTU.fas 


# clean up:
rm otu_input otu_input.derep otu_input.sorted otu_input.sorted.nr otu_input.uclust_log preprocess_LOG otu_input.rr otu_input.rr.derep otu_input.derepB cluster_smallmem.out cluster_smallmem.centroids cluster_smallmem.uc



otus_labeled_with_species:137543
otus_labeled_with_genus:118304
otus_labeled_with_family:54472
otus_labeled_with_order:89010
otus_label_not_tax_parsed:972
otu_count:400301



     Seqs  2398877 (2398877 ()
  Clusters  400301 (400301 (400301 (400)
  Max size  1711
  Avg size  6.0
  Min size  1
Singletons  171001 (171001 (171001 (171001 (1710), 7.1% of seqs, 42.7% of clusters
   Max mem  1.5Gb
      Time  05:52:42
Throughput  113.4 seqs/sec.










cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/





#############################################################################################################


Cryptopygus_antarcticus_215461, >Occasjapyx_japonicus_990600, Acerentomon_microrhinus_728012


# add outgroups which are in this file:
outgroups=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/COI_outgroups
# open this file check only binomialds in:
# current_unaligned_marker=H03InsProf.muscle.fas.blastout.retreived.ID_filtered
# unlabelled_otu_representatives=uparse_otu.21.m_rm
rm all_unaln
# cat $outgroups $current_unaligned_marker $unlabelled_otu_representatives > all_unaln
cat $outgroups OTU.fas > all_unaln
grep ">" all_unaln | wc -l # 248,545; 



#####################################
# skip

# this one crahees:
pynast --min_pct_id=60 --min_len=500 --pairwise_alignment_method muscle -i $current_unaligned_marker -t H03InsProf.muscle.fas

rm insectCOI.pynast
pynast --pairwise_alignment_method muscle -i all_unaln -t /home/douglas/scripted_analyses/COIevol/analysis/coi --min_pct_id=60 --min_len=500 --fasta_out_fp=insectCOI.pynast
perl ~/usr_scripts/format_conversion.pl insectCOI.pynast insectCOI.pynast2 fasta fasta

# here see if better taxonomies can be added to any unidentifieds
# activate drive by navigating to with file manager
/media/E0A43ACFA43AA844/linux_analysis/insect_TOL2/BOLD_web_pages/

# $parse_results = 1;
# prints columns to outfile:$page\t$order\t$family\t$subfamily\t$genus
rm BOLD_tax_parsed
perl ~/usr_scripts/query_BOLD_portal.pl ncbi_flatfile_bold_details
#####################################





reference_alignment=H03InsProf.muscle.no_gaps.fas
rm BlastOUT alignerOUT
blastn-2.2.28+-64bit -task blastn -query all_unaln -subject $reference_alignment -out BlastOUT -word_size 10 -perc_identity 60 -max_target_seqs 1 -evalue 1e-8 -dust no -strand plus -outfmt '6 qseqid sseqid evalue pident length'
perl ~/usr_scripts/aligner.pl BlastOUT $reference_alignment all_unaln alignerOUT

# quite a lot disapear at this stage, unalignable.







#############################################################################################################





	#  RETRIEVAL OF other genes:



# ids not well processed:
# i|339507031|gb|JF961308.1| Arthropoda environmental sample clone 9-29 cytochrome b (cyt b) gene, partial cds; mitochondrial





cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/





cp /home/douglas/scripted_analyses/COIevol/analysis/28s_InsectsProfile.mafft 28s_queries

cytb_queries=/home/douglas/scripted_analyses/COIevol/analysis/primate_diet_cytb.mafft
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr -query $cytb_queries -out cytb.blastout -word_size 10 -perc_identity 40 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 200000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr -query 28s_queries -out 28S.blastout -word_size 10 -perc_identity 40 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 200000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'

rm cytb.blastout.retreived 28S.blastout.retreived
perl ~/usr_scripts/parse_hits.pl inv.parsed.ng.rr cytb.blastout 60 1 300 2 blastdbcmd-2.2.28+-64bit
perl ~/usr_scripts/parse_hits.pl inv.parsed.ng.rr 28S.blastout 60 1 250 2 blastdbcmd-2.2.28+-64bit
# remove the cytbs from the mammal diet study... they are only labeled arthropod environ sample, so shouldnt be in


ls /home/douglas/scripted_analyses/COIevol/corrections/species_dense/sample_db_OUT.AAAblastout.mcl_clusters*


phylo_markers=(sample_db_OUT.AAAblastout.mcl_clusters.12S.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.16S.mafft.colrm.processed sample_db_OUT.AAAblastout.mcl_clusters.18S.prank.1.fas.trimmed.colrm.fas sample_db_OUT.AAAblastout.mcl_clusters.EF1a.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.RP2.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.wnt.mafft.processed)
length_cutoffs=(250 360 800 450 700 350)

for i in ${!phylo_markers[*]}
do
 current_file=${phylo_markers[$i]};current_cutoff=${length_cutoffs[$i]};echo file $i is $current_file cutoff $current_cutoff
 ## only need do this first time:
 # cp /home/douglas/scripted_analyses/COIevol/corrections/species_dense/$current_file .
 rm $current_file.blastout $current_file.blastout.retreived
 blastn-2.2.28+-64bit -task blastn -db inv.parsed.ng.rr -query $current_file -out $current_file.blastout -word_size 10 -perc_identity 40 -dust no -strand both -evalue 1e-6 -num_threads 1 -max_target_seqs 200000 -outfmt '6 qseqid sseqid evalue pident length sstart send qframe sframe'
 perl ~/usr_scripts/parse_hits.pl inv.parsed.ng.rr $current_file.blastout 60 1 $current_cutoff 2 blastdbcmd-2.2.28+-64bit
done

phylo_markers=(cytb 28S sample_db_OUT.AAAblastout.mcl_clusters.12S.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.16S.mafft.colrm.processed sample_db_OUT.AAAblastout.mcl_clusters.18S.prank.1.fas.trimmed.colrm.fas sample_db_OUT.AAAblastout.mcl_clusters.EF1a.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.RP2.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.wnt.mafft.processed)
for i in ${!phylo_markers[*]};do 
   current_file=${phylo_markers[$i]}; echo file $i is $current_file;
   perl ~/usr_scripts/species_filter.pl -in $current_file.blastout.retreived -format 1 -identified_species_only -filter_method 2
done

	# CYTB
clustalo-1.2.0 --profile1=/home/douglas/scripted_analyses/COIevol/analysis/primate_diet_cytb.mafft --in=cytb.blastout.retreived.ID_filtered -outfile=insectCYTB.clo --guidetree-out=insectCYTB.CLO_guidetree --seqtype=DNA --outfmt=fa --threads=4 --log=clustallogfile
	# 28S
perl ~/usr_scripts/consensus_sequence_fasta.pl /home/douglas/scripted_analyses/COIevol/analysis/28s_InsectsProfile.mafft 28s_InsectsProfile.mafft.consensus
perl ~/usr_scripts/change_tobycode.pl 28S.blastout.retreived.ID_filtered
cat 28S.blastout.retreived.ID_filtered.recoded 28s_InsectsProfile.mafft.consensus > blastalign_in
perl ~/software/blastalign/BlastAlign2 -i blastalign_in -r consensus
perl ~/usr_scripts/format_conversion.pl blastalign_in.phy 28S.blastout.retreived.ID_filtered.recoded.fas phylip fasta
perl ~/usr_scripts/insert_tobycode_to_fastafile.pl 28S.blastout.retreived.ID_filtered.recoded.fas 28S.blastout.retreived.ID_filtered.recode_key 28S.blastout.retreived.ID_filtered.blastalign
	# 18S
# rm sample_db_OUT.AAAblastout.mcl_clusters.18S.prank.1.fas.trimmed.colrm.fas.blastout.retreived.ID_filtered.mafft
/usr/local/bin/mafft --retree 2 --legacygappenalty sample_db_OUT.AAAblastout.mcl_clusters.18S.prank.1.fas.trimmed.colrm.fas.blastout.retreived.ID_filtered > 18S.blastout.retreived.ID_filtered.mafft
# $column_removal_cutoff(0.99)
perl ~/usr_scripts/alignment_processing/rm_alignment_columns.pl 18S.blastout.retreived.ID_filtered.mafft
	# others:
new_markers=(sample_db_OUT.AAAblastout.mcl_clusters.12S.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.16S.mafft.colrm.processed sample_db_OUT.AAAblastout.mcl_clusters.EF1a.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.RP2.mafft.processed sample_db_OUT.AAAblastout.mcl_clusters.wnt.mafft.processed)
for i in ${!new_markers[*]};do current_file=${new_markers[$i]}; echo file $i is $current_file;
 # ls $current_file.blastout.retreived.ID_filtered
 clustalo-1.2.0 --profile1=$current_file --in=$current_file.blastout.retreived.ID_filtered -outfile=$current_file.blastout.retreived.ID_filtered.clo --guidetree-out=$current_file.CLO_guidetree --seqtype=DNA --outfmt=fa --threads=4 --log=clustallogfile
done



# mar 2018, a lot LOT more bold data now
mv insCOI insCOI_OLD
mv alignerOUT insCOI
perl ~/usr_scripts/alignment_processing/rm_alignment_columns.pl insCOI

# alignments:
#mv insectCOI.pynast2 insCOI
mv insectCYTB.clo insCYTB
mv 28S.blastout.retreived.ID_filtered.blastalign ins28S
mv 18S.blastout.retreived.ID_filtered.mafft.colrm ins18S
mv sample_db_OUT.AAAblastout.mcl_clusters.12S.mafft.processed.blastout.retreived.ID_filtered.clo ins12S
mv sample_db_OUT.AAAblastout.mcl_clusters.16S.mafft.colrm.processed.blastout.retreived.ID_filtered.clo ins16S
mv sample_db_OUT.AAAblastout.mcl_clusters.EF1a.mafft.processed.blastout.retreived.ID_filtered.clo insEF1a
mv sample_db_OUT.AAAblastout.mcl_clusters.RP2.mafft.processed.blastout.retreived.ID_filtered.clo insRP2
mv sample_db_OUT.AAAblastout.mcl_clusters.wnt.mafft.processed.blastout.retreived.ID_filtered.clo insWNT

# just for checking alignments, makes taxonomic sorting easier:
rm *.taxlabs
rm *.colrm2

alignments=(insCOI insCYTB ins28S ins18S ins12S ins16S insEF1a insRP2 insWNT)
# current_file=insCOI
for i in ${!alignments[*]};do 
   current_file=${alignments[$i]}; echo file $i is $current_file;
   # @ranksarray = (" order", " family")$filter_level  = 0;
 #  perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile $current_file -output $current_file.taxlabs -node 6960 -fasta
   # $column_removal_cutoff, (0.9999 rms virtually nothing; 
	# 0.999; COI has 1537 columns, of which 229 removed. 1308 remaining )
	# prob COI is a good guide, should be about 700bp remaining.
	# best setting:0.995
	# edit dec2018, alignemnt is too big. 0.99 not much differnt from 0.995. try 0.98
   perl ~/usr_scripts/alignment_processing/rm_alignment_columns.pl $current_file $current_file.colrm2
done

# insCOI;	1537 columns, of which 	803 removed. 	734 remaining
# insCYTB;	545 columns, of which 	54 removed. 	491 remaining
# ins28S;	737 columns, of which 	307 removed. 	430 remaining
# ins18S; 	3539 columns, of which 	0 removed. 	3539 remaining
# ins12S;	642 columns, of which 	107 removed. 	535 remaining
# ins16S;	979 columns, of which 	186 removed. 	793 remaining
# insEF1a;	1494 columns, of which 	197 removed. 	1297 remaining
# insRP2;	913 columns, of which 	59 removed. 	854 remaining
# insWNT;	650 columns, of which 	73 removed. 	577 remaining

# manually order them correctly, COI first and descending sampling:
ls ins*.colrm

rm current_supermatrix2 insect9geneA; mv partitionfile2 insect9geneA.partitionfile; mv charsetfile2 insect9gene.charsetfile
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -required_data Y???????? -matrices insCOI ins28S.colrm insCYTB.colrm ins16S.colrm ins12S.colrm ins18S.colrm insEF1a.colrm insWNT.colrm insRP2.colrm


mv current_supermatrix2 insect9geneA; mv partitionfile2 insect9geneA.partitionfile; mv charsetfile2 insect9gene.charsetfile;
# lets take a look: 
grep ">" insect9geneA > supermatrix_ID_lines
# need to put fully identifieds and genus identifieds into one file, rest into seperate file,
rm genus_labelled.fas not_genus_labelled.fas
perl ~/usr_scripts/extract_genus_labelled_from_fasta.pl insect9geneA
grep ">" genus_labelled.fas | wc -l # 72035


# xmas 2018, sp matrix is sliiiightly over the 28gb with fasttree on my laptop... reduce a little more

# 99 percent gapped:
perl ~/usr_scripts/concatenate_v2.pl -missing_data_char ? -remove_accession 2 -required_data Y???????? -matrices insCOI ins28S.colrm2 insCYTB.colrm2 ins16S.colrm2 ins12S.colrm2 ins18S.colrm2 insEF1a.colrm2 insWNT.colrm2 insRP2.colrm2
mv current_supermatrix2 insect9geneB


# seems used 0.995 on the individual genes, try 0.98
# then do on the whole alignment, 0.998 still using too much memory, try 0.996
perl ~/usr_scripts/alignment_processing/rm_alignment_columns.pl insect9geneB insect9geneB.reduced




# try sp-level with mtgenome sequences concatenated: 
mt_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/InMT.smatrix
mt_db=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/insecta_genus.complete_and_partial_MT_OG.prot
rm DNA_PROT_SM*
perl ~/usr_scripts/concatenate_genus_to_species_level_matrix.pl genus_labelled.fas $mt_matrix $mt_db
# printed to fas out:72035; len SPlevel DNA partition:9242; len gen lev mtprot partition:4425
perl ~/usr_scripts/format_conversion.pl DNA_PROT_SM DNA_PROT_SM.phy fasta phylip

check if the alignment can be properly read:
raxmlHPC-7.2.8-ALPHA -s DNA_PROT_SM.phy -n TEST_raxout -m GTRCAT -c 4 -f c -q combined_partition_file

partition file:
DNA, gene1 = 1-­9242
MTREV, gene2 = 9243­-13665








cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/






	#    *****  now HAVE a SUPERMATRIX  *****







##########################################################################################################################



##########################################################################################################################








# species-level tree-search options
# 	raxml-light , dna and prot, requires comprehensive start tree; no constrained searches
# 	parsimonator: DNA only. designed only for making start trees, TNT preferred.
#		unclear whether is does contraint searches, although will add taxa to incompelte input tree
# 	examl: dna and prot; -g option for multifurcating constraint tree, needs all taxa, will not add.
# 	raxml-NG cant see this program adds to inomplete tree

# STRATEGY: csontrained search will be conducted on all fully-labeled data and genus-labelled.
# BOLD order-labeled data will be added by evolutionary placement later, just using a COI alignment,
# which can be re-input as a constraint tree to resolve polytomies, then BL-optimizatoipn.








cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/







mt_backbone_newick=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA


# OCT 2018....
# not sustainable to wait several months for individual steps. must split the problem.
# at least, seperate trees for big 4 seems logical data partitioning
# print subtrees for big 4,
# print tree ommiting these subtrees.



# look carefuly for root nodes of the big 4, get the node numbers of these.
perl ~/usr_scripts/process_newick.pl -intree $mt_backbone_newick -outprefix mt.201810 -ncbi_tax_node 6960
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file mt.201810.process_newick3
# coleoptera=IN997; diptera=1107; heteroneura=1362; hymenoptera=1467

perl ~/usr_scripts/process_newick.pl -intree $mt_backbone_newick -outprefix mt.201810 -ncbi_tax_node 6960 -subtrees 2000


mv mt.201810.subtree.INTERNAL_NODE_997.tree mt_subtree.Coleoptera
mv mt.201810.subtree.INTERNAL_NODE_1107.tree mt_subtree.Diptera
mv mt.201810.subtree.INTERNAL_NODE_1362.tree mt_subtree.Heteroneura
mv mt.201810.subtree.INTERNAL_NODE_1467.tree mt_subtree.Hymenoptera
rm mt.201810.subtree.INTERNAL_NODE_*.tree.bayestraits_commands_file
rm mt.201810.subtree.INTERNAL_NODE_*.tree



#################################

# need tree  of everything except big 4.
# try this function first .....

# did not get this working in short time .... will be another awkward job ....
# why ambiguous Lep BOLDs in contraint tree, these really should not be there for many reasons.

# paste these lines in the script, somewhere near top
$collapse_nodes{"INTERNAL_NODE_997"} = "Beetles";
$collapse_nodes{"INTERNAL_NODE_1107"} = "Flies";
$collapse_nodes{"INTERNAL_NODE_1362"} = "Moths";
$collapse_nodes{"INTERNAL_NODE_1467"} = "Wasps";

mt_backbone_newick=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
perl ~/usr_scripts/process_newick.pl -intree $mt_backbone_newick -outprefix mt.201812 -ncbi_tax_node 6960
mv mt.201812.process_newick0 non_big4

# has extra rank for contraints:
current_backbone=non_big4
perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $sp_matrix -treefile $current_backbone -outfile_prefix $current_backbone.constraint1 -backbone_terminal_format 0 -constrain_ranks order suborder infraorder superfamily family subfamily genus



#################################



sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA

# run below for each of big 4
# fasttree_EPA unsuitable for this step, would constrain very sparsly
# unconstrain_broadly_labelled_data = 1; # omit species which dont have family designation.
# inputs: mt_subtree.Diptera ...... non_big4
current_backbone=non_big4
perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $sp_matrix -treefile $current_backbone -outfile_prefix $current_backbone.constraint1 -backbone_terminal_format 0 -constrain_ranks suborder infraorder superfamily family subfamily genus
perl ~/usr_scripts/remove_fasta_entries.pl $sp_matrix $current_backbone.constraint1.list_constrained_members $current_backbone.constraint1.pruned.fas
perl ~/usr_scripts/prune_tree.pl -treefile $current_backbone.constraint1.less_basic_constraint_tree -seqfile $current_backbone.constraint1.pruned.fas -output $current_backbone.less_basic_constraint_tree.pruned
# here remove invarient sites

# may have to hack the newick string a bit, run raxml and see what complaint it makes ...
perl ~/usr_scripts/format_conversion.pl $current_backbone.constraint1.pruned.fas $current_backbone.constraint1.pruned.phy fasta phylip
rm RA*$current_backbone.constraint1.pruned
raxmlHPC-8.2.4 -s $current_backbone.constraint1.pruned.phy -n $current_backbone.constraint1.pruned -m GTRCAT -c 4 -p 1001 -g $current_backbone.less_basic_constraint_tree.pruned
# OR The Next Generation:
raxml-ng-0.6.0 --seed 123 --threads 6 --redo --msa $current_backbone.constraint1.pruned.fas --model DNA --tree-constraint $current_backbone.less_basic_constraint_tree.pruned --prefix $current_backbone
# if crashes complaining about tree, try unpruned version:
raxml-ng-0.6.0 --seed 123 --threads 6 --redo --msa $current_backbone.constraint1.pruned.fas --model DNA --tree-constraint $current_backbone.constraint1.less_basic_constraint_tree --prefix $current_backbone


# if restarting raxml run:
raxml-ng-0.6.0 --threads 4 --msa $current_backbone.constraint1.pruned.fas --model DNA --tree-constraint $current_backbone.less_basic_constraint_tree.pruned --prefix $current_backbone




# big 4 require complete constraints (fasttree), as found much earlier, see below.
# although anythinf labelled only to order level , would best be placed with raxml.
# thus 3-step process.

# supermatrix, omitting order labelled stuff.

# run first with $process_outfile = 0; 
# then run again with $process_outfile = 1, (reduce memory demand by ommiting tip-level constraints )

# here need to remove order labelled barcodes?



# constraint method applied in fasttree_EPA.pl is strictly done only the terminals of the backbone tree.
# i.e. there is no inference of taxa for nodes for applying constraints.
# thus, fasttree_EPA is suited for species level backbone, 

# use fasttree_EPA to fix the step1 (newick-raxml) topology, 
# then some monophyly constraints which can also include
# things not constrained by step1 (newick-raxml)

# relational constraints
# perhaps modify to only print constrained members? seems other stuff included (which was orignal function)
# intree=mt_subtree.Coleoptera.raxml.startTree
intree=mt_subtree.Coleoptera.raxml.bestTree
sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA
rm fasttree_format_constraint Coleoptera.relational_constraints
perl ~/usr_scripts/fasttree_EPA.pl -node 6960 -seqfile $sp_matrix -treefile $intree
mv fasttree_format_constraint Coleoptera.relational_constraints
# output is fasttree_format_constraint, looks like:
#  341338 6665
# Aaaba_fossicollis
# Aaroniella



# this prints taxon constraints
rm taxon_constraints_only Coleoptera.taxon_constraints
perl ~/usr_scripts/read_deep_level_constraints.pl -node 6960 -seqfile $sp_matrix -treefile $intree -ignore_IDs_with_no_tax_assignment -print_taxon_constraints_only
mv taxon_constraints_only Coleoptera.taxon_constraints
# output will omit only order labeled data, although will include all insects.
# output is taxon_constraints_only, looks like: 
# Aaaba_fossicollis        0000000000001000000000000000000000000000000000000000000000000000000000000011000000000000000000000
# Aaroniella_badonneli        000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


# concatenate constraints, filter anything not of order under study, and entries labeled only to order level.
sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA
rm constraints_concat Coleoptera.constraints_concat
perl ~/usr_scripts/integrate_constraints.pl -constraint_files Coleoptera.taxon_constraints Coleoptera.relational_constraints -fasta $sp_matrix -limit_taxon order:Coleoptera -node 6960
mv constraints_concat Coleoptera.constraints_concat
mv constraints_concat.ID_list Coleoptera.constraints_concat.ID_list
# outputs constraints_concat constraints_concat.ID_list
# coleoptera:15518 (7167);


perl ~/usr_scripts/remove_fasta_entries.pl $sp_matrix Coleoptera.constraints_concat.ID_list Coleoptera.ft_tax_and_rel_constraints.fas



# had to increase buffer size in fasttree (again) to accomodate the unusually huge constraint files
# if crashes here saying no sequence in phylip line, need to increase and recompile.
# lepidoptera will be a challenge, might need to omit tip level constraints in script above
FastTree_buffer80000 -log fasttree_logfile -gtr -gamma -nt -constraints Coleoptera.constraints_concat < Coleoptera.ft_tax_and_rel_constraints.fas > Coleoptera.ft_tax_and_rel_constraints.ftOUT

# last step, placing order level barcodes. and, root here.

COI_only_processed_IDs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/first_gene_processed_IDs
rm Coleoptera.COI_only
perl ~/scripted_analyses/insect_TOL_analysis/scripts/retreive_barcodes_for_order.pl -fasta $COI_only_processed_IDs -limit_taxon order:Coleoptera -node 6960
# coleoptera:33016

# add an outgroup seqeunce, then raxml-NG, then done.
raxml-ng-0.6.0 --seed 123 --threads 2 --redo --msa Coleoptera.COI_only --model DNA --tree-constraint Coleoptera.ft_tax_and_rel_constraints.ftOUT --prefix Coleoptera.step3








cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/









#############################################################################################################



#############################################################################################################








# mar 2018, previous run was too complex, try simpler and hope it works
# edit: it didnt. and probably not a sustainable approach.
# thinking ahead, these will need to be split into parts.




# backbone script might need to do better at not printing sections of the tree
# $process_backbone_tree_terminal_IDs = 2; 
# rm newick_constraint_tree2

java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*
/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.2/lib/figtree.jar $*

# had to hack off a few things at the end of the newick string (.pruned2)

# character constraints at this stage also?

perl ~/usr_scripts/remove_fasta_entries.pl $sp_matrix sp_constraint_201803.list_constrained_members sp_matrix.pruned

# 69170 9132
perl ~/usr_scripts/format_conversion.pl sp_matrix.pruned sp_matrix.pruned.phy fasta phylip
rm RA*NUCL-MT-SP_constrained_subset
raxmlHPC-8.2.4 -s sp_matrix.pruned.phy -n NUCL-MT-SP_constrained_subset.1001 -m GTRCAT -c 4 -p 1001 -g constraint201801.less_basic_constraint_tree.pruned2
# partitoned run will have: -q insect9geneA.partitionfile
# run as many of these as computer memory will allow,
#   not many, requires >20gb just for initial tree search phase

# run bootstrap 
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f a -x 12345 -p 12345 -# 500 -s sp_matrix.pruned.phy -n NUCL-MT-SP_constrained_subset.1001.boot -m GTRCAT -c 4 -g constraint201801.less_basic_constraint_tree.pruned2


# also need to plot this fully constrained sp level tree, check thjers no issues
# -plot_tree -print_internal_labels_circular_tree -print_terminal_tax_labels 1200


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_internal_labels_circular_tree -print_terminal_tax_labels 1000

# find where to reroot:
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file sp_constrained.process_newick1

# corrections 2019-apr:
#	compare to ITOL v1. to make a fair comparison, infer the tree again, using the original alignment and constraint tree,
#	but exactly the same constraint method.
#	need to redo anyway, to get approriate bootstrap values for comparison.


cd /home/douglas/scripted_analyses/insect_TOL_analysis/submission_2019_APR/

itol1_backbone=InsMito_sumtrees.procd
itol1_sp_matrix=insect8geneB

# tring to figure out which constraint method i actually used in the end (too many things tried)
# scripts used:
# backbone_constraints_newick.pl was developed and renamed relational_constraints
# fasttree_EPA.pl read_deep_level_constraints.p integrate_constraints.pl

# first replicate the constraint data for ITOL2:
# edit ... cannot replicate! proably due to changes in the constraint methods.
mt_backbone_newick=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA
# dont contrain order , or might include all the order assigned only members.
# perl ~/usr_scripts/relational_constraints.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick -outfile_prefix replicate_ITOL2_constraints -backbone_terminal_format 0 -constrain_ranks suborder infraorder superfamily family subfamily genus
# perl ~/usr_scripts/remove_fasta_entries.pl $sp_matrix replicate_ITOL2_constraints.list_constrained_members sp_matrix.pruned201904
# perl /home/douglas/usr_scripts/infer_constraints.plOLD -seqfile $sp_matrix -treefile $mt_backbone_newick





# gives 110,000 terminals, different from usual.
# unikely to be this one, unsuited to this type of data.
# perl ~/usr_scripts/fasttree_EPA.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick

perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick -outfile_prefix BCNtest -backbone_terminal_format 0 -constrain_ranks suborder infraorder superfamily family subfamily genus
# 59,000/109000 if constaining orders. real one has 69170

perl ~/usr_scripts/backbone_constraints_newick_OLDVERSION.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick -outfile_prefix BCNold


/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f a -x 12345 -p 12345 -# 500 -s sp_matrix.pruned.phy -n NUCL-MT-SP_constrained_subset.1001.boot -m GTRCAT -c 4 -g constraint201801.less_basic_constraint_tree.pruned2







#################################################################################################








cd /home/douglas/scripted_analyses/insect_TOL_analysis/submission_2019_APR/




	# 	compare itol1 vs itol 2





# for comparing to itol1, there are a few versions, variously not/rooted ultrametric, branchlngthed etc.
# here is one
itol1_sptree=/home/douglas/scripted_analyses/COIevol_201606/corrections/species_dense/RAxML_bestTree.insect8geneC
itol1_spal=/home/douglas/scripted_analyses/COIevol_201606/corrections/species_dense/insect8geneB.phy
head $itol1_spal # 49338 6500

itol2_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.pruned.phy
itol2_tree=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/RAxML_result.NUCL-MT-SP_constrained_subset.1001.bld


  # can skip this, not really equivelent things being compared.
  # conpute SH like node support
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f J -s $itol1_spal -t $itol1_sptree -m GTRCAT -c 4 -p 123 -n itol1_SHsuport
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f J -s $itol2_matrix -t $itol2_tree -m GTRCAT -c 4 -p 123 -n itol2_SHsuport

# skip. two trees with node support to compare: 
#	RAxML_fastTreeSH_Support.itol2_SHsuport RAxML_fastTreeSH_Support.itol1_SHsuport
# this prints av node suport, as well as processing forma
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_fastTreeSH_Support.itol1_SHsuport 5
# node scores read:49335; 	average SH:77.410560454
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_fastTreeSH_Support.itol2_SHsuport 5
# node scores read:69167; 	average SH:78.9388581259849


	# how much taxon increase in itol version 2

perl ~/usr_scripts/taxonomic_report.pl -input $itol1_sptree -output itol1_tax_report -node 6960 -newick
perl ~/usr_scripts/taxonomic_report.pl -input $itol2_tree -output itol2_tax_report -node 6960 -newick
# counts of taxa at each rank are found in log file
# rank:genus count tax:		13828; 7026
# rank:subfamily count tax:	1185; 674
# rank:family count tax: 	771; 503
# rank:superfamily count tax:	188; 148
# this is the only aspect i have found in which the updated tree is worse off than the previous version;
#	a reduction in higher level taxonomic coverage in the species level tree 
#	ironic as the backbone tree has much greater taxonomic coverage,
# 	but its just a consequence of method of selecting species level data for inclusion in the tree,
#	which is more stringent, but giving otherwise much higher quality phylogeny.




	# Prune to overlapping terminals,
	# one way would be to get node list of one then prune other, the get node list of other then prune first.
	# see if raxml or some other software will prune
	# also use raxml function to see if trees are different.

itol1_tree=/home/douglas/scripted_analyses/COIevol_201606/corrections/species_dense/RAxML_bestTree.insect8geneC.rerooted_at.Acerentomon_microrhinus
itol2_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.pruned
perl ~/usr_scripts/newick/root_with_bioperl.pl RAxML_fastTreeSH_Support.itol1_SHsuport.procd Acerentomon_microrhinus
perl ~/usr_scripts/prune_tree.pl -treefile RAxML_fastTreeSH_Support.itol1_SHsuport.procd.rerooted_at.Acerentomon_microrhinus -seqfile $itol2_matrix -output itol1_tree.pruned
mv list_terminals_pruned_tree list_terminals_pruned_tree.itol1
# get a list of the overlapping taxa
perl ~/usr_scripts/process_newick.pl -intree itol1_tree.pruned -outprefix itol1_tree.pruned -ncbi_tax_node 6960
cut -f 1 list_of_terminals_in_your_tree > itol1_tree.pruned.tax_list
# then prune the other tree:
itol2_tree=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/RAxML_result.NUCL-MT-SP_constrained_subset.1001.bld
cp $itol2_tree itol2tree
perl ~/usr_scripts/newick/root_with_bioperl.pl itol2tree Acerentomon_microrhinus
itol1_tree.pruned.tax_list
sed 's/\(.*\)/>\1/g' itol1_tree.pruned.tax_list > itol1_tree.pruned.tax_list.fas
perl ~/usr_scripts/prune_tree.pl -treefile itol2tree.rerooted_at.Acerentomon_microrhinus -seqfile itol1_tree.pruned.tax_list.fas -output itol2_tree.pruned
# this should be same as other, both 18716 anyway, so probably are.
mv list_terminals_pruned_tree list_terminals_pruned_tree.itol2




# or compare pruned trees
# node support lost, need to recalucte
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_fastTreeSH_Support.itol1_SHsuport 5

itol2_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.pruned
itol1_matrix=/home/douglas/scripted_analyses/COIevol_201606/corrections/species_dense/insect8geneB

# get alignment correspondin to pruned trees
# $regex = 1; $remove_or_retain	= 2;
perl ~/usr_scripts/remove_fasta_entries.pl $itol1_matrix list_terminals_pruned_tree.itol1 itol1.pruned_matrix
perl ~/usr_scripts/remove_fasta_entries.pl $itol2_matrix list_terminals_pruned_tree.itol2 itol2.pruned_matrix
perl ~/usr_scripts/format_conversion.pl itol1.pruned_matrix itol1.pruned_matrix.phy fasta phylip
perl ~/usr_scripts/format_conversion.pl itol2.pruned_matrix itol2.pruned_matrix.phy fasta phylip

# compare node SH of pruned trees
rm R*itol*pruned_SH
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f J -s itol1.pruned_matrix.phy -t itol1_tree.pruned.unrooted -m GTRCAT -c 4 -p 123 -n itol1pruned_SH
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f J -s itol2.pruned_matrix.phy -t itol2_tree.pruned.unrooted -m GTRCAT -c 4 -p 123 -n itol2pruned_SH
# get table of node supports, then input into r for calculation of St dev and difference between trees.
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_fastTreeSH_Support.itol1pruned_SH 5
perl ~/usr_scripts/newick/process_raxmlEPA_outtree.pl RAxML_fastTreeSH_Support.itol2pruned_SH 5
# RAxML_fastTreeSH_Support.itol1pruned_SH.node_supports_tabulated

# do this in R
itol1_node_supports <- read.table("RAxML_fastTreeSH_Support.itol1pruned_SH.node_supports_tabulated", header=F, row.names = 1)
itol2_node_supports <- read.table("RAxML_fastTreeSH_Support.itol2pruned_SH.node_supports_tabulated", header=F, row.names = 1)

median(itol1_node_supports[  , 1])
median(itol2_node_supports[  , 1])
# both median 88
wilcox.test(itol1_node_supports[  , 1], itol2_node_supports[  , 1],
                 alternative = "two.sided", paired = FALSE, conf.level = 0.95)
# Wilcoxon rank sum test with continuity correction
# data:  itol1_node_supports[, 1] and itol2_node_supports[, 1]
# W = 172210000, p-value = 0.005832

# with itol 1 and 2 pruned to an exactly overlapping set of species, then SH node support was techically increased on the new version
# (p = 0.006, Wilcoxon rank sum test with continuity correction), although the magnitude of increase was negligable, 
# practiaclly with both tree having a median node support of 88.
# however using an independent indicator of tree quality, taxonomic congruence, the older phylogeny was a substantially worse fit 
# taxonomic lnl of -4504.010390, a reducetion of fit of -855.624249 of the newer tree, SD: 109.645188, p < 0.01 in the SH test.





# i think can spice up the manuscript a bit by introducing a new measure of taxonomic congruence of phylogeny.
# need a script to read species on the tree and the NCBI taxonomy database, then write a file of the taxa to be calculated.
# then a script to recode as perhaps unordered multistate characters which can be input into raxml for calculation of likelihood
# with site weights


perl ~/usr_scripts/taxonomic_report.pl -input itol2_tree.pruned -output itol2_tree.pruned.tax_report -node 6960 -newick



perl ~/usr_scripts/taxonomic_likelihood.pl -newick itol2_tree.pruned -taxa tabulated_taxa -output tax_on_phylo.OUT -use_ranks family genus


# requires unrooted tree, try to do this in r
library(ape)
# tr <- read.tree("itol2_tree.pruned");unrooted_tr <- unroot(tr);write.tree(unrooted_tr, file = "itol2_tree.pruned.unrooted")
tr1 <- read.tree("itol1_tree.pruned");unrooted_tr1 <- unroot(tr1);write.tree(unrooted_tr1, file = "itol1_tree.pruned.unrooted")


# should probably frst see if they are different: RF
# "-f r": compute pairwise Robinson-Foulds (RF) distances between all pairs of trees in a tree file passed via "-z" 
cat itol1_tree.pruned.unrooted itol2_tree.pruned.unrooted > itol12
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f r -s tax_on_phylo.RESULT -m BINGAMMA -n testRaxml.RF -z itol12
# this crashes, dont know why. claims they are rooted, but i just unrooted.



# SH: raxmlHPC ­f H ­t ref ­z trees ­s alg ­m GTRGAMMA ­n TEST
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f H -s tax_on_phylo.RESULT -m BINGAMMA -n testRaxml.SH -t itol2_tree.pruned.unrooted -z itol1_tree.pruned.unrooted
# Model optimization, best Tree: -3648.386141
# Tree: 0 Likelihood: -4504.010390 D(LH): -855.624249 SD: 109.645188 Significantly Worse: Yes (5%), Yes (2%), Yes (1%)




######################################################################



# skip, just calcualting lnl.
rm R*testRaxml
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f e -s tax_on_phylo.RESULT -m BINGAMMA -n testRaxml -t itol2_tree.pruned.unrooted
# -3648
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f e -s tax_on_phylo.RESULT -m BINGAMMA -n testRaxml1 -t itol1_tree.pruned.unrooted
# -4511.744668

# skip also
# ELW test, does bootstrap , so quite slow.
# -f W": compute ELW test on a bunch of trees passed via "-z" 
cat itol1_tree.pruned.unrooted itol2_tree.pruned.unrooted > itol12
rm R*testRaxml12
~/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -f W -b 123 -N 100 -s tax_on_phylo.RESULT -m BINGAMMA -n testRaxml12 -z itol12










cd /home/douglas/scripted_analyses/insect_TOL_analysis/submission_2019_APR/








#################################################################################################################################






cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/



# commands used in latest iteration of cliamte study for getting barcode re
# raxmlHPC-8.2.4 -D -e 1.0 -s MCL_NCAmerica.phy -n MCL_NCAmerica.constrained -m GTRCAT -c 4 -p 123 -g MCL_NCAmerica.ft_tax_and_rel_constraints.ftOUT


# run this, constrained subset topology.
/home/douglas/software/raxml/RAxML-8.2.4/standard-RAxML-master/raxmlHPC-8.2.4 -s sp_matrix.pruned.phy -n NUCL-MT-SP_constrained_subset.1001.bld -g RAxML_result.NUCL-MT-SP_constrained_subset.1001 -m GTRCAT -p 12345

                                                                  raxmlHPC-v7 -s sp_matrix.pruned.phy -n NUCL-MT-SP_constrained_subset.1001.bld -g RAxML_result.NUCL-MT-SP_constrained_subset.1001 -m GTRCAT -p 12345



# model and branch length optimization raxml v 8
# /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/RAxML_result.NUCL-MT-SP_constrained_subset.1001.bld


# tree=RAxML_result.NUCL-MT-SP_constrained_subset.1001
alignment=sp_matrix.pruned
distributions=/home/douglas/scripted_analyses/insect_temp_shifts/data/gbif_parsed




perl ~/scripted_analyses/insect_TOL_analysis/scripts/integrate_distributions.pl $distributions $alignment



# in phylomeaures,
# 	CBL is beta PD
# 	CD is beta MPD.
# 	aCDNT, dCDNT, mCDNT are beta MNTD. 
# aCDNT_query <- cdnt.averaged.query(tree_MCL, comm_MCL, matrix.b = NULL, query.matrix = NULL)
# cbl_query <- cbl.query(tree_MCL, comm_MCL, matrix.b = NULL, query.matrix = NULL, standardize = T)#beta PD
# cd_query <- cd.query(tree_MCL, comm_MCL, matrix.b = NULL, query.matrix = NULL, standardize = T)# beta MPD




library(ape)
library(PhyloMeasures)
library(picante);
library("plotrix")
library(maps)


tree <- read.tree("RAxML_result.NUCL-MT-SP_constrained_subset.1001.bld")
comm <- read.table("as_comm", row.names=1, header=T);
# dats one big comm table

# comm <- comm[ , -1]

# still incredibly quick, and modest memory requiremnt
standardized_PD <- pd.query(tree, comm, standardize = F, null.model="uniform", reps=100)

# error message first run:
#  One of the species names in input the matrix was not found in the tree (Aaroniella_ASAMT09712_MG378675) 
# also noticed no branch length, gonna be hard to calculate PD!
# .... made tree with branch lengths ...





current.PD <- standardized_PD # standardized_PD.sample standardized_PD mntd.sample MPD.sample
current.comm <- comm # comm_table comm

current.PD[current.PD>100] <- 100

coordinate_labels <- rownames(current.comm)
point_abund <- rowSums(current.comm)


length(coordinate_labels)
length(current.PD)
length(point_abund)


# jpeg("world_map_insect_logsample.jpg"  , width = 2200 , height = 2000, res=200)
jpeg("world_map_insect_uncorrectedPD.jpg"  , width = 2200 , height = 2000, res=200)
#   map(xlim=c(-180 , 180), ylim=c(-90, 90), col="white",  fill=T,  boundary = F, interior = F, border = NA) # col="gray90"
map(xlim=c(-180 , 180), ylim=c(-90, 90), col="lightgray",  fill=T,  boundary = F, interior = F, border = NA)

point_cex <- 1.0; cluster_line_width <- 1.6


minval <- min(current.PD);maxval <- max(current.PD)
# minval <- min(log(point_abund));maxval <- max(log(point_abund)) # just for plotting sample size
print(c(minval,maxval))

# hist(current.PD)
colorfunc = colorRamp(c(  "turquoise","magenta")) #  ,"gray", 
# colorfunc = colorRamp(c(  "turquoise","magenta","magenta","magenta","magenta","magenta","magenta","magenta","magenta",
#		"magenta","magenta","magenta","magenta","magenta","magenta","magenta","magenta",
#		"magenta","magenta","magenta","magenta","magenta","magenta","magenta","magenta"
#		)) # for plotting sample size


for (i in 1:length(coordinate_labels))
	{
	current_label <- coordinate_labels[i];	current_PD <- current.PD[i];	current_abund <- point_abund[i]; 
	x<-current_PD
	# x<-log(current_abund) # just for plotting sample
	coords <- as.numeric(unlist(strsplit(current_label, "_")))
	long <- coords[2];lat <- coords[1]; # print(c(current_label, current_PD));print(coords)
	print_point <- 1

	if(is.na(current_PD) == T)
		{}else{
	if(current_PD == 0 ){print_point <- 0};
	if(current_abund <= 99){print_point <- 0};
	if(print_point == 1)
		{
		scaled_val <- ( x - minval ) / ( maxval - minval )
		colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
		points( long, lat, pch=15, cex=0.37, col=colors2); # print (c(lat, long)) # 19
		}
		}
	}
x<- 8;scaled_val <- ( x - minval ) / ( maxval - minval )
	colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
	 points( -140, 0 , pch=15, cex=3, col=colors2);
	text(-120, 0, labels = "8", cex=1.2, srt=-0) 
x<- 16;scaled_val <- ( x - minval ) / ( maxval - minval )
	colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
	 points( -140, -7.5 , pch=15, cex=3, col=colors2);
	text(-120, -7.5, labels = "16", cex=1.2, srt=-0) 
x<- 32;scaled_val <- ( x - minval ) / ( maxval - minval )
	colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
	 points( -140, -15 , pch=15, cex=3, col=colors2);
	text(-120, -15, labels = "32", cex=1.2, srt=-0) 
x<- 64;scaled_val <- ( x - minval ) / ( maxval - minval )
	colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
	 points( -140, -22.5 , pch=15, cex=3, col=colors2);
	text(-120, -22.5, labels = "64", cex=1.2, srt=-0) 
x<- 100;scaled_val <- ( x - minval ) / ( maxval - minval )
	colors2<- rgb(colorfunc(scaled_val) , maxColorValue=255)
	 points( -140, -30 , pch=15, cex=3, col=colors2);
	text(-120, -30, labels = "100+", cex=1.2, srt=-0) 

dev.off()

###########################################################


#######################################################################################################################


# memory issues with this step

# 4000 cells of abundence less than 10



sample_size <- 101
number_of_rarefactions <- 20
point_abund <- as.numeric(rowSums(comm))

high_abund <- (1:length(point_abund))[point_abund > 100]


comm_table <- comm[ high_abund , ]
dim(comm)
dim(comm_table)

comm_table [ comm_table > 1] <- 1
comm.sample <- rrarefy(comm_table, sample = sample_size)
standardized_PD.sample <- pd.query(tree, comm.sample, standardize = F, null.model="uniform", reps=100)
MPD.sample <- mpd.query(tree, comm.sample, standardize = F, null.model="uniform", reps=100)


# psc.sample <- psc(comm.sample,tree,scale.vcv=F) # both require 36 gb.
# pse.sample <- pse(comm.sample,tree,scale.vcv=F)

er.sample <- estimateR(comm.sample) # , pool = c("Tropical" , "Arid" , "Temperate" , "Cold" , "Polar")

# standardizing not working
mntd.sample <- mntd.query(tree, comm.sample, standardize = F,null.model="uniform", abundance.weights, reps=100)
# returns list 

count_per_species <- as.numeric(colSums(comm.sample))
undersampled_species <- (1:length(count_per_species))[count_per_species == 0]
if(length(undersampled_species) >= 1)
	{comm.sample <- comm.sample[ , -undersampled_species ]}



#################################################################################################################################


# other additional thing want to do for next submission is calcualting PD indices per taxa.
# first need a table, line per tree terminal, 2 other columns giving family and order.
# hold on ..... instead need table, order x terminal ...


perl ~/usr_scripts/taxonomic_report.pl -seqfile sp_matrix.pruned -output tax_report.sp_matrix.pruned -node 6960 -fasta





library(PhyloMeasures)
library(picante);



tree <- read.tree("RAxML_result.NUCL-MT-SP_constrained_subset.1001.bld")
comm <- read.table("commlike_table", row.names=1, header=T);
comm <- read.table("commlike_table.fam", row.names=1, header=T);

orders.MPD <- mpd.query(tree, comm, standardize = F, null.model="uniform", reps=100)
orders.MPD.pval <- mpd.pvalues(tree, comm, null.model="sequential",reps=100) # ,abundance.weights=colSums(comm)+1
orders.sp_counts <- as.numeric(rowSums(comm))


cbind(rownames(comm),orders.sp_counts,orders.MPD)

orders.PD  <- pd.query(tree, comm, standardize = F, null.model="uniform", reps=100)
orders.MNTD <- mntd.query(tree, comm, standardize = F,null.model="uniform", abundance.weights, reps=100)


# psc.sample <- psc(comm.sample,tree,scale.vcv=F) # both require 36 gb.
# pse.sample <- pse(comm.sample,tree,scale.vcv=F)
er.sample <- estimateR(comm.sample) # , pool = c("Tropical" , "Arid" , "Temperate" , "Cold" , "Polar")
# standardizing not working


[1,] "Archaeognatha"    "14"             "0.35984397963449" 
 [2,] "Blattodea"        "537"            "0.454914911965349"
 [3,] "Coleoptera"       "6755"           "0.684359090229757"
 [4,] "Dermaptera"       "7"              "0.352104172559734"
 [5,] "Diptera"          "7470"           "0.652807307526727"
 [6,] "Embioptera"       "11"             "0.299568135093678"
 [7,] "Entomobryomorpha" "176"            "0.467376097166266"
 [8,] "Ephemeroptera"    "341"            "0.583291592911058"
 [9,] "Grylloblattodea"  "2"              "0.111379619169482"
[10,] "Hemiptera"        "2377"           "0.761950265457455"
[11,] "Hymenoptera"      "8437"           "0.707700044986627"
[12,] "Lepidoptera"      "11601"          "0.44128017796196" 
[13,] "Mantodea"         "102"            "0.248855936984239"
[14,] "Mantophasmatodea" "1"              "0"                
[15,] "Mecoptera"        "84"             "0.216611538609867"
[16,] "Megaloptera"      "43"             "0.326287966052106"
[17,] "Neuroptera"       "123"            "0.447298745677139"
[18,] "Odonata"          "400"            "0.358326147978148"
[19,] "Orthoptera"       "423"            "0.517037939552074"
[20,] "Phasmatodea"      "19"             "0.35258603300108" 
[21,] "Phthiraptera"     "11"             "0.680001099283491"
[22,] "Plecoptera"       "244"            "0.456553451604134"
[23,] "Protura"          "22"             "1.16644828811608" 
[24,] "Psocoptera"       "60"             "0.603772722294569"
[25,] "Raphidioptera"    "8"              "0.197584586426704"
[26,] "Siphonaptera"     "46"             "0.247028098374132"
[27,] "Strepsiptera"     "71"             "0.460991514025526"
[28,] "Thysanoptera"     "176"            "0.513266283617483"
[29,] "Trichoptera"      "1301"           "0.529224532741634"
[30,] "Zoraptera"        "1"              "0"                
[31,] "Zygentoma"        "11"             "0.648893064565292"





#################################################################################################################################




# JAN 2019: v complex to place partially labelled stuff at this scale.
#		will just publish tree of labelled data for now.

# run this to plot for different parts
# make several r commands file. each have all internal node labels. 
# which will be run both with and without.








###############################

# ALL

$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 1.7;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(-1.1,1.1)"; $ylim_circ	= "c(-1.1,1.1)"; 
$reference_tip_label_x = 1.06; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 1.0;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 4;
 	$num_labs_to_print_rainbow = 25000;
$plot_root_node_branchlength = 0.7; # the very first branch, would be far left of a rectangualr 

perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 1300



###############################



# WP


$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 10;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(-0.93,-0.82)"; $ylim_circ	= "c(0.40,0.51)"; 
$reference_tip_label_x = 1.019; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 5.5;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 25000;
$plot_root_node_branchlength = 0.97; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 4000


###############################


###############################

# PO. plecoptera + orthoptera
# settings same as paelopterous except
# xlim = c(-0.88,-0.79), ylim = c(0.48,0.57)

###############################

# dictypotera same except
# xlim = c(-0.85,-0.75), ylim = c(0.55,0.65)

###########################

# Para
$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 10;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(-0.82,-0.42)"; $ylim_circ	= "c(0.50,0.90)"; 
$reference_tip_label_x = 1.06; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 6;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 25000;
$plot_root_node_branchlength = 0.86; # the very first branch, would be far left of a rectangualr 

perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 800

###########################3

# Hymenoptera


$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 3;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(-0.55,1.30)"; $ylim_circ	= "c(0.45,2.30)"; 
$reference_tip_label_x = 1.25; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 6;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0060; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 10;
 	$num_labs_to_print_rainbow = 2200;
$plot_root_node_branchlength = 0.80; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 220


###########################3

# NEur

$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 10;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.855,0.945)"; $ylim_circ	= "c(0.38,0.47)"; 
$reference_tip_label_x = 1.014; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 4.0;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.001; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 30000;
$plot_root_node_branchlength = 0.98; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 5000




###########################3

 CS

$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 5;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.4,1.25)"; $ylim_circ	= "c(-0.35,0.5)"; 
$reference_tip_label_x = 1.15; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 6;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.008; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 10;
 	$num_labs_to_print_rainbow = 6000;
$plot_root_node_branchlength = 0.75; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 440

########################################

 # TL
$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 5;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(-0.3,1.3)"; $ylim_circ	= "c(-1.4,0.2)"; 
$reference_tip_label_x = 1.25; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 6;
$plot_rainbow = 1;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.008; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 10;
 	$num_labs_to_print_rainbow = 6000;
$plot_root_node_branchlength = 0.70; # the very first branch, would be far left of a rectangualr 

perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 300

########################################

 # DIP

almost same as tl
xlim = c(-1.5,0), ylim = c(-1.35,0.15)





########################################

# Apoidea

$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 5;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.7,1.0)"; $ylim_circ	= "c(0.38,0.68)"; 
$reference_tip_label_x = 1.035; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 5;
$plot_rainbow = 0;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 20000;
$plot_root_node_branchlength = 0.9; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 1200




########################################

hyleaus


$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 20;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.85,0.88)"; $ylim_circ	= "c(0.49,0.52)"; 
$reference_tip_label_x = 1.007; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 10;
$plot_rainbow = 0;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 20000;
$plot_root_node_branchlength = 0.985; # the very first branch, would be far left of a rectangualr 

perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 1200


########################################

bombus

$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 20;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.81,0.84)"; $ylim_circ	= "c(0.56,0.59)"; 
$reference_tip_label_x = 1.007; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 10;
$plot_rainbow = 0;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 20000;
$plot_root_node_branchlength = 0.985; # the very first branch, would be far left of a rectangualr 


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree -print_terminal_tax_labels 1200

#######################################################

alpinobumbus

$print_tips_circular_tree = 1;
$ref_tree_internal_label_cexB 	= 0.8;
$width 				= 10;	# BRANCH WIDTH; default = 1
	# if no branch lengths, probably both -1,1 
$xlim_circ	= "c(0.817,0.823)"; $ylim_circ	= "c(0.567,0.573)"; 
$reference_tip_label_x = 1.0004; # majority tax label given to tip, how far out to plot the label
	$tip_tax_label_cex = 4;
$plot_rainbow = 0;
	$rainbow_X1 = 1.0;$rainbow_X2 = 1.0018; # 	$rainbow_X1 = 0.998;$rainbow_X2 = 1.008;
	$rainbow_line_width = 22;
 	$num_labs_to_print_rainbow = 20000;
$plot_root_node_branchlength = 0.997; # the very first branch, would be far left of a rectangualr 
		
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_constrained_subset.1001 -outprefix sp_constrained -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4582 -plot_tree










cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/









##########################################################################################





# UNFINISHED (i manually take out big 4 subtrees, above) 
# ..... skip ...

# JUNE 2018 
#	simplified method not working well enough ..... 
#	half way house of initial laboreous way, and simple which is not good enough, 
# 	would be to sepearatly construct trees just for particuarly data-heavy subsets, 
#	obvious ones being the 'big 4' orders
# 	lets try a new script to strip those out the constraint tree, and arrange the sequences as appropriate.

constrained_subset_tree=RAxML_result.NUCL-MT-SP_constrained_subset.1001
COI_only_processed_IDs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/first_gene_processed_IDs

perl ~/scripted_analyses/insect_TOL_analysis/scripts/split_constraint_trees.pl -intree $constrained_subset_tree -outprefix split_constraint_trees_TEST -ncbi_tax_node 6960


###############################################################################################################3





# might be simple to process then initiate next step,
# 

COI_only_processed_IDs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/first_gene_processed_IDs

# had a new idea (although i think i might have done something similar a long time ago)
# an aditional layer of constrints may be applied during the tree search by inserting mock characters into the matrix.
# might need to try this at the order level, since without this there are a few problematic groups of sequences
# which swtich orders, presumably due to lack of anchor constraints in those regions.

rm constr_partit_raxml character_constr constr_weights_raxml listed_constr
perl ~/usr_scripts/taxon_constrain_via_character_insertion.pl -in $COI_only_processed_IDs -ncbi_tax_node 6960 -constrain_rank order
# RENAME files next time



# if gonna have a partition file, may as well split codons, manually modify:
DNA, barcode1 = 1-624\3
DNA, barcode2 = 2-624\3
DNA, barcode3 = 3-624\3
BIN, constraint_binary = 625-658

# some problem readin it with raxml-NG, this works:
DNA, 18S = 1-200
DNA, 28S = 201-705
BIN, blah = 706-707

# actually seems this in use anyway:

DNA, barcode = 1-624
BIN, constraint_binary = 625-658



rm COI_only_processed_IDs.phy
# without order constraints:
# perl ~/usr_scripts/format_conversion.pl $COI_only_processed_IDs COI_only_processed_IDs.phy fasta phylip
# with:
rm character_constr.phy
perl ~/usr_scripts/format_conversion.pl character_constr character_constr.phy fasta phylip
constrained_subset_tree=RAxML_result.NUCL-MT-SP_constrained_subset.1001
# raxmlHPC-8.2.4 -s COI_only_processed_IDs.phy -n NUCL-MT-SP_all_barcodes.1001 -m GTRCAT -c 4 -p 1001 -g $constrained_subset_tree
raxmlHPC-8.2.4 -s character_constr.phy -n NUCL-MT-SP_all_barcodes.topo_and_char_constraints.1001 -m GTRCAT -c 4 -p 1001 -g $constrained_subset_tree -q constr_partit_raxml -a constr_weights_raxml

# test:
# raxmlHPC-8.2.4 -s character_constr.phy -n NUCL-MT-SP_all_barcodes.topo_and_char_constraints.TEST -m GTRCAT -c 4 -p 1001 -q constr_partit_raxml -a constr_weights_raxml


# in the end, got it running on the bin-character tax constraints, the new software is quite tempermental
# could not use weights, so just one character per tax constraint.



#################3




# try new raxml software ....
constrained_subset_tree=RAxML_result.NUCL-MT-SP_constrained_subset.1001
raxml-ng-0.6.0 --seed 123 --threads 1 --redo --msa character_constr --model constr_partit_raxml --tree-constraint $constrained_subset_tree --prefix RXNG
# gives ambiguous segmentation fault, try on dell tower, if not , wait till newer version
# fault stil manifest without the constraint tree
# fauly not manifest when not using order character constrints nor constrit tree.
# yes, works with constrint tree and without parttinos file and char constraints, problem must be with latter.


raxml-ng-0.6.0 --seed 123 --threads 1 --redo --model constr_partit_raxml --msa character_constr --tree-constraint $constrained_subset_tree --prefix RXNG










# another little test, partit file:
DNA, barcode = 1-6
BIN, constraint_binary = 7-9
# little alignment, with taxon constraints are mock characters as applied in taxon_constrain_via_character_insertion
perl ~/usr_scripts/format_conversion.pl test_char_method test_char_method.phy fasta phylip
rm R*test.topo_and_char_constraints.1001
raxmlHPC-8.2.4 -s test_char_method.phy -n test.topo_and_char_constraints.1001 -m GTRCAT -c 4 -p 1001 -q test_partit -a constr_weights_raxml_test
# 
# (((Lep2,Lep1),(Dip2,Dip1)),Col2,Col1);


# quickly look at tree
# RAxML_result.NUCL-MT-SP_all_barcodes.1001.premature_tree

tree1=RAxML_result.NUCL-MT-SP_all_barcodes.topo_and_char_constraints.1010
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile $tree1 -output $tree1.tax -node 6960 -newick
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file $tree1.tax



 # major error:
 # Diptera_Syrphidae (Syritta) stuck within Staphylinidae
 # no obvious problem in order constraints (file listed_constr).
 # seems Syritta not in subset constraint tree 


 # TEST, get alignment of only above two families

# $trim_accessions_from_input = 0;
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile character_constr -output character_constr.taxlabs -node 6960 -fasta
# just list the names Staphylinidae and Syrphidae in a file. save as twotax
# $regex = 1; $remove_or_retain	= 2;
perl ~/usr_scripts/remove_fasta_entries.pl character_constr.taxlabs twotax character_constr.taxlabs.Staphylin_Syrphid
perl ~/usr_scripts/format_conversion.pl character_constr.taxlabs.Staphylin_Syrphid character_constr.taxlabs.Staphylin_Syrphid.phy fasta phylip
raxmlHPC-8.2.4 -s character_constr.taxlabs.Staphylin_Syrphid.phy -n character_constr.taxlabs.Staphylin_Syrphid -m GTRCAT -c 4 -p 1001 -q constr_partit_raxml -a constr_weights_raxml
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_result.character_constr.taxlabs.Staphylin_Syrphid
# in the taxon constrained tree these seem fine.



####################################################################################









cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/






# SKIP section





# october 2018 .... 
# almost a year waiting for these species level trees,
#  seems tree searching this dataset is not feasible with regular raxml.
# just started raxml-NG, will give it several months 
#  and see if the char constraints are properly incorporated into the topology. edit: still too slow.
# in the meantime, will make a fasttree tree as backup.
# this will require at least 2 different types of constraint. 
# instead of seperatly developing scripts for the job at hand, 
#  will keep individual constraint methods in their own script.
# particularly, strict newick constraint method will be kept in own script 
# (will write new code to output newick constraints as fasttree style).
# will just do order level contraints run on all data,
# then just need to write a new script to combine these into fastree input.




# skip

constrained_subset_tree=RAxML_result.NUCL-MT-SP_constrained_subset.1001
COI_only_processed_IDs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/first_gene_processed_IDs
# v slow 
perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $COI_only_processed_IDs -treefile $constrained_subset_tree -outfile_prefix sp_level_201810 -backbone_terminal_format 0



# run first with $process_outfile = 0; 
# then run again with $process_outfile = 1, (reduce memory demand by ommiting tip-level constraints )
perl ~/usr_scripts/fasttree_EPA.pl -node 6960 -seqfile $COI_only_processed_IDs -treefile $constrained_subset_tree

# whats the command for printing first line of a file? seems not this:
# head fasttree_format_constraint.reduced

# count number of characters:
grep "Abablemma_Poole03_GU699660" fasttree_format_constraint.reduced
wc -l fasttree_format_constraint.reduced

# manually write header
echo " 341338 14743" > fasttree_in
cat fasttree_format_constraint.reduced >> fasttree_in


rm order_char_constraints constr_partit_raxml constr_weights_raxml character_constr_and_DNA character_constr_only listed_constr
perl ~/usr_scripts/taxon_constrain_via_character_insertion.pl -in $COI_only_processed_IDs -ncbi_tax_node 6960 -constrain_rank order
mv character_constr_only order_char_constraints
rm constr_partit_raxml constr_weights_raxml character_constr_and_DNA listed_constr

# many fasta ids, order not found, e.g. Xanthodirphia
grep "Xanthodirphia" names.dmp
# not in there
grep "Xanthodirphia" /home/douglas/scripted_analyses/insect_TOL_analysis/data/BOLD/BOLD_API_insecta
# also.
# here might be able to get order's from bold portal. 

wc -l fasttree_format_constraint
wc -l order_char_constraints

perl ~/scripted_analyses/insect_TOL_analysis/scripts/concatenate_constraints.pl fasttree_in order_char_constraints order_and_bb_constraints.ft_format

# fasttree crashes if some species are missing for all consatrints.
# quick constraint fo rthe ingroup:

cat /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/COI_outgroups

perl ~/scripted_analyses/insect_TOL_analysis/scripts/add_outgroup_constraint.pl order_and_bb_constraints.ft_format



COI_only_processed_IDs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/first_gene_processed_IDs
fasttree_2.1.7 -log fasttree_logfile -gtr -gamma -nt -constraints order_and_bb_constraints.ft_format < $COI_only_processed_IDs > order_and_bb_constraints.ftOUT



# did not quite get this running prior to house move ....






####################################################################################






cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/






# winter 2018 .... fasttree whole species level.



mt_backbone_newick=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.RAxML_bootstrap.NUCL-MTconstr2.sumtrees.procd.reroot
sp_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA
perl ~/usr_scripts/relational_constraints.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick -outfile_prefix $backbone.constraint1 -backbone_terminal_format 0 -constrain_ranks order suborder infraorder superfamily family subfamily genus
# output is relational_constraints.ft_format
perl ~/usr_scripts/taxon_constraints.pl -node 6960 -seqfile $sp_matrix -treefile $mt_backbone_newick -ignore_IDs_with_no_tax_assignment -print_taxon_constraints_only
# output is taxon_constraints_only
perl ~/usr_scripts/integrate_constraints.pl -constraint_files relational_constraints.ft_format taxon_constraints_only -fasta $sp_matrix -node 6960

# also try previous method. code is in both of the above scripts, resurect. 



FastTree_buffer80000 -log fasttree_logfile -gtr -gamma -nt -constraints constraints_concat < $sp_matrix > sp_level.201812.ftOUT





####################################################################################





#  plot sp level tree


# my $remove_branchlengths_from_input_tree = 1; 
# my $remove_node_support_from_input_tree = 1;


# color bracnhes by number of genes used?

# $default_node_color = "black";
# $ref_tree_internal_label_cexB 	= 0.6;
# $width = 0.4
# $plot_root_node_branchlength = 0.80
# $scale_branch_thickness = 1; # since greater density of branches to the tips, decrease thickness so can see them
# $branch_root_to_tip_thickness_scale_factor = 1.2; # the degree to which thickness is decreased.
# $reference_tip_label_x = 1.05;
# $tip_tax_label_cex = 0.8;
# $plot_rainbow = 1;
# $rainbow_X1 = 0.998;$rainbow_X2 = 1.008;

# tree1=RAxML_result.NUCL-MT-SP_all_barcodes.topo_and_char_constraints.1010

# tree1=RAxML_result.NUCL-MT-SP_all_barcodes.topo_and_char_constraints.weight20.1021

tree1=sp_level.201812.ftOUT


perl ~/usr_scripts/process_newick.pl -intree $tree1 -outprefix ft_sp_level -ncbi_tax_node 6960 -plot_tree -print_internal_labels_circular_tree -print_terminal_tax_labels 1000
# open in tree viewer, to find where to reroot (look near collembola)
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file premature_tree.plot1.process_newick1
# then plot rerooted:

# perl ~/usr_scripts/process_newick.pl -intree RAxML_result.NUCL-MT-SP_all_barcodes.1001.premature_tree -outprefix premature_tree.plot2 -ncbi_tax_node 6960 -plot_tree -print_internal_labels_circular_tree -reroot_at INTERNAL_NODE_301317 -print_terminal_tax_labels 1200
perl ~/usr_scripts/process_newick.pl -intree $tree1 -outprefix premature_tree.plot2 -ncbi_tax_node 6960 -plot_tree -print_internal_labels_circular_tree -reroot_at INTERNAL_NODE_304535 -print_terminal_tax_labels 1200



# test again:
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file premature_tree.plot2.process_newick1



##################################################################################



# skip, for  testing
 # very slow, test on smaller tree
cd /home/douglas/scripted_analyses/XSBN/analysis3/
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.queries_otu_filtered.and_refs.prank -outprefix testplot2 -ncbi_tax_node 6960 -plot_tree -print_internal_labels_circular_tree -print_terminal_tax_labels 200
 # or 
cd /home/douglas/scripted_analyses/COIevol/corrections/species_dense/
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.insect8geneC -outprefix testplot2 -ncbi_tax_node 6960 -plot_tree -print_internal_labels_circular_tree -print_terminal_tax_labels 800











cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/









##############################################################################






# this file has extra taxonomies of BOLD entries, but with label which wont exactly match with those in seq file,
# thus need another script to process these
# has columns :BOLD_ID	order	family	subfamily	genus
# /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/BOLD_tax_parsed


grep ">" /home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA

BOLD_tax_file=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/BOLD_tax_parsed
species_level_seqs=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/insect9geneA
# whilst here, remove wierd chars from ids, such as semicolon
# why this wasnt processed earlier:>DipteraBIOUG11320H09 RC1..546
# decide $filter_an_order = 1;
# Archaeognatha Zygentoma Odonata Ephemeroptera Zoraptera (1!) Dermaptera Plecoptera Orthoptera Mantophasmatodea (1)
# Grylloblattodea (1) Embioptera Phasmatodea Mantodea Blattodea Isoptera
# Hemiptera Coleoptera Lepidoptera
# this script takes taXonomic subset, so also make COIonly file for each subset.
# run with $filter_an_order = 0 to get COI file for all;
# ids are modifed here, so this cannot be done earlier anyway

# rm sp_matrix.relab.archaeognatha
perl ~/scripted_analyses/insect_TOL_analysis/scripts/process_BOLD_ids.pl $BOLD_tax_file $species_level_seqs sp_matrix.relab.all
grep ">" sp_matrix.relab
# perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile sp_matrix.relab.TL -output sp_matrix.relab.TL.taxlabs -node 6960 -fasta

# probably not done well, the improved taxonomies are from querying bold portol with entries gleaned from NCBI flatfiles,
# whereas sequence data is from BOLD data release,
# anyway, will see how placement occurs



# first root tree! and remove any troublesome taxa

# backbone_tree=/home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/insectaNUCL.bootstrap.sumtrees.procd

# sp_level_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level/DNA_PROT_SM

# SEP2016:
# whole matrix is sp_matrix.relab, otherwise sp_matrix.relab.archaeognatha

sp_level_matrix=/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.MSD
backbone_tree=/home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/NUCL-MTcons.bootstrap.sumtrees.procd.reroot

# extract subtrees via:
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file $backbone_tree
# click on node to go to sub-tree, save newick as backbone.[order]
# Archaeognatha Zygentoma Odonata Ephemeroptera Plecoptera Orthoptera Phasmatodea Isoptera
# why Blattodea not MP?
# Hemiptera Hymenoptera (prune Ceratobaeus)
Raphidioptera Megaloptera Neuroptera Coleoptera (prune many, need sceipt) Diptera Lepidoptera

# if theres a lot need pruing, such as beetles, use this (need to prepare A file first, check line 683 of bcn.pl):
# MSD has difficulties prinung, so do that manually
Drosophila Satanas Suragina Xylomya
perl ~/usr_scripts/prune_tree.pl -treefile backbone.MSD -seqfile MSD.needs_pruning -output backbone.MSD.pruned


rm ftcons relational_constraints_tabdelim newick_constraint_tree2 NUCL-MT_SP.constr.nwk list_of_constrained_members
# $process_backbone_tree_terminal_IDs = 0;
# cant see the ratioanle for stopping bcackbone traverse where floaters are met.
# backbone nodes with small nuber floating taxa and lots of constrainables, can be turned into constraint
# by temporary ommision of floating taxxa
# err on the side of removing floaters to allow another constraint.
# build up constraint newick string from within sub traverse_backbone_tree_and_collapse
# warning, ZYGENTOMA doesnt have order rank, hack ncbi tax reader to force this.
# whole data $process_new_consraint = 1, subset probably wont work if == 1
# basic constraints then process_new_consraint = 0, ITOL1 constraints then try == 1 if constr tree doesnt work
# 	backbone.MSD.manually_pruned
perl ~/usr_scripts/backbone_constraints_newick.pl -node 6960 -seqfile $sp_level_matrix -treefile backbone.MSD -outfile_prefix MSD
mv archaeognatha.newick_constraint_tree2 NUCL-MT_SP.constr.archaeognatha.nwk
# limitations of algorthim, no constraints assigned within the archaeognatha, see figure.
# can make more basic constraints in such cases, at genus level.

# ERROR: Cannot find tree species: Dytiscoidea-Haliploidea


perl ~/usr_scripts/newick/newick_process.pl TL.newick_constraint_tree2


# next, need list of things need omitting so these strict constraints can be applied,
# process backbone tree, remove strangly placed things, reroot,
put new IDs into the newick string! then you should be good to go.

#warning. terminal taxon (Anthomyiidae) in your INPUT constraint tree might be retained in output
#	in some cases beacuse no seqs of this tax in your fasta file.
#	after removing node labels, grep both fasta file and newick, rm if neccessary

grep "Anthomyiidae" $backbone_tree
grep "Anthomyiidae" newick_constraint_tree2
grep "Anthomyiidae" $sp_level_matrix

# Aulacidae,Basidentitermes,Cecidomyiidi,Dolichorhinotermes,Dytiscoidea,Evaniidae,Fanniidae,Hackeriella
# Haliploidea,Hemiodoecus,Membracidae,Neoneuromus,Nevromus,Pyralidae,Rhinotermes,Scathophagidae


# $remove_branch_labels_instead = 1;
rm NUCL-MT_SP.constr.nwk.branchlengths_rm
input=TL.newick_constraint_tree2 # NUCL-MT_SP.constr.nwk
perl ~/usr_scripts/newick/remove_branchlengths_from_newick.pl $input
# i found this (fixed):
# oetes)Lepidopsocidae_sp_BOLD_ACC1778_821658812,Diptera_sp_JGP0


# MSD tree, great difficulties due to node labels with their own parentheses
# from file MSD.newick_constraint_tree2
# remove one pre-bracket from ((Porphyrochroa_sp_6_BKC_2015_932355120
# and )Eremoneura
# then send through rm barcndhlenbels above

perl /home/douglas/usr_scripts/newick/what_is_wrong_with_this_tree.pl MSD.newick_constraint_tree2
# W_2002_115490196),Dialysis_elongata,
# Megaselia_albalucifrons)Eremoneura),Atoniomyia_sp_USNM_ENT


# perl ~/usr_scripts/prune_tree.pl -treefile NUCL-MT_SP.constr.nwk.branchlengths_rm -seqfile $sp_level_matrix -output NUCL-MT_SP.constr.nwk.branchlengths_rm.pruned

java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.1/lib/figtree.jar $*
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file NUCL-MT_SP.constr.nwk.branchlengths_rm


# do in 2 stagges, superamtrix of constrained members, then barcode only inclusinfg the rest.

# $remove_or_retain = 2

# .constr is file containing only constrained members.
# perl ~/usr_scripts/remove_fasta_entries.pl sp_matrix.relab.TL TL.list_of_constrained_members sp_matrix.relab.TL.constr
perl ~/usr_scripts/remove_fasta_entries.pl sp_matrix.relab.CS CS.list_of_constrained_members sp_matrix.relab.CS.constr


perl ~/usr_scripts/scan_fasta_filter_duplicate_IDs.pl sp_matrix.relab.m_rm m1

 # out of 9241 columns, only 365 rm, didnt bother re-running
perl ~/usr_scripts/alignment_processing/exclude_parsimony_uninformative.pl -in m1 -out m1b -data_type dna -remove_invar -remove_ambig
perl ~/usr_scripts/scan_fasta_to_phylip.pl m1 m1.phy


# test on loacl machine:
rm *ITOL2.NUCL-MT-SP
raxmlHPC-8.2.4 -s m1.phy -n ITOL2.NUCL-MT-SP -m GTRCAT -c 4 -p 123 -g NUCL-MT_SP.constr.nwk.branchlengths_rm
 -f c
-y 







	#       ***********     EACH ORDER      ***********

Perloidea

Tettigoniidae

# or each order trees:
current_order=Ephemeroptera # Zygentoma Odonata Ephemeroptera Plecoptera Orthoptera Phasmatodea Isoptera

# basic constraints:
taxa=(Zygentoma Odonata Ephemeroptera Plecoptera Orthoptera Phasmatodea Isoptera)
taxa=(Diptera Lepidoptera Coleoptera Hymenoptera Hemiptera)

#
# 25 oct 2016: 30 seperate trees is a bit much in a paper, try joining orders:
# 
# wingless and Paleopterous (WP):	Archaeognatha Zygentoma Odonata Ephemeroptera
# Polyneoptera ni Dictyoptera (Pol):	Embioptera Phasmatodea Orthoptera Plecoptera Dermaptera
# 	Dictyoptera (Dicty):		Mantodea Blattodea Isoptera (termites)
# Paraneoptera (Para):			Psocoptera Phthiraptera Thysanoptera Hemiptera 
# holometabolous (Hym)		 	Hymenoptera
# 	Neuropterida (Neur):		Neuroptera, Megaloptera, Raphidioptera
# 			(CS)		Coleoptera, Strepsiptera
#			(MSD)		Mecoptera, Siphonaptera, Diptera
# 			(TL)		Trichoptera, Lepidoptera


most the tree should be easy to compile:
(((((Neur)(CS))((MSD)(TL)))(Hymenoptera))(Para))

current_order=ParaBL # WP Pol Dicty Para Neur Hymenoptera MSD TL ParaBL

# this script stitches newick strings together.
perl ~/scripted_analyses/insect_TOL_analysis/scripts/combine_groups.pl

for i in ${!taxa[*]}; do current_order=${taxa[$i]};echo "number:$i gene:$current_order"
# perl ~/usr_scripts/format_conversion.pl sp_matrix.relab.$current_order sp_matrix.relab.$current_order.phy fasta phylip
# test readable:
 raxmlHPC-8.2.4 -f c -s sp_matrix.relab.$current_order.phy -n $current_order -m GTRCAT -c 4 -p 123 -g $current_order.basic_constraint_tree
# raxmlHPC-8.2.4 -s sp_matrix.relab.$current_order.phy -n $current_order -m GTRCAT -c 4 -p 123 -g $current_order.basic_constraint_tree
done

# constr2 has ambiguous sites removed
perl ~/usr_scripts/alignment_processing/exclude_parsimony_uninformative.pl -in sp_matrix.relab.CS.constr -out sp_matrix.relab.CS.constr2 -data_type dna -remove_invar -remove_ambig

# sp_matrix.relab.$current_order OR constraineds only:sp_matrix.relab.TL.constr
perl ~/usr_scripts/format_conversion.pl sp_matrix.relab.CS.constr2 sp_matrix.relab.CS.constr2.phy fasta phylip

rm RAxML_*.$current_order
raxmlHPC-8.2.4 -s sp_matrix.relab.TL.constr.phy -n $current_order -m GTRCAT -c 4 -p 123 -g $current_order.basic_constraint_tree

perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile RAxML_bestTree.$current_order -output RAxML_bestTree.$current_order.tax -node 6960 -newick
/usr/lib/jvm/java-6-openjdk-amd64/jre/bin/java -Xms64m -Xmx512m -jar /home/douglas/software/figtree/FigTree_v1.4.2/lib/figtree.jar $*
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_bestTree.$current_order.tax


# $high_definition = 0;
 tree=RAxML_bestTree.$current_order
# tree=RAxML_result.$current_order
# tree=/home/douglas/scripted_analyses/insect_TOL_analysis/backbone_tree/NUCL-MTcons.bootstrap.sumtrees.procd.reroot
# tree=/home/douglas/scripted_analyses/insect_TOL_analysis/mtgenomes/RAxML_bestTree.NUCL-MTcons.bootstrap.sumtrees
# current_order=backbone
perl ~/usr_scripts/read_newick_and_plot_tree.pl -plain -rlt null -kf NULL -rc null \
-pt $tree \
-of $current_order.pdf -rf plotting_r_commands


# some need re-rooting prior to stitching TOL together:

# RAxML_bestTree.ParaBL  -reroot_at INTERNAL_NODE_5229

perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.ParaBL -outprefix RAxML_bestTree.ParaBL -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_5229
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.WP -outprefix RAxML_bestTree.WP -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_2303
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.Pol -outprefix RAxML_bestTree.Pol -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_2608
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.Dicty -outprefix RAxML_bestTree.Dicty -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_1435
perl ~/usr_scripts/process_newick.pl -intree RAxML_bestTree.Neur -outprefix RAxML_bestTree.Neur -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_686

java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_bestTree.Neur.process_newick3









##################################################################################################


# 2017-02-05: too much ambiguity in the species-level tree for these species-rich orders,
# 	impossible to label even the most fundamental clades,
#	might have to go back to fasttree to enforce strict taxonomic boundaries.
#	can still use raxml for placing unlabelled barcodes in COI-only step.


# reminder, sp_matrix.relab. has all seqs, .constr has only constraineds, .constr2 has only constraineds, with ambiguous sites rm



# backbone.MSD.manually_pruned, backbone.CS.pruned, backbone.Hymenoptera, backbone.TL


perl ~/usr_scripts/read_deep_level_constraints.pl -node 6960 -seqfile sp_matrix.relab.MSD.constr2 -treefile backbone.MSD.manually_pruned
# rename to [file].MSD
perl ~/usr_scripts/read_deep_level_constraints.pl -node 6960 -seqfile sp_matrix.relab.TL.constr2 -treefile backbone.TL
perl ~/usr_scripts/read_deep_level_constraints.pl -node 6960 -seqfile sp_matrix.relab.CS.constr2 -treefile backbone.CS.pruned
perl ~/usr_scripts/read_deep_level_constraints.pl -node 6960 -seqfile sp_matrix.relab.Hymenoptera.constr2 -treefile backbone.Hymenoptera

fasttree_2.1.7 -log fasttree_logfile -gtr -gamma -nt -constraints ftcons.Hymenoptera < sp_matrix.relab.Hymenoptera.constr2 > FTout.Hymenoptera
fasttree_2.1.7 -log fasttree_logfile -gtr -gamma -nt -constraints ftcons.CS < sp_matrix.relab.CS.constr2 > FTout.CS
fasttree_2.1.7 -log fasttree_logfile -gtr -gamma -nt -constraints ftcons.MSD < sp_matrix.relab.MSD.constr2 > FTout.MSD
fasttree_2.1.7 -log fasttree_logfile -gtr -gamma -nt -constraints ftcons.TL < sp_matrix.relab.TL.constr2 > FTout.TL
# quick check trees are braodly ok:
perl ~/usr_scripts/species_to_complete_taxonomies.pl -seqfile FTout.MSD -output FTout.MSD.taxlabs -node 6960 -newick
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file FTout.MSD.taxlabs

# NOW GO down to section for SPECIES-RICH orders



##################################################################################################






# original constraints:

for i in ${!taxa[*]}; do current_order=${taxa[$i]};echo "number:$i gene:$current_order"
 rm RAx*$current_order.Constr1
 raxmlHPC-8.2.4 -s sp_matrix.relab.$current_order.phy -n $current_order.Constr1 -m GTRCAT -c 4 -p 123 -g $current_order.newick_constraint_tree2.branchlengths_rm
done

# rm ambig columns here! actually do above. also to speed up, omit unconstrained (mostly order-labeled bold seqs)
# in first stage.

# Hymenoptera.newick_constraint_tree2 .branchlengths_rm TL.newick_constraint_tree2.bifur MSD.newick_constraint_tree2.branchlengths_rm
raxmlHPC-8.2.4 -s sp_matrix.relab.Hymenoptera.constr2.phy -n Hymenoptera.Constr1b -m GTRCAT -c 4 -p 123 -g Hymenoptera.newick_constraint_tree2.branchlengths_rm


/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/Hymenoptera.basic_constraint_tree
/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.Hymenoptera.phy
/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/Coleoptera.basic_constraint_tree
/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.Para.phy
/home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/MSD.newick_constraint_tree2.branchlengths_rm
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.CS.constr2.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/sp_matrix.relab.CS.constr2.phy



gzip m1.phy
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/m1.phy.gz wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/m1.phy.gz
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/working_constr wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/working_constr

# logged on c;uster, modified sub12 for this infile, renamed sub50

# 
ssh -l wei 10.0.0.181 # wei789
cd /home/wei/DC/insect_TOL_analysis/
gunzip m1.phy.gz
qsub sub_NUCL-MT-SP
qstat -Q
qstat -f 223672.admin

/home/wei/software/standard-RAxML-master/raxmlHPC-SSE3

/sp_matrix.relab.MSD.COIonly.phy -n MSD.COIonly -g RAxML_result.CS.Constr1b

results=RAxML_result.MSD.Constr1b # RAxML_result.Hymenoptera.Constr1b  # RAxML_bestTree.ParaBL RAxML_result.Hymenoptera RAxML_result.Coleoptera RAxML_result.Hymenoptera

scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/$results .






# *******  for SPECIES-RICH orders, initial tree of constrained members is followed by coionly tree for all:



# go back up to script process_BOLD_ids.pl, to make COIonly file
# 2017-02: new FT trees from species-rich supermatrices:FTout.MSD, FTout.TL, FTout.CS, FTout.Hymenoptera



perl ~/usr_scripts/format_conversion.pl sp_matrix.relab.MSD.COIonly sp_matrix.relab.MSD.COIonly.phy fasta phylip
# also Hymenoptera, CS, TL
# test they run first locally:
raxmlHPC-8.2.4 -s sp_matrix.relab.MSD.COIonly.phy -n MSD.COIonly -m GTRCAT -c 4 -p 123 -g RAxML_result.MSD.Constr1b
raxmlHPC-8.2.4 -s sp_matrix.relab.Hymenoptera.COIonly.phy -n Hymenoptera.COIonly -m GTRCAT -c 4 -p 123 -g RAxML_result.Hymenoptera.Constr1b
# feb2017:
raxmlHPC-8.2.4 -s sp_matrix.relab.MSD.COIonly.phy -n MSD.FT.COIonly -m GTRCAT -c 4 -p 123 -g FTout.MSD


# send files to cluster:
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.TL.COIonly.phy wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/sp_matrix.relab.TL.COIonly.phy
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/FTout.MSD wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/FTout.MSD

# feb2017, running coi-only with new ft supermatrix trees:sub_MSD20 etc.


# bring resulat back
# scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_*.FT.COIonly .
rm RAxML_result.CS.FT.COIonly; scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_result.CS.FT.COIonly .
rm RAxML_result.Hymenoptera.FT.COIonly; scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_result.Hymenoptera.FT.COIonly .
rm RAxML_result.MSD.FT.COIonly; scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/RAxML_result.MSD.FT.COIonly .


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.CS.FT.COIonly -outprefix RAxML_result.CS.FT.COIonly -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_22638
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.Hymenoptera.FT.COIonly -outprefix RAxML_result.Hymenoptera.FT.COIonly -ncbi_tax_node 6960
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.MSD.FT.COIonly -outprefix RAxML_result.MSD.FT.COIonly -ncbi_tax_node 6960


java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_result.MSD.FT.COIonly.process_newick3





#
# TL is beyond raxml.... have to use ft
# there are several scripts that might do this
# fasttree_EPA.pl seems based on newick_backbone_to_fasttree_constraint_format.pl, 
# with the afvantage that one can reduce some tip level constraints to save memory
# read_deep_level_constraints.pl must have been renamed, i cant find it
#
# run first with $process_outfile = 0; 
# then run again with $process_outfile = 1, (reduce memory demand by ommiting tip-level constraints )
perl ~/usr_scripts/fasttree_EPA.pl -node 6960 -seqfile sp_matrix.relab.TL.COIonly -treefile TL.newick_constraint_tree2.branchlengths_rm


# test on local machine
/home/douglas/software/fasttree/FastTree -log fasttreeEPA_logfile -nosupport -gtr -gamma -nt -constraints fasttree_format_constraint.reduced < sp_matrix.relab.TL.COIonly > TL.ftEPAout

# send files to cluster:
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/fasttree_format_constraint.reduced wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/fasttree_format_constraint.reduced
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.TL.COIonly wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/sp_matrix.relab.TL.COIonly
scp /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/fasttree_job_submit wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/fasttree_job_submit

# bring home:
scp wei@10.0.0.181:/home/wei/DC/insect_TOL_analysis/TL.ftEPAout .

# check multifurcation, fasttreee usually makes these
perl ~/usr_scripts/check_multifurcations.pl TL.ftEPAout
# i count 8 multifurcations. these need resolving .. try raxml, if not, examl.
# perl ~/usr_scripts/format_conversion.pl sp_matrix.relab.TL.COIonly sp_matrix.relab.TL.COIonly.phy fasta phylip
#                                   big alignment                       output                   ft_constraint


parse-examl_3.0.17 -s sp_matrix.relab.TL.COIonly.phy -m DNA -n sp_matrix.relab.TL.COIonly.phy.exa_in
mpirun -n 1 examl_3.0.17 -S -D -e 1.0 -s sp_matrix.relab.TL.COIonly.phy.exa_in.binary -n TL.ftEPAout.exa -g TL.ftEPAout -m PSR -p 12345
# might crash the computer, but doesnt matter, will output the topology 


# plotting the species rich ...
# another script giving information
# 	CS: 	RAxML_result.CS.COIonly 	-reroot_at INTERNAL_NODE_3639
#	MSD: 	RAxML_result.MSD.COIonly 	-reroot_at INTERNAL_NODE_45553
#	TL:	ExaML_result.TL.ftEPAout.exa	-reroot_at INTERNAL_NODE_31089
# in this instance dont choose too big ncbi tax node, it might slow the process further..


perl ~/usr_scripts/process_newick.pl -intree RAxML_result.CS.COIonly -outprefix RAxML_result.CS.COIonly -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_3639
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.MSD.COIonly -outprefix RAxML_result.MSD.COIonly -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_45553
perl ~/usr_scripts/process_newick.pl -intree ExaML_result.TL.ftEPAout.exa -outprefix ExaML_result.TL.ftEPAout.exa -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_31089
perl ~/usr_scripts/process_newick.pl -intree RAxML_result.Hymenoptera.COIonly -outprefix RAxML_result.Hymenoptera.COIonly -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_4827

RAxML_result.Hymenoptera.COIonly

# RAxML_result.MSD.COIonly.process_newick3 RAxML_result.CS.COIonly.process_newick3

java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file RAxML_result.Hymenoptera.COIonly.process_newick3


# why is pyraloidea polyphyletic, split in two.
# ok, the lep tree in particular is a mess. not suprising given its excessive size.
# will need more careful analysis in next iteration.









cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/








##################################################################################################



 	#  most species level inference is done, collate results.
	# run in same folder as you made all the seperate trees:




cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/




# list of groups:
#	WP Pol Dicty Para Neur Hymenoptera MSD TL CS

# list of trees:
# 	RAxML_bestTree.WP RAxML_bestTree.Pol RAxML_bestTree.Dicty RAxML_bestTree.ParaBL RAxML_bestTree.Neur  
#	RAxML_result.CS.COIonly RAxML_result.Hymenoptera.COIonly RAxML_result.MSD.COIonly ExaML_result.TL.ftEPAout.exa

# all have been re-rooted:
# RAxML_result.CS.COIonly.process_newick0 RAxML_result.MSD.COIonly.process_newick0 ExaML_result.TL.ftEPAout.exa.process_newick0
# 	RAxML_result.Hymenoptera.COIonly.process_newick0 RAxML_bestTree.ParaBL.process_newick0 RAxML_bestTree.WP.process_newick0 
# 	RAxML_bestTree.Pol.process_newick0 RAxML_bestTree.Dicty.process_newick0 RAxML_bestTree.Neur.process_newick0
#
# use strict fasttree constraints:
# RAxML_result.CS.FT.COIonly RAxML_result.Hymenoptera.FT.COIonly RAxML_result.MSD.FT.COIonly
#
#


	# need to run this in stages, make neoptera tree first, 
	# easy part, Paraneoptera+Holometabola:
rm stitch_together_PH
perl ~/scripted_analyses/insect_TOL_analysis/scripts/stitch_together_TOL.pl 1
# open POL tree and find nodeID in which Dicty needs inserting (unexpected that nodeID was same after rerooting)
java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/RAxML_bestTree.Pol.process_newick3
# write node id into script then:
rm stitch_together_NEOP
perl ~/scripted_analyses/insect_TOL_analysis/scripts/stitch_together_TOL.pl 2
# again, confirm node ID for insertion of neoptera sister to paeloptera, then:
rm stitch_together_ITOL1 stitch_together_ITOL2 stitch_together_ITOL3
perl ~/scripted_analyses/insect_TOL_analysis/scripts/stitch_together_TOL.pl 3



# perl ~/usr_scripts/process_newick.pl -intree RAxML_result.CS.COIonly -outprefix RAxML_result.CS.COIonly -ncbi_tax_node 6960 -reroot_at INTERNAL_NODE_3639



# test :
perl ~/usr_scripts/process_newick.pl -plot_tree -intree /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/RAxML_result.CS.FT.COIonly -outprefix test_OUT2 -ncbi_tax_node 6960
R < r_commands_filename --vanilla --slave

# print ITOL:

perl ~/usr_scripts/process_newick.pl -remove_polytomies -intree stitch_together_ITOL1 -outprefix stitch_together_ITOL1
perl ~/usr_scripts/process_newick.pl -plot_tree -intree stitch_together_ITOL1.poly_rm -outprefix stitch_together_ITOL1.poly_rm -ncbi_tax_node 6960

perl ~/scripted_analyses/insect_TOL_analysis/scripts/label_printing_commands_for_sp_level_tree.pl

# major nodes to be highlighted:
# in paint clades sub of script

# change settings for postscript
# grey lwd  lwd = 0.5);  lwd = 16) to lwd = 2); cex = 2, to cex = 3,
# also offset for internal labels need reducing.
# tiff runs in  r script adjusted for EPS
postscript("ITOL2_species_level.eps", width=3000, height=4800) # looks squat either way ...
tiff(filename = "ITOL2_species_level.tiff", width = 9000 , height = 11000, units="px", res=600, compression = "jpeg")




java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file stitch_together_OUT3


# see if theres minor errors in the newick string, will examl read it:
# /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.all.COIonly
# has 247585
perl ~/usr_scripts/format_conversion.pl /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.all.COIonly sp_matrix.relab.all.COIonly.phy fasta phylip

parse-examl_3.0.17 -s sp_matrix.relab.all.COIonly.phy -m DNA -n sp_matrix.relab.all.COIonly.phy.exa_in
mpirun -n 1 examl_3.0.17 -S -D -e 1.0 -s sp_matrix.relab.all.COIonly.phy.exa_in.binary -n iTOL.exa -g stitch_together_OUT1 -m PSR -p 12345
raxmlHPC-8.2.4 -s sp_matrix.relab.all.COIonly.phy -n all.COIonly -m GTRCAT -c 4 -p 123 -g stitch_together_OUT1



# quite a lot less entries in the final compiled tree than expected, need to track down
# also minor problems need adjusting for, 4 dupliucated lables:
# Plecoptera_major, Plecoptera_quaesita, Plecoptera_violacea, Trichopterapion_holosericeum
# need to make fasta file of seqs that presicly overlap new tree.

perl ~/scripted_analyses/insect_TOL_analysis/scripts/check_newick_fasta_overlap.pl -tree stitch_together_OUT1 -fasta /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/sp_matrix.relab.all.COIonly

# get branchlengths with fasttree; -nome -mllen -intree: optimize blengths for fixed topology
# usually creates polytomies, although might not need fully bifurcating tree in this case
fasttree_2.1.7 -nosupport -gtr -gamma -nt -nome -mllen -intree equiv_tree < overlapping > overlapping.FtBl






cd /home/douglas/scripted_analyses/insect_TOL_analysis/species_level_tree/







##################################################################################################

MARCH 2017:
print trees for paper:
# wingless and Paleopterous (WP):	Archaeognatha Zygentoma Odonata Ephemeroptera
# Polyneoptera ni Dictyoptera (Pol):	Embioptera Phasmatodea Orthoptera Plecoptera Dermaptera
# 	Dictyoptera (Dicty):		Mantodea Blattodea Isoptera (termites)
# Paraneoptera (Para):			Psocoptera Phthiraptera Thysanoptera Hemiptera 
# holometabolous (Hym)		 	Hymenoptera
# 	Neuropterida (Neur):		Neuroptera, Megaloptera, Raphidioptera
# 			(CS)		Coleoptera, Strepsiptera
#			(MSD)		Mecoptera, Siphonaptera, Diptera
# 			(TL)		Trichoptera, Lepidoptera





cd /home/douglas/scripted_analyses/insect_TOL_analysis/figures/trees_for_paper/spring2017/





# NUCL-MT backbone, has boot support, no branchlengths, no higher tax labels:NUCL-MTcons.bootstrap.sumtrees.procd

# open in archeopterxy, delete nodes to leave subtree of interest, save as newick.

java -cp ~/software/archeopteryx/forester_1034.jar org.forester.archaeopteryx.Archaeopteryx -c ~/software/archeopteryx/config_file NUCL-MTcons.bootstrap.sumtrees.procd








perl ~/usr_scripts/process_newick.pl -intree WP_backbone -outprefix WP_backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree Poly.backbone -outprefix Poly.backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree Dicty.backbone -outprefix Dicty.backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree Para.backbone -outprefix Para.backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree Hym.backbone -outprefix Hym.backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree Neur.backbone -outprefix Neur.backbone -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree CS.backbone.Boot -outprefix CS.backbone.Boot -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree MSD.backbone.Boot -outprefix MSD.backbone.Boot -ncbi_tax_node 6960 -plot_tree
perl ~/usr_scripts/process_newick.pl -intree TL.backbone.Boot -outprefix TL.backbone.Boot -ncbi_tax_node 6960 -plot_tree













##################################################################################################









# ignore the rest:
# this script parses the screen output above, then infers the taxonomic constraint heirachy, and writes tre
# perl ~/scripted_analyses/insect_TOL_analysis/scripts/write_raxml_taxonomic_constraint_tree.pl screenout
# hmmp, since this is quite awkward, and actually theres only about 30 constraints,
# make this manually, allows me to consider each one, evidence for each,
# maybe some morphological ones can be added, 
# so , just need a script to print taxonomic names onto nodes and list species-level data presence,
# to facilitate this.
# perl /home/douglas/usr_scripts/taxonomic_report.pl -seqfile $sp_level_matrix -fasta -node 6960 -output sp_matrix.tax_report






##########################################################################################################################



##########################################################################################################################


